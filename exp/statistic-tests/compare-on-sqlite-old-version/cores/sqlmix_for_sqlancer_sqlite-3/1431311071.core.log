GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000606,sig:06,src:020969+012652,time:25501600,execs:8308167,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [PRAGMA cache_size=10
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;SELECT *, '|'
      FROM pragma_foreign_key_check AS x
      ORDER BY x."table";]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    0 0             01 usesStmtJournal=0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    7    0 k(1,B)        00 
   2 VOpen            0    0    0 vtab:1F681D0  00 
   3 Explain          3    0    0 SCAN TABLE pragma_foreign_key_check AS x VIRTUAL TABLE INDEX 0: 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 VFilter          0   15    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA foreign_key_check]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2   10    7               00 7 columns in r[10]
  17 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;SELECT unicode('€');]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 €           00 r[3]='€'
REG[3] =   t3[...](8)
   6 Function0        1    3    2 unicode(1)    01 r[2]=func(r[3])
REG[3] =   t3[...](8)
REG[2] =  i:8364
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  i:8364
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:8364
   4 Halt             0    0    0               00 
SQL: [select zeroblob(-100)
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer       -100    3    0               00 r[3]=-100
REG[3] =  i:-100
   6 Function0        1    3    2 zeroblob(1)   01 r[2]=func(r[3])
REG[3] =  i:-100
REG[2] =  s0[]+0z
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =  s0[]
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  s0[]
   4 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) == (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               4    1    3               69 r[1] = (r[3]==r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               4    1    3               69 r[1] = (r[3]!=r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:0
  27 IfNot            1   29    0               00 
REG[1] =  i:0
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 0, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:0
REG[1] =  i:1
  27 If               1   29    0               00 
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               E9 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) == (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 IfNot            1    7    0               00 
REG[1] =  NULL
   4 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) != (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 If               1    7    0               00 
REG[1] =  NULL
   4 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) IS NOT (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) == (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 IfNot            1   29    0               00 
REG[1] =  NULL
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) == (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               69 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) == (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               69 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               4    1    2               69 r[1] = (r[2]==r[4])
REG[4] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) != (SELECT 1, 1, 2)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          2   10    0               00 r[10]=2
REG[10] =  i:2
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:2
REG[5] =  i:1
REG[1] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Lt               4    1    4               61 r[1] = (r[4]<r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(x, collate4t1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x, collate4t1) 00 r[10]='CREATE TABLE t1(x, collate4t1)'
REG[10] =   t30[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s46[0617111101497461626C657431743102.....Itablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s46[0617111101497461626C657431743102.....Itablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s30[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(3, 6);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    1 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          6    3    0               00 r[3]=6
REG[3] =  i:6
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010306.....]
   6 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010306.....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;
;SELECT (1, 1) == (SELECT collate4t1,x FROM t1 ORDER BY x)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    1 0             01 usesStmtJournal=0
  34 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         27    2    0               00 r[2]=27; return address
REG[2] =  i:27
   3 Once             0   27    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   22    0               00 
  11 Column           0    1    3               00 r[3]=t1.collate4t1
REG[3] =  i:6
  12 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:3
  13 Sequence         1    7    0               00 r[7]=cursor[1].ctr++
REG[7] =  i:0
  14 Move             3    8    1               00 r[8]=r[3]
REG[8] =  i:6
  15 IfNotZero        5   19    0               00 if r[5]!=0 then r[5]--, goto 19
REG[5] =  i:1
  19 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s6[040108010306......]
  20 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s6[040108010306......]
  21 Next             0   11    0               01 
  22 Explain         22    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  23 Sort             1   27    0               00 
  24 Column           1    0    4               00 r[4]=x
REG[4] =  i:3
  25 Column           1    2    3               00 r[3]=collate4t1
REG[3] =  i:6
  26 Next             1   24    0               00 
  27 Return           2    0    0               00 
REG[2] =  i:27
  28 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  i:6
REG[10] =  i:1
REG[1] =  i:0
  29 IfNot            1   31    0               00 
REG[1] =  i:0
  31 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  32 Halt             0    0    0               00 
SQL: [SELECT (1, 1) == (SELECT * FROM t1 ORDER BY x)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    1 0             01 usesStmtJournal=0
  34 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         27    2    0               00 r[2]=27; return address
REG[2] =  i:27
   3 Once             0   27    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   22    0               00 
  11 Column           0    1    3               00 r[3]=t1.collate4t1
REG[3] =  i:6
  12 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:3
  13 Sequence         1    7    0               00 r[7]=cursor[1].ctr++
REG[7] =  i:0
  14 Move             3    8    1               00 r[8]=r[3]
REG[8] =  i:6
  15 IfNotZero        5   19    0               00 if r[5]!=0 then r[5]--, goto 19
REG[5] =  i:1
  19 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s6[040108010306......]
  20 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s6[040108010306......]
  21 Next             0   11    0               01 
  22 Explain         22    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  23 Sort             1   27    0               00 
  24 Column           1    2    4               00 r[4]=collate4t1
REG[4] =  i:6
  25 Column           1    0    3               00 r[3]=x
REG[3] =  i:3
  26 Next             1   24    0               00 
  27 Return           2    0    0               00 
REG[2] =  i:27
  28 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  i:3
REG[10] =  i:1
REG[1] =  i:0
  29 IfNot            1   31    0               00 
REG[1] =  i:0
  31 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  32 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY collate4t1, x)
  
;]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    0    1 0             01 usesStmtJournal=0
  43 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         36    6    0               00 r[6]=36; return address
REG[6] =  i:36
  13 Once             0   36    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,B,B)      00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   31    0               00 
  21 Column           0    1   10               00 r[10]=t1.collate4t1
REG[10] =  i:6
  22 Column           0    0   11               00 r[11]=t1.x
REG[11] =  i:3
  23 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  24 IfNotZero        9   28    0               00 if r[9]!=0 then r[9]--, goto 28
REG[9] =  i:1
  28 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s6[040101080603......]
  29 IdxInsert        1   13   10 3             00 key=r[13]
REG[13] =  s6[040101080603......]
  30 Next             0   21    0               01 
  31 Explain         31   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  32 Sort             1   36    0               00 
  33 Column           1    0    8               00 r[8]=collate4t1
REG[8] =  i:6
  34 Column           1    1    7               00 r[7]=x
REG[7] =  i:3
  35 Next             1   33    0               00 
  36 Return           6    0    0               00 
REG[6] =  i:36
  37 Eq               7    1    3 (BINARY)      61 r[1] = (r[3]==r[7])
REG[7] =  i:3
REG[3] =  i:0
REG[1] =  i:0
  38 IfNot            1   40    0               00 
REG[1] =  i:0
  40 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  41 Halt             0    0    0               00 
SQL: [SELECT (3, 6) == (SELECT x,x FROM t1 ORDER BY x DESC, x DESC)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    1 0             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          6   12    0               00 r[12]=6
REG[12] =  i:6
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,-B)    00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   23    0               00 
  11 Column           0    0    3               00 r[3]=t1.x
REG[3] =  i:3
  12 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:3
  13 Column           0    0    7               00 r[7]=t1.x
REG[7] =  i:3
  14 Sequence         1    8    0               00 r[8]=cursor[1].ctr++
REG[8] =  i:0
  15 Move             3    9    1               00 r[9]=r[3]
REG[9] =  i:3
  16 IfNotZero        5   20    0               00 if r[5]!=0 then r[5]--, goto 20
REG[5] =  i:1
  20 MakeRecord       6    4   10               00 r[10]=mkrec(r[6..9])
REG[10] =  s8[0501010801030303........]
  21 IdxInsert        1   10    6 4             00 key=r[10]
REG[10] =  s8[0501010801030303........]
  22 Next             0   11    0               01 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  25 Column           1    1    4               00 r[4]=x
REG[4] =  i:3
  26 Column           1    3    3               00 r[3]=x
REG[3] =  i:3
  27 Next             1   25    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  i:3
REG[11] =  i:3
REG[1] =  i:1
  30 IfNot            1   32    0               00 
REG[1] =  i:1
  31 Eq               4    1   12 (BINARY)      69 r[1] = (r[12]==r[4])
REG[4] =  i:3
REG[12] =  i:6
REG[1] =  i:0
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  33 Halt             0    0    0               00 
SQL: [SELECT (3, 6) == (SELECT * FROM t1 ORDER BY x DESC, x DESC)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    1 0             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          6   12    0               00 r[12]=6
REG[12] =  i:6
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,-B)    00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   23    0               00 
  11 Column           0    1    3               00 r[3]=t1.collate4t1
REG[3] =  i:6
  12 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:3
  13 Column           0    0    7               00 r[7]=t1.x
REG[7] =  i:3
  14 Sequence         1    8    0               00 r[8]=cursor[1].ctr++
REG[8] =  i:0
  15 Move             3    9    1               00 r[9]=r[3]
REG[9] =  i:6
  16 IfNotZero        5   20    0               00 if r[5]!=0 then r[5]--, goto 20
REG[5] =  i:1
  20 MakeRecord       6    4   10               00 r[10]=mkrec(r[6..9])
REG[10] =  s8[0501010801030306........]
  21 IdxInsert        1   10    6 4             00 key=r[10]
REG[10] =  s8[0501010801030306........]
  22 Next             0   11    0               01 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  25 Column           1    3    4               00 r[4]=collate4t1
REG[4] =  i:6
  26 Column           1    1    3               00 r[3]=x
REG[3] =  i:3
  27 Next             1   25    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  i:3
REG[11] =  i:3
REG[1] =  i:1
  30 IfNot            1   32    0               00 
REG[1] =  i:1
  31 Eq               4    1   12 (BINARY)      69 r[1] = (r[12]==r[4])
REG[4] =  i:6
REG[12] =  i:6
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY x DESC, collate4t1 DESC)
  
;]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    0    1 0             01 usesStmtJournal=0
  43 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         36    6    0               00 r[6]=36; return address
REG[6] =  i:36
  13 Once             0   36    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,-B)    00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   31    0               00 
  21 Column           0    0   10               00 r[10]=t1.x
REG[10] =  i:3
  22 Column           0    1   11               00 r[11]=t1.collate4t1
REG[11] =  i:6
  23 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  24 IfNotZero        9   28    0               00 if r[9]!=0 then r[9]--, goto 28
REG[9] =  i:1
  28 MakeRecord      10    3   13               00 r[13]=mkrec(r[10..12])
REG[13] =  s6[040101080306......]
  29 IdxInsert        1   13   10 3             00 key=r[13]
REG[13] =  s6[040101080306......]
  30 Next             0   21    0               01 
  31 Explain         31   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  32 Sort             1   36    0               00 
  33 Column           1    1    8               00 r[8]=collate4t1
REG[8] =  i:6
  34 Column           1    0    7               00 r[7]=x
REG[7] =  i:3
  35 Next             1   33    0               00 
  36 Return           6    0    0               00 
REG[6] =  i:36
  37 Eq               7    1    3 (BINARY)      61 r[1] = (r[3]==r[7])
REG[7] =  i:3
REG[3] =  i:0
REG[1] =  i:0
  38 IfNot            1   40    0               00 
REG[1] =  i:0
  40 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  41 Halt             0    0    0               00 
SQL: [SELECT ((3, 5)) == (SELECT * FROM t1 ORDER BY x DESC, collate4t1)
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    0    1 0             01 usesStmtJournal=0
  33 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  34 Integer          5   11    0               00 r[11]=5
REG[11] =  i:5
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         26    2    0               00 r[2]=26; return address
REG[2] =  i:26
   3 Once             0   26    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:3
  12 Column           0    1    7               00 r[7]=t1.collate4t1
REG[7] =  i:6
  13 Sequence         1    8    0               00 r[8]=cursor[1].ctr++
REG[8] =  i:0
  14 IfNotZero        5   18    0               00 if r[5]!=0 then r[5]--, goto 18
REG[5] =  i:1
  18 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s6[040101080306......]
  19 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s6[040101080306......]
  20 Next             0   11    0               01 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             1   26    0               00 
  23 Column           1    1    4               00 r[4]=collate4t1
REG[4] =  i:6
  24 Column           1    0    3               00 r[3]=x
REG[3] =  i:3
  25 Next             1   23    0               00 
  26 Return           2    0    0               00 
REG[2] =  i:26
  27 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  i:3
REG[10] =  i:3
REG[1] =  i:1
  28 IfNot            1   30    0               00 
REG[1] =  i:1
  29 Eq               4    1   11 (BINARY)      69 r[1] = (r[11]==r[4])
REG[4] =  i:6
REG[11] =  i:5
REG[1] =  i:0
  30 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  31 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY x DESC, collate4t1) == (SELECT * FROM t1 ORDER BY x DESC, collate4t1)
  
;]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    0    1 0             01 usesStmtJournal=0
  58 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         26    2    0               00 r[2]=26; return address
REG[2] =  i:26
   3 Once             0   26    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    2    5    0 k(2,-B,B)     00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:3
  12 Column           0    1    7               00 r[7]=t1.collate4t1
REG[7] =  i:6
  13 Sequence         2    8    0               00 r[8]=cursor[2].ctr++
REG[8] =  i:0
  14 IfNotZero        5   18    0               00 if r[5]!=0 then r[5]--, goto 18
REG[5] =  i:1
  18 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s6[040101080306......]
  19 IdxInsert        2    9    6 3             00 key=r[9]
REG[9] =  s6[040101080306......]
  20 Next             0   11    0               01 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   26    0               00 
  23 Column           2    1    4               00 r[4]=collate4t1
REG[4] =  i:6
  24 Column           2    0    3               00 r[3]=x
REG[3] =  i:3
  25 Next             2   23    0               00 
  26 Return           2    0    0               00 
REG[2] =  i:26
  27 Integer         51   10    0               00 r[10]=51; return address
REG[10] =  i:51
  28 Once             0   51    0               00 
  29 Explain         29    0    0 SCALAR SUBQUERY 2 00 
  30 Null             0   11   12               00 r[11..12]=NULL; Init subquery result
REG[11] =  NULL
  31 OpenEphemeral    3    5    0 k(2,-B,B)     00 nColumn=5
  32 Integer          1   13    0               00 r[13]=1; LIMIT counter
REG[13] =  i:1
  33 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  34 Explain         34   29    0 SCAN TABLE t1 00 
  35 Rewind           1   46    0               00 
  36 Column           1    0   14               00 r[14]=t1.x
REG[14] =  i:3
  37 Column           1    1   15               00 r[15]=t1.collate4t1
REG[15] =  i:6
  38 Sequence         3   16    0               00 r[16]=cursor[3].ctr++
REG[16] =  i:0
  39 IfNotZero       13   43    0               00 if r[13]!=0 then r[13]--, goto 43
REG[13] =  i:1
  43 MakeRecord      14    3   17               00 r[17]=mkrec(r[14..16])
REG[17] =  s6[040101080306......]
  44 IdxInsert        3   17   14 3             00 key=r[17]
REG[17] =  s6[040101080306......]
  45 Next             1   36    0               01 
  46 Explain         46   29    0 USE TEMP B-TREE FOR ORDER BY 00 
  47 Sort             3   51    0               00 
  48 Column           3    1   12               00 r[12]=collate4t1
REG[12] =  i:6
  49 Column           3    0   11               00 r[11]=x
REG[11] =  i:3
  50 Next             3   48    0               00 
  51 Return          10    0    0               00 
REG[10] =  i:51
  52 Eq              11    1    3 (BINARY)      61 r[1] = (r[3]==r[11])
REG[11] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  53 IfNot            1   55    0               00 
REG[1] =  i:1
  54 Eq              12    1    4 (BINARY)      69 r[1] = (r[4]==r[12])
REG[12] =  i:6
REG[4] =  i:6
  55 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  56 Halt             0    0    0               00 
SQL: [SELECT (SELECT 0, 0) == (SELECT * FROM t1 ORDER BY x DESC, x)
  
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    0    1 0             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   33    0               00 
  21 Column           0    1    7               00 r[7]=t1.collate4t1
REG[7] =  i:6
  22 Column           0    0   10               00 r[10]=t1.x
REG[10] =  i:3
  23 Column           0    0   11               00 r[11]=t1.x
REG[11] =  i:3
  24 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  25 Move             7   13    1               00 r[13]=r[7]
REG[13] =  i:6
  26 IfNotZero        9   30    0               00 if r[9]!=0 then r[9]--, goto 30
REG[9] =  i:1
  30 MakeRecord      10    4   14               00 r[14]=mkrec(r[10..13])
REG[14] =  s8[0501010801030306........]
  31 IdxInsert        1   14   10 4             00 key=r[14]
REG[14] =  s8[0501010801030306........]
  32 Next             0   21    0               01 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  35 Column           1    3    8               00 r[8]=collate4t1
REG[8] =  i:6
  36 Column           1    1    7               00 r[7]=x
REG[7] =  i:3
  37 Next             1   35    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3 (BINARY)      61 r[1] = (r[3]==r[7])
REG[7] =  i:3
REG[3] =  i:0
REG[1] =  i:0
  40 IfNot            1   42    0               00 
REG[1] =  i:0
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  43 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, 2) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               5    4    3               61 r[4] = (r[3]>=r[5])
REG[5] =  i:2
REG[3] =  i:2
REG[4] =  i:1
   5 Lt               7    6    2               61 r[6] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[6] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              6    4    1               00 r[1]=(r[6] && r[4])
REG[6] =  i:1
REG[4] =  i:1
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Integer          3    8    0               00 r[8]=3
REG[8] =  i:3
  16 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               6    4    3               61 r[4] = (r[3]>=r[6])
REG[6] =  NULL
REG[3] =  i:2
REG[4] =  NULL
   5 Lt               8    7    2               61 r[7] = (r[2]<r[8])
REG[8] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  NULL
REG[1] =  NULL
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [SELECT (2, 4) IN (SELECT * FROM t1)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    1 0             01 usesStmtJournal=0
  35 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
  36 Integer          4    8    0               00 r[8]=4
REG[8] =  i:4
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    3    0               00 r[3]=16; return address
REG[3] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    4               00 r[4]=t1.x
REG[4] =  i:3
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:6
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010306.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010306.....]
  15 Next             0   11    0               01 
  16 Return           3    0    0               00 
REG[3] =  i:16
  17 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    2               80 r[2]=first_entry_in(1)
REG[2] =  i:3
  20 Affinity         7    2    0 AA            00 affinity(r[7..8])
  21 Found            1   30    7 2             00 key=r[7..8]
REG[7] =  i:2
REG[8] =  i:4
  22 Rewind           1   31    0               00 
  23 Column           1    0    6               00 r[6]=
REG[6] =  i:3
  24 Ne               7   28    6               00 if r[6]!=r[7] goto 28
REG[7] =  i:2
REG[6] =  i:3
  28 Next             1   23    0               00 
  29 Goto             0   31    0               00 end IN expr
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  33 Halt             0    0    0               00 
SQL: [SELECT (3, 4) IN (SELECT * FROM t1)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    1 0             01 usesStmtJournal=0
  35 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  36 Integer          4    8    0               00 r[8]=4
REG[8] =  i:4
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    3    0               00 r[3]=16; return address
REG[3] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    4               00 r[4]=t1.x
REG[4] =  i:3
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:6
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010306.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010306.....]
  15 Next             0   11    0               01 
  16 Return           3    0    0               00 
REG[3] =  i:16
  17 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    2               80 r[2]=first_entry_in(1)
REG[2] =  i:3
  20 Affinity         7    2    0 AA            00 affinity(r[7..8])
  21 Found            1   30    7 2             00 key=r[7..8]
REG[7] =  i:3
REG[8] =  i:4
  22 Rewind           1   31    0               00 
  23 Column           1    0    6               00 r[6]=
REG[6] =  i:3
  24 Ne               7   28    6               00 if r[6]!=r[7] goto 28
REG[7] =  i:3
REG[6] =  i:3
  25 Column           1    1    6               00 r[6]=
REG[6] =  i:6
  26 Ne               8   28    6               00 if r[6]!=r[8] goto 28
REG[8] =  i:4
REG[6] =  i:6
  28 Next             1   23    0               00 
  29 Goto             0   31    0               00 end IN expr
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  33 Halt             0    0    0               00 
SQL: [SELECT (NULL, 4) IN (SELECT * FROM t1)
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    1 0             01 usesStmtJournal=0
  36 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  37 Integer          4    8    0               00 r[8]=4
REG[8] =  i:4
  38 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    3    0               00 r[3]=16; return address
REG[3] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    4               00 r[4]=t1.x
REG[4] =  i:3
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:6
  13 MakeRecord       4    2    6 AA            00 r[6]=mkrec(r[4..5])
REG[6] =  s5[0301010306.....]
  14 IdxInsert        1    6    4 2             00 key=r[6]
REG[6] =  s5[0301010306.....]
  15 Next             0   11    0               01 
  16 Return           3    0    0               00 
REG[3] =  i:16
  17 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    2               80 r[2]=first_entry_in(1)
REG[2] =  i:3
  20 IsNull           7   23    0               00 if r[7]==NULL goto 23
REG[7] =  NULL
  23 Rewind           1   32    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:3
  25 Ne               7   29    6               00 if r[6]!=r[7] goto 29
REG[7] =  NULL
REG[6] =  i:3
  26 Column           1    1    6               00 r[6]=
REG[6] =  i:6
  27 Ne               8   29    6               00 if r[6]!=r[8] goto 29
REG[8] =  i:4
REG[6] =  i:6
  29 Next             1   24    0               00 
  30 Goto             0   32    0               00 end IN expr
  32 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  NULL
  33 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  34 Halt             0    0    0               00 
SQL: [SELECT (NULL, 4) NOT IN (SELECT * FROM t1)
;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    1 0             01 usesStmtJournal=0
  37 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  38 Integer          4    9    0               00 r[9]=4
REG[9] =  i:4
  39 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    4    0               00 r[4]=16; return address
REG[4] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    5               00 r[5]=t1.x
REG[5] =  i:3
  12 Column           0    1    6               00 r[6]=t1.collate4t1
REG[6] =  i:6
  13 MakeRecord       5    2    7 AA            00 r[7]=mkrec(r[5..6])
REG[7] =  s5[0301010306.....]
  14 IdxInsert        1    7    5 2             00 key=r[7]
REG[7] =  s5[0301010306.....]
  15 Next             0   11    0               01 
  16 Return           4    0    0               00 
REG[4] =  i:16
  17 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    3               80 r[3]=first_entry_in(1)
REG[3] =  i:3
  20 IsNull           8   23    0               00 if r[8]==NULL goto 23
REG[8] =  NULL
  23 Rewind           1   32    0               00 
  24 Column           1    0    7               00 r[7]=
REG[7] =  i:3
  25 Ne               8   29    7               00 if r[7]!=r[8] goto 29
REG[8] =  NULL
REG[7] =  i:3
  26 Column           1    1    7               00 r[7]=
REG[7] =  i:6
  27 Ne               9   29    7               00 if r[7]!=r[9] goto 29
REG[9] =  i:4
REG[7] =  i:6
  29 Next             1   24    0               00 
  30 Goto             0   32    0               00 end IN expr
  32 AddImm           2    0    0               00 r[2]=r[2]+0
REG[2] =  NULL
  33 Not              2    1    0               00 r[1]= !r[2]
REG[2] =  i:0
REG[1] =  i:1
  34 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  35 Halt             0    0    0               00 
SQL: [SELECT (NULL, 0) NOT IN (SELECT * FROM t1)
;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    1 0             01 usesStmtJournal=0
  37 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  38 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  39 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 Noop             0    0    0               00 begin IN expr
   4 Integer         16    4    0               00 r[4]=16; return address
REG[4] =  i:16
   5 Once             0   16    0               00 
   6 OpenEphemeral    1    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 1
   7 Explain          7    0    0 LIST SUBQUERY 1 00 
   8 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   9 Explain          9    7    0 SCAN TABLE t1 00 
  10 Rewind           0   16    0               00 
  11 Column           0    0    5               00 r[5]=t1.x
REG[5] =  i:3
  12 Column           0    1    6               00 r[6]=t1.collate4t1
REG[6] =  i:6
  13 MakeRecord       5    2    7 AA            00 r[7]=mkrec(r[5..6])
REG[7] =  s5[0301010306.....]
  14 IdxInsert        1    7    5 2             00 key=r[7]
REG[7] =  s5[0301010306.....]
  15 Next             0   11    0               01 
  16 Return           4    0    0               00 
REG[4] =  i:16
  17 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  18 Rewind           1   20    0               00 
  19 Column           1    0    3               80 r[3]=first_entry_in(1)
REG[3] =  i:3
  20 IsNull           8   23    0               00 if r[8]==NULL goto 23
REG[8] =  NULL
  23 Rewind           1   32    0               00 
  24 Column           1    0    7               00 r[7]=
REG[7] =  i:3
  25 Ne               8   29    7               00 if r[7]!=r[8] goto 29
REG[8] =  NULL
REG[7] =  i:3
  26 Column           1    1    7               00 r[7]=
REG[7] =  i:6
  27 Ne               9   29    7               00 if r[7]!=r[9] goto 29
REG[9] =  i:0
REG[7] =  i:6
  29 Next             1   24    0               00 
  30 Goto             0   32    0               00 end IN expr
  32 AddImm           2    0    0               00 r[2]=r[2]+0
REG[2] =  NULL
  33 Not              2    1    0               00 r[1]= !r[2]
REG[2] =  i:0
REG[1] =  i:1
  34 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  35 Halt             0    0    0               00 
SQL: [CREATE TABLE a(collate4i1, xyz, b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  20 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE a(collate4i1, xyz, b) 00 r[10]='CREATE TABLE a(collate4i1, xyz, b)'
REG[10] =   t34[CREATE TABLE a(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s48[06170F0F01517461626C656161034352.....Qtableaa.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s48[06170F0F01517461626C656161034352.....Qtableaa.CR]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s34[CREATE TABLE a(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[a](8)
REG[5] =  i:3
REG[6] =   s34[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO a VALUES('DEF', 2, 'iv');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 DEF           00 r[2]='DEF'
REG[2] =   t3[DEF](8)
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 String8          0    4    0 iv            00 r[4]='iv'
REG[4] =   t2[iv](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s10[04130111444546026976....DEF.iv]
   7 Insert           0    5    1 a             39 intkey=r[1] data=r[5]
REG[5] =  s10[04130111444546026976....DEF.iv]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [;INSERT INTO a VALUES('GHI', 3, 'v');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 GHI           00 r[2]='GHI'
REG[2] =   t3[GHI](8)
   4 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   5 String8          0    4    0 v             00 r[4]='v'
REG[4] =   t1[v](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s9[0413010F4748490376....GHI.v]
   7 Insert           0    5    1 a             39 intkey=r[1] data=r[5]
REG[5] =  s9[0413010F4748490376....GHI.v]
REG[1] =  i:2
   8 Halt             0    0    0               00 
SQL: [;
;SELECT collate4t1 FROM t1 WHERE (x, collate4t1) = (SELECT 'abc' COLLATE nocase, 1);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   21    0               00 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  i:3
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             0   14    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    5               00 r[4..5]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 abc           00 r[4]='abc'
REG[4] =   t3[abc](8)
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 DecrJumpZero     6   14    0               00 if (--r[6])==0 goto 14
REG[6] =  i:1
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (BINARY)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[abc](8)
REG[1] =  i:3
  20 Next             0    4    0               01 
  21 Halt             0    0    0               00 
SQL: [;
;SELECT collate4t1 FROM t1 WHERE x = (SELECT 'abc' COLLATE nocase) AND collate4t1 = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    2 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  i:3
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             0   13    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 abc           00 r[4]='abc'
REG[4] =   t3[abc](8)
  12 DecrJumpZero     5   13    0               00 if (--r[5])==0 goto 13
REG[5] =  i:1
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (BINARY)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:3
  28 Next             0    4    0               01 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT x FROM t1 WHERE collate4t1 = (SELECT 'abc') COLLATE nocase AND collate4t1 = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    2 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
   4 Column           0    1    1               00 r[1]=t1.collate4t1
REG[1] =  i:6
   5 Integer         13    3    0               00 r[3]=13; return address
REG[3] =  i:13
   6 Once             0   13    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 abc           00 r[4]='abc'
REG[4] =   t3[abc](8)
  12 DecrJumpZero     5   13    0               00 if (--r[5])==0 goto 13
REG[5] =  i:1
  13 Return           3    0    0               00 
REG[3] =  i:13
  14 Ne               4   28    1 (NOCASE)      51 if r[1]!=r[4] goto 28
REG[4] =   t3[abc](8)
REG[1] =  i:6
  28 Next             0    4    0               01 
  29 Halt             0    0    0               00 
SQL: [
;SELECT x FROM t1 WHERE (collate4t1 COLLATE nocase, collate4t1) = (SELECT 'def', 2);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    2 0             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   21    0               00 
   4 Column           0    1    1               00 r[1]=t1.collate4t1
REG[1] =  i:6
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             0   14    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    5               00 r[4..5]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 String8          0    4    0 def           00 r[4]='def'
REG[4] =   t3[def](8)
  12 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  13 DecrJumpZero     6   14    0               00 if (--r[6])==0 goto 14
REG[6] =  i:1
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (NOCASE)      51 if r[1]!=r[4] goto 20
REG[4] =   t3[def](8)
REG[1] =  i:6
  20 Next             0    4    0               01 
  21 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE c(xyz1 INTEGER PRIMARY KEY, t2, d);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 c             00 r[7]='c'
REG[7] =   t1[c](8)
  20 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE c(xyz1 INTEGER PRIMARY KEY, t2, d) 00 r[10]='CREATE TABLE c(xyz1 INTEGER PRIMARY KEY, t2, d)'
REG[10] =   t47[CREATE TABLE c(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s61[06170F0F016B7461626C656363044352.....ktablecc.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s61[06170F0F016B7461626C656363044352.....ktablecc.CR]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s47[CREATE TABLE c(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[c](8)
REG[5] =  i:4
REG[6] =   s47[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES(2, 2, 2);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; c
   2 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:2
   5 MustBeInt        1    0    0               00 
REG[1] =  i:2
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:2
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010202......]
  14 Insert           0    5    1 c             31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010202......]
REG[1] =  i:2
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO a VALUES(3, 3, 3);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    3 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   5 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s7[04010101030303.......]
   7 Insert           0    5    1 a             39 intkey=r[1] data=r[5]
REG[5] =  s7[04010101030303.......]
REG[1] =  i:3
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM a WHERE (b, collate4i1) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  16 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; a
   2 Explain          2    0    0 SCAN TABLE a  00 
   3 Rewind           0   13    0               00 
   4 Column           0    2    1               00 r[1]=a.b
REG[1] =   s2[iv](8)
   5 Ne               2   12    1 (BINARY)      C1 if r[1]!=r[2] goto 12
REG[2] =  i:2
REG[1] =   s2[iv](8)
  12 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=a.b
REG[1] =   s1[v](8)
   5 Ne               2   12    1 (BINARY)      C1 if r[1]!=r[2] goto 12
REG[2] =  i:2
REG[1] =   s1[v](8)
  12 Next             0    4    0               01 
   4 Column           0    2    1               00 r[1]=a.b
REG[1] =  i:3
   5 Ne               2   12    1 (BINARY)      C1 if r[1]!=r[2] goto 12
REG[2] =  i:2
REG[1] =  i:3
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM a WHERE (xyz, b) < (2, 3)
;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             01 usesStmtJournal=0
  17 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  18 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  19 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; a
   2 Explain          2    0    0 SCAN TABLE a  00 
   3 Rewind           0   15    0               00 
   4 Column           0    1    2               00 r[2]=a.xyz
REG[2] =  i:2
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:2
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   7 Column           0    2    2               00 r[2]=a.b
REG[2] =   s2[iv](8)
   8 Lt               4    1    2 (BINARY)      61 r[1] = (r[2]<r[4])
REG[4] =  i:3
REG[2] =   s2[iv](8)
REG[1] =  i:0
   9 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=a.xyz
REG[2] =  i:3
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:3
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    4    0               01 
   4 Column           0    1    2               00 r[2]=a.xyz
REG[2] =  i:3
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:3
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    4    0               01 
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO a VALUES(1, 1, 1);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    3 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04090909....]
   7 Insert           0    5    1 a             39 intkey=r[1] data=r[5]
REG[5] =  s4[04090909....]
REG[1] =  i:4
   8 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES(3, 3, 3);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    3 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; c
   2 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:3
   5 MustBeInt        1    0    0               00 
REG[1] =  i:3
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   8 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:3
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010303......]
  14 Insert           0    5    1 c             31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010303......]
REG[1] =  i:3
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO a VALUES(4, 4, 4);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    3 0             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; a
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
   4 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   5 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s7[04010101040404.......]
   7 Insert           0    5    1 a             39 intkey=r[1] data=r[5]
REG[5] =  s7[04010101040404.......]
REG[1] =  i:5
   8 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM a WHERE (collate4i1, b) > (2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; a
   2 Explain          2    0    0 SCAN TABLE a  00 
   3 Rewind           0   13    0               00 
   4 Column           0    0    2               00 r[2]=a.collate4i1
REG[2] =   s3[DEF](8)
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =   s3[DEF](8)
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=a.b
REG[5] =   s2[iv](8)
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s2[iv](8)
  12 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.collate4i1
REG[2] =   s3[GHI](8)
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =   s3[GHI](8)
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=a.b
REG[5] =   s1[v](8)
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s1[v](8)
  12 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.collate4i1
REG[2] =  i:3
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:3
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=a.b
REG[5] =  i:3
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:3
  12 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.collate4i1
REG[2] =  i:1
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:0
  12 Next             0    4    0               01 
   4 Column           0    0    2               00 r[2]=a.collate4i1
REG[2] =  i:4
   5 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:4
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    2    5               00 r[5]=a.b
REG[5] =  i:4
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:4
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE tr1(tr2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  20 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE tr1(tr2) 00 r[10]='CREATE TABLE tr1(tr2)'
REG[10] =   t21[CREATE TABLE tr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[0617131301377461626C657472317472.....7tabletr1tr]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[0617131301377461626C657472317472.....7tabletr1tr]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr1](8)
REG[5] =  i:5
REG[6] =   s21[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE y(z TEXT,t0 TEXT,t1a TEXT,t1b TEXT,bad1 TEXT,t1c TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 y             00 r[7]='y'
REG[7] =   t1[y](8)
  20 String8          0    8    0 y             00 r[8]='y'
REG[8] =   t1[y](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE y(z TEXT,t0 TEXT,t1a TEXT,t1b TEXT,bad1 TEXT,t1c TEXT) 00 r[10]='CREATE TABLE y(z TEXT,t0 TEXT,t1a TEXT,t1b TEXT,bad1 TEXT,t1c TEXT)'
REG[10] =   t67[CREATE TABLE y(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s82[07170F0F0181137461626C6579790643.......tableyy.C]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s82[07170F0F0181137461626C6579790643.......tableyy.C]
REG[5] =  i:5
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='y' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[y](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s67[CREATE TABLE y(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[y](8)
REG[5] =  i:6
REG[6] =   s67[CREATE TABLE y(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [
;DROP TABLE IF EXISTS c;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    5 0             01 usesStmtJournal=1
  39 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[c](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[c](8)
REG[2] =   s1[a](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[c](8)
REG[2] =   s1[c](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:3
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[tr1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[c](8)
REG[2] =   s3[tr1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[c](8)
REG[2] =   s1[y](8)
  12 Next             0    5    0               01 
  13 Destroy          4    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 c             00 
  36 SetCookie        0    1    6               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2a1(t2a2,t3);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2a1          00 r[7]='t2a1'
REG[7] =   t4[t2a1](8)
  20 String8          0    8    0 t2a1          00 r[8]='t2a1'
REG[8] =   t4[t2a1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE t2a1(t2a2,t3) 00 r[10]='CREATE TABLE t2a1(t2a2,t3)'
REG[10] =   t26[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s46[0617151501417461626C657432613174.....Atablet2a1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s46[0617151501417461626C657432613174.....Atablet2a1t]
REG[5] =  i:6
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='t2a1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2a1          00 r[2]='t2a1'
REG[2] =   t4[t2a1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2a1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2a1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2a1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2a1](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2a1](8)
REG[1] =   s4[t2a1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2a1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2a1](8)
REG[5] =  i:4
REG[6] =   s26[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2a1 VALUES(1,2);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    7 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; t2a1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090102....]
   6 Insert           0    4    1 t2a1          39 intkey=r[1] data=r[4]
REG[4] =  s4[03090102....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS a;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    7 0             01 usesStmtJournal=1
  39 String8          0    3    0 a             00 r[3]='a'
REG[3] =   t1[a](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s1[a](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[tr1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s3[tr1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s1[y](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[t2a1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s4[t2a1](8)
  12 Next             0    5    0               01 
  13 Destroy          3    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 a             00 
  36 SetCookie        0    1    8               00 
  37 Halt             0    0    0               00 
SQL: [CREATE TABLE t3a(t3b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    8 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t3a           00 r[7]='t3a'
REG[7] =   t3[t3a](8)
  20 String8          0    8    0 t3a           00 r[8]='t3a'
REG[8] =   t3[t3a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t3a(t3b) 00 r[10]='CREATE TABLE t3a(t3b)'
REG[10] =   t21[CREATE TABLE t3](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[0617131301377461626C657433617433.....7tablet3at3]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[0617131301377461626C657433617433.....7tablet3at3]
REG[5] =  i:7
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='t3a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 t3a           00 r[2]='t3a'
REG[2] =   t3[t3a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t3a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t3a](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t3a](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t3a](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t3a](8)
REG[1] =   s3[t3a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t3a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE t3](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t3a](8)
REG[5] =  i:3
REG[6] =   s21[CREATE TABLE t3](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT CASE (2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  14 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               5    4    2               61 r[4] = (r[2]==r[5])
REG[5] =  i:1
REG[2] =  i:2
REG[4] =  i:0
   3 IfNot            4    5    0               00 
REG[4] =  i:0
   5 IfNot            4    8    1               00 
REG[4] =  i:0
   8 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT 1 WHERE (SELECT 2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    1    0               00 r[1]=11; return address
REG[1] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    2    3               00 r[2..3]=NULL; Init subquery result
REG[2] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           1    0    0               00 
REG[1] =  i:11
  12 Gt               6    5    2               61 r[5] = (r[2]>r[6])
REG[6] =  i:1
REG[2] =  i:2
REG[5] =  i:1
  13 ElseNotEq        0   15    0               00 
  15 IfNot            5   22    1               00 
REG[5] =  i:1
  16 Lt               7    5    2               61 r[5] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[5] =  i:1
  17 ElseNotEq        0   19    0               00 
  19 IfNot            5   22    1               00 
REG[5] =  i:1
  20 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  21 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  22 Halt             0    0    0               00 
SQL: [;CREATE TABLE t6(t6ab INTEGER PRIMARY KEY, t6b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t6            00 r[7]='t6'
REG[7] =   t2[t6](8)
  20 String8          0    8    0 t6            00 r[8]='t6'
REG[8] =   t2[t6](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE t6(t6ab INTEGER PRIMARY KEY, t6b) 00 r[10]='CREATE TABLE t6(t6ab INTEGER PRIMARY KEY, t6b)'
REG[10] =   t46[CREATE TABLE t6](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s62[0617111101697461626C657436743607.....itablet6t6.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s62[0617111101697461626C657436743607.....itablet6t6.]
REG[5] =  i:8
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='t6' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 t6            00 r[2]='t6'
REG[2] =   t2[t6](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t6](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t6](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s46[CREATE TABLE t6](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t6](8)
REG[5] =  i:7
REG[6] =   s46[CREATE TABLE t6](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [
;CREATE TABLE t7a(t7b,t7ax,t8a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:9
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:9
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t7a           00 r[7]='t7a'
REG[7] =   t3[t7a](8)
  20 String8          0    8    0 t7a           00 r[8]='t7a'
REG[8] =   t3[t7a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE t7a(t7b,t7ax,t8a) 00 r[10]='CREATE TABLE t7a(t7b,t7ax,t8a)'
REG[10] =   t30[CREATE TABLE t7](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s48[0617131301497461626C657437617437.....Itablet7at7]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s48[0617131301497461626C657437617437.....Itablet7at7]
REG[5] =  i:9
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='t7a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 t7a           00 r[2]='t7a'
REG[2] =   t3[t7a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t7a](8)
REG[1] =   s3[t7a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t7a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE TABLE t7](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t7a](8)
REG[5] =  i:8
REG[6] =   s30[CREATE TABLE t7](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(x) VALUES(1);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1   11 0             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030900...]
   5 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[030900...]
REG[1] =  i:2
   6 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t8b AFTER UPDATE ON y BEGIN
     UPDATE t1 SET (collate4t1,collate4t1,x)=(SELECT new.t0,new.t0+1,new.t0+2);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   11 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t8b           00 r[3]='t8b'
REG[3] =   t3[t8b](8)
   5 String8          0    4    0 y             00 r[4]='y'
REG[4] =   t1[y](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t8b AFTER UPDATE ON y BEGIN
     UPDATE t1 SET (collate4t1,collate4t1,x)=(SELECT new.t0,new.t0+1,new.t0+2);
  END 00 r[6]='CREATE TRIGGER t8b AFTER UPDATE ON y BEGIN
     UPDATE t1 SET (collate4t1,collate4t1,x)=(SELE
REG[6] =   t128[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s146[071B130F08820D747269676765727438.......triggert8]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s146[071B130F08820D747269676765727438.......triggert8]
REG[1] =  i:10
  10 SetCookie        0    1   12               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t8b' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t8b           00 r[3]='t8b'
REG[3] =   t3[t8b](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t8b](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t3[t8b](8)
REG[1] =   s3[t8b](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t8b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s128[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t8b](8)
REG[5] =  i:0
REG[6] =   s128[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE t1 SET x=7;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   12 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:1
   7 Integer          7    3    0               00 r[3]=7
REG[3] =  i:7
   8 Column           0    1    4               00 r[4]=t1.collate4t1
REG[4] =  i:6
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[0301010706.....]
  10 Insert           0    5    2 t1            07 intkey=r[2] data=r[5]
REG[5] =  s5[0301010706.....]
REG[2] =  i:1
  11 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:2
   7 Integer          7    3    0               00 r[3]=7
REG[3] =  i:7
   8 Column           0    1    4               00 r[4]=t1.collate4t1
REG[4] =  NULL
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s4[03010007....]
  10 Insert           0    5    2 t1            07 intkey=r[2] data=r[5]
REG[5] =  s4[03010007....]
REG[2] =  i:2
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
;UPDATE t1 SET collate4t1=97;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   12 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:1
   7 Column           0    0    3               00 r[3]=t1.x
REG[3] =  i:7
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[0301010761....a]
  10 Insert           0    5    2 t1            07 intkey=r[2] data=r[5]
REG[5] =  s5[0301010761....a]
REG[2] =  i:1
  11 Next             0    5    0               01 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 IsNull           2   12    0               00 if r[2]==NULL goto 12
REG[2] =  i:2
   7 Column           0    0    3               00 r[3]=t1.x
REG[3] =  i:7
   8 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
   9 MakeRecord       3    2    5               00 r[5]=mkrec(r[3..4])
REG[5] =  s5[0301010761....a]
  10 Insert           0    5    2 t1            07 intkey=r[2] data=r[5]
REG[5] =  s5[0301010761....a]
REG[2] =  i:2
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE i8c(t9, t9ca, t10, e, t10x);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 i8c           00 r[7]='i8c'
REG[7] =   t3[i8c](8)
  20 String8          0    8    0 i8c           00 r[8]='i8c'
REG[8] =   t3[i8c](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE i8c(t9, t9ca, t10, e, t10x) 00 r[10]='CREATE TABLE i8c(t9, t9ca, t10, e, t10x)'
REG[10] =   t40[CREATE TABLE i8](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s58[06171313015D7461626C656938636938.....]tablei8ci8]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s58[06171313015D7461626C656938636938.....]tablei8ci8]
REG[5] =  i:11
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='i8c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 i8c           00 r[2]='i8c'
REG[2] =   t3[i8c](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[i8c](8)
REG[1] =   s3[i8c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[i8c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s40[CREATE TABLE i8](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[i8c](8)
REG[5] =  i:9
REG[6] =   s40[CREATE TABLE i8](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;PRAGMA recursive_triggers = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t11 AFTER UPDATE ON t3a WHEN new.t3b>1 BEGIN
    UPDATE t3a SET (t3b, t3b) = (
      SELECT t3b, t3b FROM t3a WHERE t3b = new.t3b-1
    ), (t3b, t3b) = (
      SELECT t3b, t3b FROM t3a WHERE t3b = new.t3b-1
    ) WHERE t3b = new.t3b-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   13 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t11           00 r[3]='t11'
REG[3] =   t3[t11](8)
   5 String8          0    4    0 t3a           00 r[4]='t3a'
REG[4] =   t3[t3a](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t11 AFTER UPDATE ON t3a WHEN new.t3b>1 BEGIN
    UPDATE t3a SET (t3b, t3b) = (
      SELECT t3b, t3b FROM t3a WHERE t3b = new.t3b-1
    ), (t3b, t3b) = (
      SELECT t3b, t3b FROM t3a WHERE t3b = new.t3b-1
    ) WHERE t3b = new.t3b-1;
  END 00 r[6]='CREATE TRIGGER t11 AFTER UPDATE ON t3a WHEN new.t3b>1 BEGIN
    UPDATE t3a SET (t3b, t3b) = (
REG[6] =   t256[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s276[071B131308840D747269676765727431.......triggert1]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s276[071B131308840D747269676765727431.......triggert1]
REG[1] =  i:12
  10 SetCookie        0    1   14               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t11' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t11           00 r[3]='t11'
REG[3] =   t3[t11](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t8b](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t3[t11](8)
REG[1] =   s3[t8b](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t11](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t3[t11](8)
REG[1] =   s3[t11](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t11](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s256[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t11](8)
REG[5] =  i:0
REG[6] =   s256[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE tr1 SET tr2=tr2 WHERE tr2=3;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1   14 0             01 usesStmtJournal=0
  15 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  16 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    5    0 1             00 root=5 iDb=0; tr1
   3 Explain          3    0    0 SCAN TABLE tr1 00 
   4 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [;SELECT * FROM tr1;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    0   14 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    5    0 1             00 root=5 iDb=0; tr1
   2 Explain          2    0    0 SCAN TABLE tr1 00 
   3 Rewind           0    7    0               00 
   7 Halt             0    0    0               00 
SQL: [;CREATE TABLE t11x(c0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   14 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:13
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:13
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:13
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t11x          00 r[7]='t11x'
REG[7] =   t4[t11x](8)
  20 String8          0    8    0 t11x          00 r[8]='t11x'
REG[8] =   t4[t11x](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE t11x(c0) 00 r[10]='CREATE TABLE t11x(c0)'
REG[10] =   t21[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[0617151501377461626C657431317874.....7tablet11xt]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[0617151501377461626C657431317874.....7tablet11xt]
REG[5] =  i:13
  25 SetCookie        0    1   15               00 
  26 ParseSchema      0    0    0 tbl_name='t11x' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   15 0             00 usesStmtJournal=0
  16 String8          0    2    0 t11x          00 r[2]='t11x'
REG[2] =   t4[t11x](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t11x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t11x](8)
REG[1] =   s4[t11x](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t11x](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t11x](8)
REG[5] =  i:10
REG[6] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE index_0 ( sqlsim0, sqlsim1, PRIMARY KEY (sqlsim0, sqlsim1) );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   15 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:12
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:15
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_index_0_1 00 r[7]='sqlite_autoindex_index_0_1'
REG[7] =   t26[sqlite_autoinde](8)
  17 String8          0    8    0 index_0       00 r[8]='index_0'
REG[8] =   t7[index_0](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:12
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[0617411B0100696E64657873716C6974..A...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s45[0617411B0100696E64657873716C6974..A...indexsqlit]
REG[5] =  i:15
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:14
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:14
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:14
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 index_0       00 r[15]='index_0'
REG[15] =   t7[index_0](8)
  31 String8          0   16    0 index_0       00 r[16]='index_0'
REG[16] =   t7[index_0](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:11
  33 String8          0   18    0 CREATE TABLE index_0 ( sqlsim0, sqlsim1, PRIMARY KEY (sqlsim0, sqlsim1) ) 00 r[18]='CREATE TABLE index_0 ( sqlsim0, sqlsim1, PRIMARY KEY (sqlsim0, sqlsim1) )'
REG[18] =   t73[CREATE TABLE in](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s100[07171B1B01811F7461626C65696E6465.......tableinde]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s100[07171B1B01811F7461626C65696E6465.......tableinde]
REG[13] =  i:14
  36 SetCookie        0    1   16               00 
  37 ParseSchema      0    0    0 tbl_name='index_0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   16 0             00 usesStmtJournal=0
  16 String8          0    2    0 index_0       00 r[2]='index_0'
REG[2] =   t7[index_0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t11x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s4[t11x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[index_0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s7[index_0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[index_0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s73[CREATE TABLE in](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[index_0](8)
REG[5] =  i:11
REG[6] =   s73[CREATE TABLE in](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[index_0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[index_0](8)
REG[1] =   s7[index_0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s26[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s26[sqlite_autoinde](8)
REG[5] =  i:12
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE sqlsim2 ( sqlsim3, sqlsim4 );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   16 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:13
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:16
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:16
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:16
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:16
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 sqlsim2       00 r[7]='sqlsim2'
REG[7] =   t7[sqlsim2](8)
  20 String8          0    8    0 sqlsim2       00 r[8]='sqlsim2'
REG[8] =   t7[sqlsim2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:13
  22 String8          0   10    0 CREATE TABLE sqlsim2 ( sqlsim3, sqlsim4 ) 00 r[10]='CREATE TABLE sqlsim2 ( sqlsim3, sqlsim4 )'
REG[10] =   t41[CREATE TABLE sq](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s67[06171B1B015F7461626C6573716C7369....._tablesqlsi]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s67[06171B1B015F7461626C6573716C7369....._tablesqlsi]
REG[5] =  i:16
  25 SetCookie        0    1   17               00 
  26 ParseSchema      0    0    0 tbl_name='sqlsim2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   17 0             00 usesStmtJournal=0
  16 String8          0    2    0 sqlsim2       00 r[2]='sqlsim2'
REG[2] =   t7[sqlsim2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t11x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s4[t11x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[index_0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s7[index_0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[index_0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s7[index_0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim2](8)
REG[1] =   s7[sqlsim2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[sqlsim2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s41[CREATE TABLE sq](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[sqlsim2](8)
REG[5] =  i:13
REG[6] =   s41[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2a1 VALUES (1, 1), (1, 2);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1   17 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 InitCoroutine    4   10    2               00 
  10 OpenWrite        0    4    0 2             00 root=4 iDb=0; t2a1
  11 Yield            4   16    0               00 
REG[4] =  i:1
REG[4] =  i:11
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:5
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  13 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s3[030909...]
  14 Insert           0    5    1 t2a1          39 intkey=r[1] data=r[5]
REG[5] =  s3[030909...]
REG[1] =  i:2
  15 Goto             0   11    0               00 
  11 Yield            4   16    0               00 
REG[4] =  i:5
REG[4] =  i:11
   6 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Yield            4    0    0               00 
REG[4] =  i:11
REG[4] =  i:8
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  13 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03090102....]
  14 Insert           0    5    1 t2a1          39 intkey=r[1] data=r[5]
REG[5] =  s4[03090102....]
REG[1] =  i:3
  15 Goto             0   11    0               00 
  11 Yield            4   16    0               00 
REG[4] =  i:8
REG[4] =  i:11
   9 EndCoroutine     4    0    0               00 
REG[4] =  i:11
  16 Halt             0    0    0               00 
SQL: [;CREATE TABLE sqlsim5(sqlsim6 INTEGER PRIMARY KEY,sqlsim7);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   17 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:14
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:17
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:17
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:17
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:17
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:17
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 sqlsim5       00 r[7]='sqlsim5'
REG[7] =   t7[sqlsim5](8)
  20 String8          0    8    0 sqlsim5       00 r[8]='sqlsim5'
REG[8] =   t7[sqlsim5](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:14
  22 String8          0   10    0 CREATE TABLE sqlsim5(sqlsim6 INTEGER PRIMARY KEY,sqlsim7) 00 r[10]='CREATE TABLE sqlsim5(sqlsim6 INTEGER PRIMARY KEY,sqlsim7)'
REG[10] =   t57[CREATE TABLE sq](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s83[06171B1B017F7461626C6573716C7369......tablesqlsi]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s83[06171B1B017F7461626C6573716C7369......tablesqlsi]
REG[5] =  i:17
  25 SetCookie        0    1   18               00 
  26 ParseSchema      0    0    0 tbl_name='sqlsim5' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   18 0             00 usesStmtJournal=0
  16 String8          0    2    0 sqlsim5       00 r[2]='sqlsim5'
REG[2] =   t7[sqlsim5](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s4[t2a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t7a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s3[t7a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s1[y](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[i8c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s3[i8c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t3a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s3[t3a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t11x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s4[t11x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[index_0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s7[index_0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[index_0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s7[index_0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s7[sqlsim2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s7[sqlsim5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[sqlsim5](8)
REG[1] =   s7[sqlsim5](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s7[sqlsim5](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s57[CREATE TABLE sq](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s7[sqlsim5](8)
REG[5] =  i:14
REG[6] =   s57[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO tr1(tr2,tr2) VALUES(1,11),(2,22),(3,33),(4,44);]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1   18 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 InitCoroutine    3   16    2               00 
  16 OpenWrite        0    5    0 1             00 root=5 iDb=0; tr1
  17 Yield            3   23    0               00 
REG[3] =  i:1
REG[3] =  i:17
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   4 Integer         11    5    0               00 r[5]=11
REG[5] =  i:11
   5 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:5
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:1
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s2[0209..]
  21 Insert           0    8    1 tr1           39 intkey=r[1] data=r[8]
REG[8] =  s2[0209..]
REG[1] =  i:1
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:5
REG[3] =  i:17
   6 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   7 Integer         22    5    0               00 r[5]=22
REG[5] =  i:22
   8 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:8
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:2
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020102...]
  21 Insert           0    8    1 tr1           39 intkey=r[1] data=r[8]
REG[8] =  s3[020102...]
REG[1] =  i:2
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:8
REG[3] =  i:17
   9 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  10 Integer         33    5    0               00 r[5]=33
REG[5] =  i:33
  11 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:11
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:3
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020103...]
  21 Insert           0    8    1 tr1           39 intkey=r[1] data=r[8]
REG[8] =  s3[020103...]
REG[1] =  i:3
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:11
REG[3] =  i:17
  12 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
  13 Integer         44    5    0               00 r[5]=44
REG[5] =  i:44
  14 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:14
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:4
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020104...]
  21 Insert           0    8    1 tr1           39 intkey=r[1] data=r[8]
REG[8] =  s3[020104...]
REG[1] =  i:4
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:14
REG[3] =  i:17
  15 EndCoroutine     3    0    0               00 
REG[3] =  i:17
  23 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (collate4t1,collate4t1)>(3,0) ORDER BY collate4t1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:97
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:7
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:97
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301016107...a.]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301016107...a.]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:97
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:7
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:97
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301016107...a.]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301016107...a.]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:97
  21 Column           2    1    6               00 r[6]=x
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:97
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:97
  21 Column           2    1    6               00 r[6]=x
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:97
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM y WHERE (t0,t1b)>=(3,0) ORDER BY t0;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   18 0             01 usesStmtJournal=0
  34 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  35 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  36 Goto             0    1    0               00 
   1 SorterOpen       1    8    0 k(1,B)        00 
   2 OpenRead         0    6    0 6             00 root=6 iDb=0; y
   3 Explain          3    0    0 SCAN TABLE y  00 
   4 Rewind           0   20    0               00 
  20 Explain         20    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       2   13    8               00 8 columns in r[13]
  22 SorterSort       1   32    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2a1 WHERE (t3,t2a2)>(3,32) ORDER BY t3;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t2a1
   3 Explain          3    0    0 SCAN TABLE t2a1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM tr1 WHERE (tr2,tr2)>(3,33) ORDER BY tr2;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   18 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; tr1
   3 Explain          3    0    0 SCAN TABLE tr1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:2
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:3
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:3
   9 Gt               4    1    2 (BINARY)      61 r[1] = (r[2]>r[4])
REG[4] =  i:33
REG[2] =  i:3
REG[1] =  i:0
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=tr1.tr2
REG[5] =  i:4
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020104...]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020104...]
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=tr2
REG[6] =  i:4
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:4
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t3a WHERE (t3b,t3b)<(3,34) ORDER BY t3b DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   18 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t3a
   3 Explain          3    0    0 SCAN TABLE t3a 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2a1 WHERE (t3,t2a2)<=(3,32) ORDER BY t3 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t2a1
   3 Explain          3    0    0 SCAN TABLE t2a1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t2a1.t2a2
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t2a1.t3
REG[5] =  i:2
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s4[03010902....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s4[03010902....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t2a1.t2a2
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t2a1.t3
REG[5] =  i:1
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s3[030909...]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s3[030909...]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t2a1.t2a2
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t2a1.t3
REG[5] =  i:2
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s4[03010902....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s4[03010902....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t3
REG[7] =  i:2
  21 Column           2    1    6               00 r[6]=t2a2
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t3
REG[7] =  i:2
  21 Column           2    1    6               00 r[6]=t2a2
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t3
REG[7] =  i:1
  21 Column           2    1    6               00 r[6]=t2a2
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:1
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (0,0)<(x,x) ORDER BY x;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  27 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:97
  12 Column           0    0    4               00 r[4]=t1.x
REG[4] =  i:7
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010761....a]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010761....a]
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:7
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:7
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:97
  12 Column           0    0    4               00 r[4]=t1.x
REG[4] =  i:7
  13 MakeRecord       4    2    7               00 r[7]=mkrec(r[4..5])
REG[7] =  s5[0301010761....a]
  14 SorterInsert     1    7    4 2             00 key=r[7]
REG[7] =  s5[0301010761....a]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    8    4               00 4 columns in r[8]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    1    6               00 r[6]=collate4t1
REG[6] =  i:97
  21 Column           2    0    5               00 r[5]=x
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:97
  23 SorterNext       1   19    0               00 
  19 SorterData       1    8    2               00 r[8]=data
  20 Column           2    1    6               00 r[6]=collate4t1
REG[6] =  i:97
  21 Column           2    0    5               00 r[5]=x
REG[5] =  i:7
  22 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:7
REG[6] =  i:97
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (5,0)>(x,collate4t1) ORDER BY x DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:7
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:7
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:7
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:7
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM tr1 WHERE (3,0)>(tr2,tr2) ORDER BY tr2 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   18 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; tr1
   3 Explain          3    0    0 SCAN TABLE tr1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=tr1.tr2
REG[5] =  i:1
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s2[0209..]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s2[0209..]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=tr1.tr2
REG[5] =  i:2
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020102...]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020102...]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:3
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:3
   9 Lt               4    1    2 (BINARY)      61 r[1] = (r[2]<r[4])
REG[4] =  i:0
REG[2] =  i:3
REG[1] =  i:0
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:4
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=tr2
REG[6] =  i:2
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  21 SorterNext       1   18    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=tr2
REG[6] =  i:1
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM tr1 WHERE (3,0)>=(tr2,tr2) ORDER BY tr2 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   18 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; tr1
   3 Explain          3    0    0 SCAN TABLE tr1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=tr1.tr2
REG[5] =  i:1
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s2[0209..]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s2[0209..]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=tr1.tr2
REG[5] =  i:2
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020102...]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020102...]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:3
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:3
   9 Le               4    1    2 (BINARY)      61 r[1] = (r[2]<=r[4])
REG[4] =  i:0
REG[2] =  i:3
REG[1] =  i:0
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=tr1.tr2
REG[2] =  i:4
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=tr2
REG[6] =  i:2
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  21 SorterNext       1   18    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=tr2
REG[6] =  i:1
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (3,33)<(collate4t1,collate4t1) ORDER BY collate4t1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:97
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:7
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:97
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301016107...a.]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301016107...a.]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:97
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:7
  12 Column           0    1    5               00 r[5]=t1.collate4t1
REG[5] =  i:97
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301016107...a.]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301016107...a.]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:97
  21 Column           2    1    6               00 r[6]=x
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:97
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=collate4t1
REG[7] =  i:97
  21 Column           2    1    6               00 r[6]=x
REG[6] =  i:7
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:7
REG[7] =  i:97
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM y WHERE (3,33)<=(t1c,t1c) ORDER BY t1c;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   18 0             01 usesStmtJournal=0
  34 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  35 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  36 Goto             0    1    0               00 
   1 SorterOpen       1    8    0 k(1,B)        00 
   2 OpenRead         0    6    0 6             00 root=6 iDb=0; y
   3 Explain          3    0    0 SCAN TABLE y  00 
   4 Rewind           0   20    0               00 
  20 Explain         20    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       2   13    8               00 8 columns in r[13]
  22 SorterSort       1   32    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t6 WHERE (3,34)<=(t6ab,t6ab) ORDER BY t6ab;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0   18 0             01 usesStmtJournal=0
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  20 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    7    0 2             00 root=7 iDb=0; t6
   3 Explain          3    0    0 SEARCH TABLE t6 USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekGE           0   16    1               00 key=r[1]; pk
REG[1] =  i:3
  16 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2a1 WHERE (3,34)>(t3,t2a2) ORDER BY t3 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    4    0 2             00 root=4 iDb=0; t2a1
   3 Explain          3    0    0 SCAN TABLE t2a1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t2a1.t2a2
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t2a1.t3
REG[5] =  i:2
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s4[03010902....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s4[03010902....]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t2a1.t2a2
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t2a1.t3
REG[5] =  i:1
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s3[030909...]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s3[030909...]
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2a1.t3
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    0    6               00 r[6]=t2a1.t2a2
REG[6] =  i:1
  12 Column           0    1    5               00 r[5]=t2a1.t3
REG[5] =  i:2
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s4[03010902....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s4[03010902....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t3
REG[7] =  i:2
  21 Column           2    1    6               00 r[6]=t2a2
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t3
REG[7] =  i:2
  21 Column           2    1    6               00 r[6]=t2a2
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:2
  23 SorterNext       1   19    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    0    7               00 r[7]=t3
REG[7] =  i:1
  21 Column           2    1    6               00 r[6]=t2a2
REG[6] =  i:1
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:1
REG[7] =  i:1
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (3,32)>=(collate4t1,x) ORDER BY collate4t1 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   18 0             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:97
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t1.collate4t1
REG[2] =  i:97
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:0
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t7a;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1   18 0             01 usesStmtJournal=1
  39 String8          0    3    0 t7a           00 r[3]='t7a'
REG[3] =   t3[t7a](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[tr1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s3[tr1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s1[y](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[t2a1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s4[t2a1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t3a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s3[t3a](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t6](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s2[t6](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t7a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s3[t7a](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:9
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s1[y](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[i8c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s3[i8c](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t3a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s3[t3a](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[t11x](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s4[t11x](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[index_0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s7[index_0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[index_0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s7[index_0](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[sqlsim2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s7[sqlsim2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s7[sqlsim5](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t7a](8)
REG[2] =   s7[sqlsim5](8)
  12 Next             0    5    0               01 
  13 Destroy          8    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t7a           00 
  36 SetCookie        0    1   19               00 
  37 Halt             0    0    0               00 
SQL: [;SELECT * FROM t6 WHERE (t6b,t6ab) IN (VALUES(1,2));]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    0   19 0             01 usesStmtJournal=0
  38 Goto             0    1    0               00 
   1 OpenRead         0    7    0 2             00 root=7 iDb=0; t6
   2 Explain          2    0    0 SEARCH TABLE t6 USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   4 Once             0   11    0               00 
   5 OpenEphemeral    1    1    0 k(1,)         00 nColumn=1; Result of SELECT 1
   6 Explain          6    0    0 LIST SUBQUERY 1 00 
   7 Explain          7    6    0 SCAN CONSTANT ROW 00 
   8 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   9 MakeRecord       3    1    4 D             00 r[4]=mkrec(r[3])
REG[4] =  s3[020102...]
  10 IdxInsert        1    4    3 1             00 key=r[4]
REG[4] =  s3[020102...]
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Rewind           1   36    0               00 
  13 Column           1    0    1               00 r[1]=
REG[1] =  i:2
  14 IsNull           1   35    0               00 if r[1]==NULL goto 35
REG[1] =  i:2
  15 SeekRowid        0   35    1               00 intkey=r[1]
REG[1] =  i:2
  35 Next             1   13    0               00 
  36 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fccf115a859 in __GI_abort () at abort.c:79
#2  0x00007fccf115a729 in __assert_fail_base (fmt=0x7fccf12f0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007fccf116bfd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7fff3c141dd0, p=0x1f5aea0, pIn=0x7fff3c140450, pDest=0x7fff3c1409a8, regReturn=15, regPrev=9, pKeyInfo=0x1f57b10, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7fff3c141dd0, p=0x1f5aea0, pDest=0x7fff3c1409a8) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7fff3c141dd0, p=0x1f5aea0, pDest=0x7fff3c1409a8) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7fff3c141dd0, p=0x1f5aea0, pDest=0x7fff3c1409a8) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7fff3c141dd0, pExpr=0x1f623d0) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7fff3c141dd0, p=0x1f623d0, piFreeable=0x7fff3c140a6c) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7fff3c141dd0, pExpr=0x1f59280, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7fff3c141dd0, pExpr=0x1f59280, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7fff3c141dd0, pList=0x1f53970, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7fff3c141dd0, pSelect=0x1f53010, pInfo=0x7fff3c140e10) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7fff3c141dd0, p=0x1f53010, srcTab=-1, pSort=0x0, pDistinct=0x7fff3c1410b0, pDest=0x7fff3c1411c0, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7fff3c141dd0, p=0x1f53010, pDest=0x7fff3c1411c0) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff3c1413f0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff3c141dd0) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff3c1413f0, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff3c141dd0, 
    zSql=0x1f61600 ";;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT"..., pzErrMsg=0x7fff3c141fb0) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x1f436a0, 
    zSql=0x1f46583 ";SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);"..., nBytes=812, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff3c1420e8, pzTail=0x7fff3c1420d0) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x1f436a0, 
    zSql=0x1f46583 ";SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);"..., nBytes=812, prepFlags=128, pOld=0x0, ppStmt=0x7fff3c1420e8, pzTail=0x7fff3c1420d0) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x1f436a0, 
    zSql=0x1f46583 ";SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4);"..., nBytes=812, ppStmt=0x7fff3c1420e8, pzTail=0x7fff3c1420d0) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7fff3c142298) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 63093] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
