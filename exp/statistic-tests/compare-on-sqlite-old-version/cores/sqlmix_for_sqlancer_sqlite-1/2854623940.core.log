GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000202,sig:06,src:021725+021213,time:3114387,execs:589515,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t2 INSERT ON t1 BEGIN
    SELECT x(*) OVER (ORDER BY (SELECT 1)) FROM t1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
   5 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t2 INSERT ON t1 BEGIN
    SELECT x(*) OVER (ORDER BY (SELECT 1)) FROM t1;
  END 00 r[6]='CREATE TRIGGER t2 INSERT ON t1 BEGIN
    SELECT x(*) OVER (ORDER BY (SELECT 1)) FROM t1;
  EN
REG[6] =   t94[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s112[071B1111088149747269676765727432......Itriggert2]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s112[071B1111088149747269676765727432......Itriggert2]
REG[1] =  i:2
  10 SetCookie        0    1    2               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t2' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t2[t2](8)
REG[1] =   s2[t2](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s94[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t2](8)
REG[5] =  i:0
REG[6] =   s94[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [SELECT hex('à') AS x
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 à             00 r[3]='à'
REG[3] =   t1[.](8)
   6 Function0        1    3    2 hex(1)        01 r[2]=func(r[3])
REG[3] =   t1[.](8)
REG[2] =   z2[E0](8)
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[E0](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s2[E0](8)
   4 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    0 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;ALTER TABLE t1 RENAME TO t2i1;]
VDBE Trace:
   0 Init             0  140    0               00 Start at 140
 140 Transaction      0    1    2 0             01 usesStmtJournal=1
 141 Transaction      1    1    0 0             01 usesStmtJournal=1
 142 String8          0    9    0 index         00 r[9]='index'
REG[9] =   t5[index](8)
 143 String8          0   10    0 t1            00 r[10]='t1'
REG[10] =   t2[t1](8)
 144 String8          0   11    0 sqlite_%      00 r[11]='sqlite_%'
REG[11] =   t8[sqlite_%](8)
 145 String8          0   13    0 main          00 r[13]='main'
REG[13] =   t4[main](8)
 146 String8          0   17    0 t1            00 r[17]='t1'
REG[17] =   t2[t1](8)
 147 String8          0   18    0 t2i1          00 r[18]='t2i1'
REG[18] =   t4[t2i1](8)
 148 Integer          0   19    0               00 r[19]=0
REG[19] =  i:0
 149 String8          0   28    0 table         00 r[28]='table'
REG[28] =   t5[table](8)
 150 String8          0   29    0 trigger       00 r[29]='trigger'
REG[29] =   t7[trigger](8)
 151 String8          0   30    0 sqlite_autoindex% 00 r[30]='sqlite_autoindex%'
REG[30] =   t17[sqlite_autoinde](8)
 152 String8          0   57    0 sqlite_autoindex_ 00 r[57]='sqlite_autoindex_'
REG[57] =   t17[sqlite_autoinde](8)
 153 String8          0   79    0 t2i1          00 r[79]='t2i1'
REG[79] =   t4[t2i1](8)
 154 Concat          79   57   32               00 r[32]=r[57]+r[79]
REG[79] =   t4[t2i1](8)
REG[57] =   t17[sqlite_autoinde](8)
REG[32] =   s21[sqlite_autoinde](8)
 155 Integer          2   79    0               00 r[79]=2
REG[79] =  i:2
 156 Integer         18   57    0               00 r[57]=18
REG[57] =  i:18
 157 Add             57   79   34               00 r[34]=r[57]+r[79]
REG[57] =  i:18
REG[79] =  i:2
REG[34] =  i:20
 158 String8          0   43    0 view          00 r[43]='view'
REG[43] =   t4[view](8)
 159 String8          0   45    0 main          00 r[45]='main'
REG[45] =   t4[main](8)
 160 Integer          1   49    0               00 r[49]=1
REG[49] =  i:1
 161 String8          0   50    0 main          00 r[50]='main'
REG[50] =   t4[main](8)
 162 String8          0   54    0 t1            00 r[54]='t1'
REG[54] =   t2[t1](8)
 163 String8          0   55    0 t2i1          00 r[55]='t2i1'
REG[55] =   t4[t2i1](8)
 164 Integer          1   56    0               00 r[56]=1
REG[56] =  i:1
 165 String8          0   58    0 sqlite_%      00 r[58]='sqlite_%'
REG[58] =   t8[sqlite_%](8)
 166 String8          0   60    0 create virtual% 00 r[60]='create virtual%'
REG[60] =   t15[create virtual%](8)
 167 String8          0   62    0 main          00 r[62]='main'
REG[62] =   t4[main](8)
 168 Integer          0   66    0               00 r[66]=0
REG[66] =  i:0
 169 Null             0   67    0               00 r[67]=NULL
REG[67] =  NULL
 170 String8          0   69    0 sqlite_%      00 r[69]='sqlite_%'
REG[69] =   t8[sqlite_%](8)
 171 String8          0   71    0 create virtual% 00 r[71]='create virtual%'
REG[71] =   t15[create virtual%](8)
 172 String8          0   73    0 main          00 r[73]='main'
REG[73] =   t4[main](8)
 173 Integer          1   77    0               00 r[77]=1
REG[77] =  i:1
 174 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s5[table](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t1](8)
  10 Function0        1   11    8 like(2)       02 r[8]=func(r[11..12])
REG[11] =   t8[sqlite_%](8)
REG[12] =   s2[t1](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s7[trigger](8)
   6 Ne               9    9    8 (BINARY)      42 if r[8]!=r[9] goto 9
REG[9] =   t5[index](8)
REG[8] =   s7[trigger](8)
   9 Column           0    1   12               00 r[12]=sqlite_master.name
REG[12] =   s2[t2](8)
  10 Function         1   11    8 like(2)       02 r[8]=func(r[11..12])
REG[11] =   t8[sqlite_%](8)
REG[12] =   s2[t2](8)
REG[8] =  i:0
  11 If               8   14    1               00 
REG[8] =  i:0
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:2
  14 Next             0    5    0               01 
  15 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:1
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  22 Column           0    0   14               00 r[14]=sqlite_master.type
REG[14] =   s5[table](8)
  23 Column           0    1   15               00 r[15]=sqlite_master.name
REG[15] =   s2[t1](8)
  24 Column           0    4   16               00 r[16]=sqlite_master.sql
REG[16] =   s18[CREATE TABLE t1](8)
  25 Function0      113   13    7 sqlite_rename_table(7) 07 r[7]=func(r[13..19])
REG[13] =   t4[main](8)
REG[14] =   s5[table](8)
REG[15] =   s2[t1](8)
REG[16] =   s18[CREATE TABLE t1](8)
REG[17] =   t2[t1](8)
REG[18] =   t4[t2i1](8)
REG[19] =  i:0
REG[7] =   s22[CREATE TABLE "t](8)
  26 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s38[0617111101397461626C657431743102.....9tablet1t1.]
  27 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s38[0617111101397461626C657431743102.....9tablet1t1.]
REG[2] =  i:1
  28 Goto             0   16    0               00 
  16 RowSetRead       1   29    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:2
  17 NotExists        0   16    2               00 intkey=r[2]
REG[2] =  i:2
  18 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s7[trigger](8)
  19 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  20 Column           0    2    5               00 r[5]=sqlite_master.tbl_name
REG[5] =   s2[t1](8)
  21 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  22 Column           0    0   14               00 r[14]=sqlite_master.type
REG[14] =   s7[trigger](8)
  23 Column           0    1   15               00 r[15]=sqlite_master.name
REG[15] =   s2[t2](8)
  24 Column           0    4   16               00 r[16]=sqlite_master.sql
REG[16] =   s94[CREATE TRIGGER ](8)
  25 Function       113   13    7 sqlite_rename_table(7) 07 r[7]=func(r[13..19])

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f6f88274859 in __GI_abort () at abort.c:79
#2  0x00007f6f88274729 in __assert_fail_base (fmt=0x7f6f8840a588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x227b13 "p->selFlags & SF_Resolved", file=0x22873d "sqlite3.c", line=129795, function=<optimized out>)
    at assert.c:92
#3  0x00007f6f88285fd6 in __GI___assert_fail (assertion=0x227b13 "p->selFlags & SF_Resolved", file=0x22873d "sqlite3.c", line=129795, function=0x22e185 "void selectAddSubqueryTypeInfo(Walker *, Select *)") at assert.c:101
#4  0x000000000032f1ad in selectAddSubqueryTypeInfo (pWalker=0x7ffccfb5a1c0, p=0x1e2cff0) at sqlite3.c:129795
#5  0x000000000031b802 in sqlite3WalkSelect (pWalker=0x7ffccfb5a1c0, p=0x1e2cff0) at sqlite3.c:95105
#6  0x000000000031b44f in walkExpr (pWalker=0x7ffccfb5a1c0, pExpr=0x1e2cfa0) at sqlite3.c:94989
#7  0x000000000031b1f8 in sqlite3WalkExpr (pWalker=0x7ffccfb5a1c0, pExpr=0x1e2cfa0) at sqlite3.c:95004
#8  0x000000000031b8ef in sqlite3WalkExprList (pWalker=0x7ffccfb5a1c0, p=0x1e411d0) at sqlite3.c:95016
#9  0x000000000031b9d4 in walkWindowList (pWalker=0x7ffccfb5a1c0, pList=0x1e2d1f0) at sqlite3.c:94948
#10 0x000000000031b594 in walkExpr (pWalker=0x7ffccfb5a1c0, pExpr=0x1e0f210) at sqlite3.c:94995
#11 0x000000000031b1f8 in sqlite3WalkExpr (pWalker=0x7ffccfb5a1c0, pExpr=0x1e0f210) at sqlite3.c:95004
#12 0x000000000031b8ef in sqlite3WalkExprList (pWalker=0x7ffccfb5a1c0, p=0x1e41440) at sqlite3.c:95016
#13 0x000000000031bb20 in sqlite3WalkSelectExpr (pWalker=0x7ffccfb5a1c0, p=0x1e414d0) at sqlite3.c:95029
#14 0x000000000031b72e in sqlite3WalkSelect (pWalker=0x7ffccfb5a1c0, p=0x1e414d0) at sqlite3.c:95099
#15 0x000000000032f0f3 in sqlite3SelectAddTypeInfo (pParse=0x7ffccfb5a3a0, pSelect=0x1e414d0) at sqlite3.c:129830
#16 0x000000000032eec1 in sqlite3SelectPrep (pParse=0x7ffccfb5a3a0, p=0x1e414d0, pOuterNC=0x7ffccfb5a2c8) at sqlite3.c:129859
#17 0x000000000041be4e in renameResolveTrigger (pParse=0x7ffccfb5a3a0, zDb=0x1e04420 "main") at sqlite3.c:103453
#18 0x000000000041af27 in renameTableFunc (context=0x1dfc0e0, NotUsed=7, argv=0x1dfc110) at sqlite3.c:103870
#19 0x00000000003df844 in sqlite3VdbeExec (p=0x1e07300) at sqlite3.c:90923
#20 0x0000000000411104 in sqlite3Step (p=0x1e07300) at sqlite3.c:81930
#21 0x000000000029128d in sqlite3_step (pStmt=0x1e07300) at sqlite3.c:81995
#22 0x00000000002570b9 in main (argc=1, argv=0x7ffccfb5b1e8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 52786] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
