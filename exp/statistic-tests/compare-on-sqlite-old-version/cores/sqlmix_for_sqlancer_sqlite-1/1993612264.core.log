GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000177,sig:06,src:021963+012652,time:2901390,execs:536045,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) == (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 IfNot            1    7    0               00 
REG[1] =  NULL
   4 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) != (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 If               1    7    0               00 
REG[1] =  NULL
   4 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) != (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 If               1   29    0               00 
REG[1] =  NULL
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) != (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               69 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               4    1    2               69 r[1] = (r[2]!=r[4])
REG[4] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=t1.d
REG[2] =  i:1
   6 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE NOT (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Lt               4    1    4               61 r[1] = (r[4]<r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Gt               4    1    4               61 r[1] = (r[4]>r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:0
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Le               4    1    3               61 r[1] = (r[3]<=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Ge               4    1    3               61 r[1] = (r[3]>=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Ge               4    1    3               61 r[1] = (r[3]>=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE NOT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=t1.d
REG[2] =  i:1
   6 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE NOT (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, NULL, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE NOT (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE NOT (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      1    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t2 ORDER BY a) == (SELECT * FROM t2 ORDER BY a)
  
;]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      1    0    2 1             01 usesStmtJournal=0
  52 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         24    3    0               00 r[3]=24; return address
REG[3] =  i:24
   3 Once             0   24    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   9 Explain          9    4    0 SCAN TABLE t2 00 
  10 Rewind           0   20    0               00 
  20 Explain         20    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 Sort             2   24    0               00 
  24 Return           3    0    0               00 
REG[3] =  i:24
  25 Integer         47    9    0               00 r[9]=47; return address
REG[9] =  i:47
  26 Once             0   47    0               00 
  27 Explain         27    0    0 SCALAR SUBQUERY 2 00 
  28 Null             0   10   10               00 r[10..10]=NULL; Init subquery result
REG[10] =  NULL
  29 OpenEphemeral    3    3    0 k(1,B)        00 nColumn=3
  30 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  31 OpenRead         1    2    1 1             00 root=2 iDb=1; t2
  32 Explain         32   27    0 SCAN TABLE t2 00 
  33 Rewind           1   43    0               00 
  43 Explain         43   27    0 USE TEMP B-TREE FOR ORDER BY 00 
  44 Sort             3   47    0               00 
  47 Return           9    0    0               00 
REG[9] =  i:47
  48 Eq              10    1    4               61 r[1] = (r[4]==r[10])
REG[10] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  49 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  50 Halt             0    0    0               00 
SQL: [SELECT (1, 1) == (SELECT a,a FROM t2 ORDER BY a, a)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      1    0    2 1             01 usesStmtJournal=0
  35 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  36 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,B,B)      00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   9 Explain          9    4    0 SCAN TABLE t2 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:1
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   11 (BINARY)      69 r[1] = (r[11]==r[4])
REG[4] =  NULL
REG[11] =  i:1
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (3, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   5 Lt               5    7    2               61 r[7] = (r[2]<r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  i:0
REG[1] =  i:0
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t2i1(c, temptable, key);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2i1          00 r[7]='t2i1'
REG[7] =   t4[t2i1](8)
  20 String8          0    8    0 t2i1          00 r[8]='t2i1'
REG[8] =   t4[t2i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t2i1(c, temptable, key) 00 r[10]='CREATE TABLE t2i1(c, temptable, key)'
REG[10] =   t36[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s56[0617151501557461626C657432693174.....Utablet2i1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s56[0617151501557461626C657432693174.....Utablet2i1t]
REG[5] =  i:2
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='t2i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             00 usesStmtJournal=0
  16 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s36[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2i1](8)
REG[5] =  i:3
REG[6] =   s36[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE (a, a) = (SELECT 'abc', 1);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      1    0    2 1             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE (a, a) = (SELECT 'abc' COLLATE nocase, 1);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      1    0    2 1             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE a = (SELECT 'abc' COLLATE nocase) AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      1    0    2 1             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE +a = (SELECT 'abc' COLLATE nocase) AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      1    0    2 1             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE a = (SELECT 'abc') COLLATE nocase AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      1    0    2 1             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE (a, a) = (SELECT 2, 'def');]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      1    0    2 1             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE value(donotread INTEGER PRIMARY KEY, t4, t1b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 value         00 r[7]='value'
REG[7] =   t5[value](8)
  20 String8          0    8    0 value         00 r[8]='value'
REG[8] =   t5[value](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE value(donotread INTEGER PRIMARY KEY, t4, t1b) 00 r[10]='CREATE TABLE value(donotread INTEGER PRIMARY KEY, t4, t1b)'
REG[10] =   t58[CREATE TABLE va](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s81[071717170181017461626C6576616C75.......tablevalu]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s81[071717170181017461626C6576616C75.......tablevalu]
REG[5] =  i:3
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='value' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 1             00 usesStmtJournal=0
  16 String8          0    2    0 value         00 r[2]='value'
REG[2] =   t5[value](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[value](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[value](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[value](8)
REG[1] =   s5[value](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[value](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s58[CREATE TABLE va](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[value](8)
REG[5] =  i:4
REG[6] =   s58[CREATE TABLE va](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (a, a) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    2 1             01 usesStmtJournal=0
  13 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM b WHERE (t1i1, t1i1) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    2 1             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   2 Explain          2    0    0 SCAN TABLE b  00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (a, a) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    2 1             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (a, a) > ('2', 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    2 1             01 usesStmtJournal=0
  15 String8          0    3    0 2             00 r[3]='2'
REG[3] =   t1[2](8)
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE name(t3);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 name          00 r[7]='name'
REG[7] =   t4[name](8)
  20 String8          0    8    0 name          00 r[8]='name'
REG[8] =   t4[name](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE name(t3) 00 r[10]='CREATE TABLE name(t3)'
REG[10] =   t21[CREATE TABLE na](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[0617151501377461626C656E616D656E.....7tablenamen]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[0617151501377461626C656E616D656E.....7tablenamen]
REG[5] =  i:4
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='name' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 1             00 usesStmtJournal=0
  16 String8          0    2    0 name          00 r[2]='name'
REG[2] =   t4[name](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s4[name](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[name](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE na](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[name](8)
REG[5] =  i:5
REG[6] =   s21[CREATE TABLE na](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE (select min(t1i1) FROM b) IN (?, ?, ?)

;]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      1    0    2 1             01 usesStmtJournal=0
  43 Goto             0    1    0               00 
   1 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   2 Explain          2    0    0 SCAN TABLE b  00 
   3 Rewind           0   41    0               00 
  41 Halt             0    0    0               00 
SQL: [CREATE TABLE d(e INTEGER PRIMARY KEY, f, t2abc);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 d             00 r[7]='d'
REG[7] =   t1[d](8)
  20 String8          0    8    0 d             00 r[8]='d'
REG[8] =   t1[d](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE d(e INTEGER PRIMARY KEY, f, t2abc) 00 r[10]='CREATE TABLE d(e INTEGER PRIMARY KEY, f, t2abc)'
REG[10] =   t47[CREATE TABLE d(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s61[06170F0F016B7461626C656464064352.....ktabledd.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s61[06170F0F016B7461626C656464064352.....ktabledd.CR]
REG[5] =  i:5
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='d' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 1             00 usesStmtJournal=0
  16 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[d](8)
REG[1] =   s1[d](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[d](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s47[CREATE TABLE d(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[d](8)
REG[5] =  i:6
REG[6] =   s47[CREATE TABLE d(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO d VALUES(3, 3, 3);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    6 1             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 3             00 root=6 iDb=0; d
   2 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:3
   5 MustBeInt        1    0    0               00 
REG[1] =  i:3
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   8 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:3
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010303......]
  14 Insert           0    5    1 d             31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010303......]
REG[1] =  i:3
  15 Halt             0    0    0               00 
SQL: [;
;SELECT key FROM t2i1 WHERE (temptable, key) > (2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    6 1             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; t2i1
   2 Explain          2    0    0 SCAN TABLE t2i1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT a FROM t2 WHERE (a, a) > (2, 2)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    2 1             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Goto             0    1    0               00 
   1 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2cd(t2def TEXT,t5 TEXT,t5a TEXT,t5b TEXT,x1 TEXT,x1i TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2cd          00 r[7]='t2cd'
REG[7] =   t4[t2cd](8)
  20 String8          0    8    0 t2cd          00 r[8]='t2cd'
REG[8] =   t4[t2cd](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE t2cd(t2def TEXT,t5 TEXT,t5a TEXT,t5b TEXT,x1 TEXT,x1i TEXT) 00 r[10]='CREATE TABLE t2cd(t2def TEXT,t5 TEXT,t5a TEXT,t5b TEXT,x1 TEXT,x1i TEXT)'
REG[10] =   t72[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s93[0717151501811D7461626C6574326364.......tablet2cd]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s93[0717151501811D7461626C6574326364.......tablet2cd]
REG[5] =  i:6
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='t2cd' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 1             00 usesStmtJournal=0
  16 String8          0    2    0 t2cd          00 r[2]='t2cd'
REG[2] =   t4[t2cd](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2cd](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2cd](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2cd](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2cd](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2cd](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2cd](8)
REG[1] =   s4[t2cd](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2cd](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s72[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2cd](8)
REG[5] =  i:7
REG[6] =   s72[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT donotread FROM value
    WHERE (t1b,donotread) IN (SELECT 't1b','donotread' FROM value)
    AND (donotread,t1b,t1b) IN (SELECT 'donotread','t1b','donotread' FROM value);]
VDBE Trace:
   0 Init             0   64    0               00 Start at 64
  64 Transaction      0    0    7 1             01 usesStmtJournal=0
  65 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; value
   2 Explain          2    0    0 SEARCH TABLE value USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Integer         14    2    0               00 r[2]=14; return address
REG[2] =  i:14
   4 Once             0   14    0               00 
   5 OpenEphemeral    3    1    0 k(1,)         00 nColumn=1; Result of SELECT 2
   6 Explain          6    0    0 LIST SUBQUERY 2 00 
   7 OpenRead         2    4    0 0             00 root=4 iDb=0; value
   8 Explain          8    6    0 SCAN TABLE value 00 
   9 Rewind           2   14    0               00 
  14 Return           2    0    0               00 
REG[2] =  i:14
  15 Rewind           3   63    0               00 
  63 Halt             0    0    0               00 
SQL: [;CREATE TABLE x1i2(t0,c0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 x1i2          00 r[7]='x1i2'
REG[7] =   t4[x1i2](8)
  20 String8          0    8    0 x1i2          00 r[8]='x1i2'
REG[8] =   t4[x1i2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE x1i2(t0,c0) 00 r[10]='CREATE TABLE x1i2(t0,c0)'
REG[10] =   t24[CREATE TABLE x1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[06171515013D7461626C657831693278.....=tablex1i2x]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[06171515013D7461626C657831693278.....=tablex1i2x]
REG[5] =  i:7
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='x1i2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 1             00 usesStmtJournal=0
  16 String8          0    2    0 x1i2          00 r[2]='x1i2'
REG[2] =   t4[x1i2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[x1i2](8)
REG[1] =   s4[x1i2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[x1i2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s24[CREATE TABLE x1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[x1i2](8)
REG[5] =  i:8
REG[6] =   s24[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT *,'donotread' FROM b LEFT JOIN value ON (t1i1,t1i1)=(donotread,t4);]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    8 1             01 usesStmtJournal=0
  25 Transaction      1    0    2 1             01 usesStmtJournal=0
  26 Goto             0    1    0               00 
   1 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   2 OpenRead         1    4    0 3             00 root=4 iDb=0; value
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0   23    0               00 
  23 Halt             0    0    0               00 
SQL: [CREATE TABLE i0(_x_);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    8 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 i0            00 r[7]='i0'
REG[7] =   t2[i0](8)
  20 String8          0    8    0 i0            00 r[8]='i0'
REG[8] =   t2[i0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE i0(_x_) 00 r[10]='CREATE TABLE i0(_x_)'
REG[10] =   t20[CREATE TABLE i0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C656930693009.....5tablei0i0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C656930693009.....5tablei0i0.]
REG[5] =  i:8
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='i0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 1             00 usesStmtJournal=0
  16 String8          0    2    0 i0            00 r[2]='i0'
REG[2] =   t2[i0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[i0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[i0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE i0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[i0](8)
REG[5] =  i:9
REG[6] =   s20[CREATE TABLE i0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT CASE (SELECT 2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  22 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Eq               7    6    3               61 r[6] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:2
REG[6] =  i:0
  13 IfNot            6   15    0               00 
REG[6] =  i:0
  15 IfNot            6   18    1               00 
REG[6] =  i:0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  20 Halt             0    0    0               00 
SQL: [SELECT 1 WHERE (SELECT 2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    1    0               00 r[1]=11; return address
REG[1] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    2    3               00 r[2..3]=NULL; Init subquery result
REG[2] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 DecrJumpZero     4   11    0               00 if (--r[4])==0 goto 11
REG[4] =  i:1
  11 Return           1    0    0               00 
REG[1] =  i:11
  12 Gt               6    5    2               61 r[5] = (r[2]>r[6])
REG[6] =  i:1
REG[2] =  i:2
REG[5] =  i:1
  13 ElseNotEq        0   15    0               00 
  15 IfNot            5   22    1               00 
REG[5] =  i:1
  16 Lt               7    5    2               61 r[5] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[5] =  i:1
  17 ElseNotEq        0   19    0               00 
  19 IfNot            5   22    1               00 
REG[5] =  i:1
  20 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  21 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  22 Halt             0    0    0               00 
SQL: [CREATE TABLE _xxx_(i1 PRIMARY KEY, v1);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    9 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:11
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:10
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex__xxx__1 00 r[7]='sqlite_autoindex__xxx__1'
REG[7] =   t24[sqlite_autoinde](8)
  17 String8          0    8    0 _xxx_         00 r[8]='_xxx_'
REG[8] =   t5[_xxx_](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:11
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06173D170100696E64657873716C6974..=...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s41[06173D170100696E64657873716C6974..=...indexsqlit]
REG[5] =  i:10
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:9
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:9
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:9
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 _xxx_         00 r[15]='_xxx_'
REG[15] =   t5[_xxx_](8)
  31 String8          0   16    0 _xxx_         00 r[16]='_xxx_'
REG[16] =   t5[_xxx_](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:10
  33 String8          0   18    0 CREATE TABLE _xxx_(i1 PRIMARY KEY, v1) 00 r[18]='CREATE TABLE _xxx_(i1 PRIMARY KEY, v1)'
REG[18] =   t38[CREATE TABLE _x](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s60[0617171701597461626C655F7878785F.....Ytable_xxx_]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s60[0617171701597461626C655F7878785F.....Ytable_xxx_]
REG[13] =  i:9
  36 SetCookie        0    1   10               00 
  37 ParseSchema      0    0    0 tbl_name='_xxx_' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 1             00 usesStmtJournal=0
  16 String8          0    2    0 _xxx_         00 r[2]='_xxx_'
REG[2] =   t5[_xxx_](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s5[_xxx_](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[_xxx_](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s38[CREATE TABLE _x](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[_xxx_](8)
REG[5] =  i:10
REG[6] =   s38[CREATE TABLE _x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t5[_xxx_](8)
REG[1] =   s5[_xxx_](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s24[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s24[sqlite_autoinde](8)
REG[5] =  i:11
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE tr1(tr2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr1           00 r[7]='tr1'
REG[7] =   t3[tr1](8)
  20 String8          0    8    0 tr1           00 r[8]='tr1'
REG[8] =   t3[tr1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:12
  22 String8          0   10    0 CREATE TABLE tr1(tr2) 00 r[10]='CREATE TABLE tr1(tr2)'
REG[10] =   t21[CREATE TABLE tr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[0617131301377461626C657472317472.....7tabletr1tr]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[0617131301377461626C657472317472.....7tabletr1tr]
REG[5] =  i:11
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='tr1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 1             00 usesStmtJournal=0
  16 String8          0    2    0 tr1           00 r[2]='tr1'
REG[2] =   t3[tr1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr1](8)
REG[1] =   s3[tr1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr1](8)
REG[5] =  i:12
REG[6] =   s21[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER y AFTER UPDATE ON t2i1 BEGIN
     UPDATE t2i1 SET (temptable,c,c)=(SELECT new.temptable,new.temptable+1,new.temptable+2);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   11 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
   5 String8          0    4    0 t2i1          00 r[4]='t2i1'
REG[4] =   t4[t2i1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER y AFTER UPDATE ON t2i1 BEGIN
     UPDATE t2i1 SET (temptable,c,c)=(SELECT new.temptable,new.temptable+1,new.temptable+2);
  END 00 r[6]='CREATE TRIGGER y AFTER UPDATE ON t2i1 BEGIN
     UPDATE t2i1 SET (temptable,c,c)=(SELECT new.
REG[6] =   t142[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s161[071B0F15088229747269676765727974......)triggeryt]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s161[071B0F15088229747269676765727974......)triggeryt]
REG[1] =  i:12
  10 SetCookie        0    1   12               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='y' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 1             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t1[y](8)
REG[1] =   s1[y](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[y](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s142[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[y](8)
REG[5] =  i:0
REG[6] =   s142[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE x1i2 SET c0=7;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   12 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    8    0 2             00 root=8 iDb=0; x1i2
   3 Explain          3    0    0 SCAN TABLE x1i2 00 
   4 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;DROP TRIGGER y;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   12 1             01 usesStmtJournal=0
  17 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
  18 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  19 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[t2i1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s4[t2i1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[value](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s5[value](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[name](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s4[name](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[d](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s1[d](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[t2cd](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s4[t2cd](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[x1i2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s4[x1i2](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[i0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s2[i0](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[_xxx_](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s5[_xxx_](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s24[sqlite_autoinde](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s24[sqlite_autoinde](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[tr1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s3[tr1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[y](8)
REG[2] =   s1[y](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s7[trigger](8)
   8 Ne               4   12    2 (BINARY)      52 if r[2]!=r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s7[trigger](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:12
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 SetCookie        0    1   13               00 
  14 DropTrigger      0    0    0 y             00 
  15 Halt             0    0    0               00 
SQL: [;PRAGMA recursive_triggers = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER y AFTER UPDATE ON x1i2 WHEN new.t0>1 BEGIN
    UPDATE x1i2 SET (c0, c0) = (
      SELECT c0, c0 FROM x1i2 WHERE t0 = new.t0-1
    ), (c0, c0) = (
      SELECT c0, c0 FROM x1i2 WHERE t0 = new.t0-1
    ) WHERE t0 = new.t0-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   13 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
   5 String8          0    4    0 x1i2          00 r[4]='x1i2'
REG[4] =   t4[x1i2](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER y AFTER UPDATE ON x1i2 WHEN new.t0>1 BEGIN
    UPDATE x1i2 SET (c0, c0) = (
      SELECT c0, c0 FROM x1i2 WHERE t0 = new.t0-1
    ), (c0, c0) = (
      SELECT c0, c0 FROM x1i2 WHERE t0 = new.t0-1
    ) WHERE t0 = new.t0-1;
  END 00 r[6]='CREATE TRIGGER y AFTER UPDATE ON x1i2 WHEN new.t0>1 BEGIN
    UPDATE x1i2 SET (c0, c0) = (
  
REG[6] =   t243[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s262[071B0F15088373747269676765727978......striggeryx]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s262[071B0F15088373747269676765727978......striggeryx]
REG[1] =  i:12
  10 SetCookie        0    1   14               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='y' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 1             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 y             00 r[3]='y'
REG[3] =   t1[y](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t1[y](8)
REG[1] =   s1[y](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[y](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s243[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[y](8)
REG[5] =  i:0
REG[6] =   s243[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE i ( j, t1y, PRIMARY KEY (j, t1y) );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   14 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:13
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:14
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:14
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_i_1 00 r[7]='sqlite_autoindex_i_1'
REG[7] =   t20[sqlite_autoinde](8)
  17 String8          0    8    0 i             00 r[8]='i'
REG[8] =   t1[i](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:14
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit]
REG[5] =  i:14
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:13
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:13
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:13
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 i             00 r[15]='i'
REG[15] =   t1[i](8)
  31 String8          0   16    0 i             00 r[16]='i'
REG[16] =   t1[i](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:13
  33 String8          0   18    0 CREATE TABLE i ( j, t1y, PRIMARY KEY (j, t1y) ) 00 r[18]='CREATE TABLE i ( j, t1y, PRIMARY KEY (j, t1y) )'
REG[18] =   t47[CREATE TABLE i ](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s61[06170F0F016B7461626C6569690D4352.....ktableii.CR]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s61[06170F0F016B7461626C6569690D4352.....ktableii.CR]
REG[13] =  i:13
  36 SetCookie        0    1   15               00 
  37 ParseSchema      0    0    0 tbl_name='i' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   15 1             00 usesStmtJournal=0
  16 String8          0    2    0 i             00 r[2]='i'
REG[2] =   t1[i](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s1[i](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[i](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s47[CREATE TABLE i ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[i](8)
REG[5] =  i:13
REG[6] =   s47[CREATE TABLE i ](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[i](8)
REG[1] =   s1[i](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s20[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s20[sqlite_autoinde](8)
REG[5] =  i:14
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE a1 ( a2 );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   15 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:15
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:15
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:15
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:15
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:15
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a1            00 r[7]='a1'
REG[7] =   t2[a1](8)
  20 String8          0    8    0 a1            00 r[8]='a1'
REG[8] =   t2[a1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:15
  22 String8          0   10    0 CREATE TABLE a1 ( a2 ) 00 r[10]='CREATE TABLE a1 ( a2 )'
REG[10] =   t22[CREATE TABLE a1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C65613161310F.....9tablea1a1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C65613161310F.....9tablea1a1.]
REG[5] =  i:15
  25 SetCookie        0    1   16               00 
  26 ParseSchema      0    0    0 tbl_name='a1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   16 1             00 usesStmtJournal=0
  16 String8          0    2    0 a1            00 r[2]='a1'
REG[2] =   t2[a1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s1[i](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s1[i](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[a1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[a1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:15
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE a1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[a1](8)
REG[5] =  i:15
REG[6] =   s22[CREATE TABLE a1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE a3 ( a4, b1 );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   16 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:16
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:16
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:16
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:16
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:16
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a3            00 r[7]='a3'
REG[7] =   t2[a3](8)
  20 String8          0    8    0 a3            00 r[8]='a3'
REG[8] =   t2[a3](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:16
  22 String8          0   10    0 CREATE TABLE a3 ( a4, b1 ) 00 r[10]='CREATE TABLE a3 ( a4, b1 )'
REG[10] =   t26[CREATE TABLE a3](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[0617111101417461626C656133613310.....Atablea3a3.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[0617111101417461626C656133613310.....Atablea3a3.]
REG[5] =  i:16
  25 SetCookie        0    1   17               00 
  26 ParseSchema      0    0    0 tbl_name='a3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   17 1             00 usesStmtJournal=0
  16 String8          0    2    0 a3            00 r[2]='a3'
REG[2] =   t2[a3](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s5[value](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s4[name](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2cd](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[_xxx_](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s5[_xxx_](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[x1i2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s4[x1i2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s1[i](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s1[i](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s2[a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a3](8)
REG[1] =   s2[a3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[a3](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:16
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE a3](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[a3](8)
REG[5] =  i:16
REG[6] =   s26[CREATE TABLE a3](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2cd WHERE (x1i,t5)>=(0,0) ORDER BY x1i;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   17 1             01 usesStmtJournal=0
  34 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  35 Goto             0    1    0               00 
   1 SorterOpen       1    8    0 k(1,B)        00 
   2 OpenRead         0    7    0 6             00 root=7 iDb=0; t2cd
   3 Explain          3    0    0 SCAN TABLE t2cd 00 
   4 Rewind           0   20    0               00 
  20 Explain         20    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       2   12    8               00 8 columns in r[12]
  22 SorterSort       1   32    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE (t1i1,t1i1)>(3,0) ORDER BY t1i1;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      1    0    2 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM x1i2 WHERE (t0,t0)>=(3,0) ORDER BY t0;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 1             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    8    0 2             00 root=8 iDb=0; x1i2
   3 Explain          3    0    0 SCAN TABLE x1i2 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM value WHERE (donotread,t1b)<(3,0) ORDER BY donotread DESC;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   17 1             01 usesStmtJournal=0
  19 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  20 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  21 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    4    0 3             00 root=4 iDb=0; value
   3 Explain          3    0    0 SEARCH TABLE value USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekLE           0   17    1               00 key=r[1]; pk
REG[1] =  i:3
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM x1i2 WHERE (t0,t0)<(3,34) ORDER BY t0 DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   17 1             01 usesStmtJournal=0
  26 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  27 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    8    0 2             00 root=8 iDb=0; x1i2
   3 Explain          3    0    0 SCAN TABLE x1i2 00 
   4 Rewind           0   16    0               00 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM d WHERE (0,0)<(e,e) ORDER BY e;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   17 1             01 usesStmtJournal=0
  19 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; d
   3 Explain          3    0    0 SEARCH TABLE d USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 SeekGE           0   17    1               00 key=r[1]; pk
REG[1] =  i:0
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   7 Gt               3    1    2               64 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:3
REG[1] =  i:1
   8 ElseNotEq        0   11    0               00 
  11 IfNot            1   16    1               00 
REG[1] =  i:1
  12 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:3
  13 Column           0    1    5               00 r[5]=d.f
REG[5] =  i:3
  14 Column           0    2    6               00 r[6]=d.t2abc
REG[6] =  i:3
  15 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =  i:3
REG[5] =  i:3
REG[6] =  i:3
  16 Next             0    6    0               00 
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (5,0)>(a,a) ORDER BY a DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      1    0    2 1             01 usesStmtJournal=0
  24 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM name WHERE (3,0)<=(t3,t3) ORDER BY t3;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; name
   3 Explain          3    0    0 SCAN TABLE name 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (3,0)>(a,a) ORDER BY a DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      1    0    2 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2i1 WHERE (3,0)>=(temptable,temptable) ORDER BY temptable DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   17 1             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2i1
   3 Explain          3    0    0 SCAN TABLE t2i1 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2cd WHERE (3,32)<(x1,t5a) ORDER BY x1;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   17 1             01 usesStmtJournal=0
  34 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  35 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  36 Goto             0    1    0               00 
   1 SorterOpen       1    8    0 k(1,B)        00 
   2 OpenRead         0    7    0 6             00 root=7 iDb=0; t2cd
   3 Explain          3    0    0 SCAN TABLE t2cd 00 
   4 Rewind           0   20    0               00 
  20 Explain         20    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 OpenPseudo       2   13    8               00 8 columns in r[13]
  22 SorterSort       1   32    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM value WHERE (3,33)<(t1b,t1b) ORDER BY t1b;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   17 1             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    4    0 3             00 root=4 iDb=0; value
   3 Explain          3    0    0 SCAN TABLE value 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM name WHERE (3,33)>(t3,t3) ORDER BY t3 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   17 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; name
   3 Explain          3    0    0 SCAN TABLE name 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM b WHERE (3,33)>=(t1i1,t1i1) ORDER BY t1i1 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      1    0    2 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    3    1 1             00 root=3 iDb=1; b
   3 Explain          3    0    0 SCAN TABLE b  00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,(2,0)) IS (2,(2,0));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   9 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   3 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   4 Ne               2    7    2               C1 if r[2]!=r[2] goto 7
REG[2] =  i:0
REG[2] =  i:0
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
   7 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f417e75d859 in __GI_abort () at abort.c:79
#2  0x00007f417e75d729 in __assert_fail_base (fmt=0x7f417e8f3588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007f417e76efd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7ffe3b39ad80, p=0x1595110, pIn=0x7ffe3b399400, pDest=0x7ffe3b399958, regReturn=15, regPrev=9, pKeyInfo=0x15808f0, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7ffe3b39ad80, p=0x1595110, pDest=0x7ffe3b399958) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7ffe3b39ad80, p=0x1595110, pDest=0x7ffe3b399958) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffe3b39ad80, p=0x1595110, pDest=0x7ffe3b399958) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffe3b39ad80, pExpr=0x159b830) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7ffe3b39ad80, p=0x159b830, piFreeable=0x7ffe3b399a1c) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7ffe3b39ad80, pExpr=0x159b380, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7ffe3b39ad80, pExpr=0x159b380, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffe3b39ad80, pList=0x158cdd0, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffe3b39ad80, pSelect=0x1583320, pInfo=0x7ffe3b399dc0) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffe3b39ad80, p=0x1583320, srcTab=-1, pSort=0x0, pDistinct=0x7ffe3b39a060, pDest=0x7ffe3b39a170, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7ffe3b39ad80, p=0x1583320, pDest=0x7ffe3b39a170) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffe3b39a3a0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffe3b39ad80) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffe3b39a3a0, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffe3b39ad80, 
    zSql=0x1587055 ";;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT 5,6);;\n;DROP TABLE IF EXISTS t0;;CREATE TABLE b2(b3 COLLATE NOCASE, b4);;INSERT INTO t2cd VALUES('a', 'A');;SELECT (+t3,1) >= (t3, 1),"..., pzErrMsg=0x7ffe3b39af60) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x15762b0, 
    zSql=0x157e3d7 ";SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT 5,6);;\n;DROP TABLE IF EXISTS t0;;CREATE TABLE b2(b3 COLLATE NOCAS"..., nBytes=847, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffe3b39b098, pzTail=0x7ffe3b39b080) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x15762b0, 
    zSql=0x157e3d7 ";SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT 5,6);;\n;DROP TABLE IF EXISTS t0;;CREATE TABLE b2(b3 COLLATE NOCAS"..., nBytes=847, prepFlags=128, pOld=0x0, ppStmt=0x7ffe3b39b098, pzTail=0x7ffe3b39b080) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x15762b0, 
    zSql=0x157e3d7 ";SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1 DESC) IN (SELECT 5,6);;\n;DROP TABLE IF EXISTS t0;;CREATE TABLE b2(b3 COLLATE NOCAS"..., nBytes=847, ppStmt=0x7ffe3b39b098, pzTail=0x7ffe3b39b080) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffe3b39b248) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 52611] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
