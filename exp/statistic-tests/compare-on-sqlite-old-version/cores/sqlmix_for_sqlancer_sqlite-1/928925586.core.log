GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000571,sig:06,src:021776+012652,time:40854611,execs:15013154,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT group_concat(quote(name) || '.' || quote(type)) FROM pragma_table_info(?, ?)
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    1 0             01 usesStmtJournal=0
  22 String8          0   12    0 .             00 r[12]='.'
REG[12] =   t1[.](8)
  23 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 VOpen            0    0    0 vtab:8831A0   00 
   3 Explain          3    0    0 SCAN TABLE pragma_table_info VIRTUAL TABLE INDEX 0: 00 
   4 Variable         1    6    0               00 r[6]=parameter(1,)
REG[6] =  NULL
   5 Variable         2    7    0               00 r[7]=parameter(2,)
REG[7] =  NULL
   6 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   7 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
   8 VFilter          0   17    4               00 iplan=r[4] zplan=''
REG[4] =  i:0
SQL: [PRAGMA table_info]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
  17 AggFinal         1    1    0 group_concat(1) 00 accum=r[1] N=1
  18 Copy             1   13    0               00 r[13]=r[1]
REG[13] =  NULL
  19 ResultRow       13    1    0               00 output=r[13]
REG[13] =  NULL
  20 Halt             0    0    0               00 
SQL: [PRAGMA table_info='t2'
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  i:3
REG[4] =  i:3
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) == (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, 3) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  i:3
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 0, 3) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               4    1    3               E9 r[1] = (r[3]!=r[4])
REG[4] =  i:2
REG[3] =  i:0
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               5    1    4               69 r[1] = (r[4]!=r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               5    1    4               E9 r[1] = (r[4]!=r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, 3)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Integer          3   10    0               00 r[10]=3
REG[10] =  i:3
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:3
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) == (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               69 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               69 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               E9 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) == (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 IfNot            1   29    0               00 
REG[1] =  i:1
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) == (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 IfNot            1    7    0               00 
REG[1] =  NULL
   4 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               2    1    2               69 r[1] = (r[2]==r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) != (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   3 If               1    7    0               00 
REG[1] =  NULL
   4 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) IS NOT (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) == (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 IfNot            1   29    0               00 
REG[1] =  NULL
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) != (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 If               1   29    0               00 
REG[1] =  NULL
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) != (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               69 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               2    1    2               69 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) != (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) == (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               61 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               69 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 IfNot            1    7    0               00 
REG[1] =  NULL
   6 Eq               4    1    2               69 r[1] = (r[2]==r[4])
REG[4] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) != (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               69 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  NULL
   5 If               1    7    0               00 
REG[1] =  NULL
   6 Ne               4    1    2               69 r[1] = (r[2]!=r[4])
REG[4] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 1, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 1, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    2               61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 1, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Lt               4    1    4               61 r[1] = (r[4]<r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 2, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:0
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Gt               4    1    4               61 r[1] = (r[4]>r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:0
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Le               4    1    4               61 r[1] = (r[4]<=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Le               4    1    3               61 r[1] = (r[3]<=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Le               4    1    3               61 r[1] = (r[3]<=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Ge               4    1    4               61 r[1] = (r[4]>=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 2, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Ge               4    1    3               61 r[1] = (r[3]>=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:1
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:1
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    1 0             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [;
;SELECT (1, 1) == (SELECT x,x FROM t1 ORDER BY x)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    1 0             01 usesStmtJournal=0
  34 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         27    2    0               00 r[2]=27; return address
REG[2] =  i:27
   3 Once             0   27    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   22    0               00 
  22 Explain         22    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  23 Sort             1   27    0               00 
  27 Return           2    0    0               00 
REG[2] =  i:27
  28 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  NULL
REG[10] =  i:1
REG[1] =  NULL
  29 IfNot            1   31    0               00 
REG[1] =  NULL
  30 Eq               4    1   10 (BINARY)      69 r[1] = (r[10]==r[4])
REG[4] =  NULL
REG[10] =  i:1
REG[1] =  NULL
  31 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  32 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY x, x) == (SELECT * FROM t1 ORDER BY x, x)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,B,B)      00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,B,B)      00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  33 Explain         33   28    0 SCAN TABLE t1 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY x, x DESC) == (SELECT * FROM t1 ORDER BY x, x DESC)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,B,-B)     00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,B,-B)     00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  33 Explain         33   28    0 SCAN TABLE t1 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY x DESC, x DESC) == (SELECT * FROM t1 ORDER BY x DESC, x DESC)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    1 0             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,-B,-B)    00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,-B,-B)    00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  33 Explain         33   28    0 SCAN TABLE t1 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Integer          3    8    0               00 r[8]=3
REG[8] =  i:3
  16 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               6    4    3               61 r[4] = (r[3]>=r[6])
REG[6] =  NULL
REG[3] =  i:2
REG[4] =  NULL
   5 Lt               8    7    2               61 r[7] = (r[2]<r[8])
REG[8] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  NULL
REG[1] =  NULL
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  10 Halt             0    0    0               00 
SQL: [;
;SELECT x FROM t1 WHERE x = (SELECT 'abc') COLLATE nocase AND x = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    1 0             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE t2(a INTEGER PRIMARY KEY, b, t1i1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t2(a INTEGER PRIMARY KEY, b, t1i1) 00 r[10]='CREATE TABLE t2(a INTEGER PRIMARY KEY, b, t1i1)'
REG[10] =   t47[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s63[06171111016B7461626C657432743203.....ktablet2t2.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s63[06171111016B7461626C657432743203.....ktablet2t2.]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s47[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t2](8)
REG[5] =  i:3
REG[6] =   s47[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2 VALUES(1, 1, 1);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    2 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; t2
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   8 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:1
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04000909....]
  14 Insert           0    5    1 t2            31 intkey=r[1] data=r[5]
REG[5] =  s4[04000909....]
REG[1] =  i:1
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO t2 VALUES(4, 4, 4);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    2 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 3             00 root=3 iDb=0; t2
   2 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:4
   5 MustBeInt        1    0    0               00 
REG[1] =  i:4
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:4
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010404......]
  14 Insert           0    5    1 t2            31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010404......]
REG[1] =  i:4
  15 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, x) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, x) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, x) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, x) > (2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, x) > ('2', 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 String8          0    3    0 2             00 r[3]='2'
REG[3] =   t1[2](8)
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE t2i1(c);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2i1          00 r[7]='t2i1'
REG[7] =   t4[t2i1](8)
  20 String8          0    8    0 t2i1          00 r[8]='t2i1'
REG[8] =   t4[t2i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE t2i1(c) 00 r[10]='CREATE TABLE t2i1(c)'
REG[10] =   t20[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s40[0617151501357461626C657432693174.....5tablet2i1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s40[0617151501357461626C657432693174.....5tablet2i1t]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='t2i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2i1](8)
REG[5] =  i:4
REG[6] =   s20[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [CREATE TABLE temptable(key INTEGER PRIMARY KEY, value, donotread);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 temptable     00 r[7]='temptable'
REG[7] =   t9[temptable](8)
  20 String8          0    8    0 temptable     00 r[8]='temptable'
REG[8] =   t9[temptable](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE temptable(key INTEGER PRIMARY KEY, value, donotread) 00 r[10]='CREATE TABLE temptable(key INTEGER PRIMARY KEY, value, donotread)'
REG[10] =   t65[CREATE TABLE te](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s96[07171F1F01810F7461626C6574656D70.......tabletemp]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s96[07171F1F01810F7461626C6574656D70.......tabletemp]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='temptable' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 temptable     00 r[2]='temptable'
REG[2] =   t9[temptable](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s9[temptable](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[temptable](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s65[CREATE TABLE te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[temptable](8)
REG[5] =  i:5
REG[6] =   s65[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO temptable VALUES(1, 1, 1);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    4 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 3             00 root=5 iDb=0; temptable
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   8 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:1
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s4[04000909....]
  14 Insert           0    5    1 temptable     31 intkey=r[1] data=r[5]
REG[5] =  s4[04000909....]
REG[1] =  i:1
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO temptable VALUES(2, 2, 2);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    4 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 3             00 root=5 iDb=0; temptable
   2 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:2
   5 MustBeInt        1    0    0               00 
REG[1] =  i:2
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   8 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:2
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010202......]
  14 Insert           0    5    1 temptable     31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010202......]
REG[1] =  i:2
  15 Halt             0    0    0               00 
SQL: [;INSERT INTO temptable VALUES(4, 4, 4);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    4 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 3             00 root=5 iDb=0; temptable
   2 Integer          4    1    0               00 r[1]=4
REG[1] =  i:4
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:4
   5 MustBeInt        1    0    0               00 
REG[1] =  i:4
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
   9 Noop             0    0    0               00 uniqueness check for ROWID
  10 Abortable        0    0    0               00 
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:4
  13 MakeRecord       2    3    5 D             00 r[5]=mkrec(r[2..4])
REG[5] =  s6[040001010404......]
  14 Insert           0    5    1 temptable     31 intkey=r[1] data=r[5]
REG[5] =  s6[040001010404......]
REG[1] =  i:4
  15 Halt             0    0    0               00 
SQL: [;
;SELECT c FROM t2i1 WHERE (c, c) > (2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; t2i1
   2 Explain          2    0    0 SCAN TABLE t2i1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT c FROM t2i1 WHERE (c, c) < (4, 5)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  17 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; t2i1
   2 Explain          2    0    0 SCAN TABLE t2i1 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE t4(t1b);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  20 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE t4(t1b) 00 r[10]='CREATE TABLE t4(t1b)'
REG[10] =   t20[CREATE TABLE t4](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657434743406.....5tablet4t4.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657434743406.....5tablet4t4.]
REG[5] =  i:5
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t4](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE t4](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t4](8)
REG[5] =  i:6
REG[6] =   s20[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(x) VALUES('X');]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    5 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 X             00 r[2]='X'
REG[2] =   t1[X](8)
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s3[020F58..X]
   5 Insert           0    3    1 t1            39 intkey=r[1] data=r[3]
REG[3] =  s3[020F58..X]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;CREATE INDEX name ON t2i1(c,c,c,c,c);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    5 0             01 usesStmtJournal=0
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 name          00 r[4]='name'
REG[4] =   t4[name](8)
   7 String8          0    5    0 t2i1          00 r[5]='t2i1'
REG[5] =   t4[t2i1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX name ON t2i1(c,c,c,c,c) 00 r[7]='CREATE INDEX name ON t2i1(c,c,c,c,c)'
REG[7] =   t36[CREATE INDEX na](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s56[061715150155696E6465786E616D6574.....Uindexnamet]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s56[061715150155696E6465786E616D6574.....Uindexnamet]
REG[2] =  i:6
  12 SorterOpen       3    0    5 k(6,,,,,,)    00 
  13 OpenRead         1    4    0 1             00 root=4 iDb=0; t2i1
  14 Rewind           1   24    0               00 
  24 OpenWrite        2    1    0 k(6,,,,,,)    11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    6               00 
  34 ParseSchema      0    0    0 name='name' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 0             00 usesStmtJournal=0
  16 String8          0    2    0 name          00 r[2]='name'
REG[2] =   t4[name](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[name](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[name](8)
REG[1] =   s4[name](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[name](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s36[CREATE INDEX na](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[name](8)
REG[5] =  i:7
REG[6] =   s36[CREATE INDEX na](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [;CREATE TABLE t3(d,e);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t3            00 r[7]='t3'
REG[7] =   t2[t3](8)
  20 String8          0    8    0 t3            00 r[8]='t3'
REG[8] =   t2[t3](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE t3(d,e) 00 r[10]='CREATE TABLE t3(d,e)'
REG[10] =   t20[CREATE TABLE t3](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657433743308.....5tablet3t3.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657433743308.....5tablet3t3.]
REG[5] =  i:7
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='t3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t3](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE t3](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t3](8)
REG[5] =  i:8
REG[6] =   s20[CREATE TABLE t3](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t3 VALUES(3,4);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    7 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    8    0 2             00 root=8 iDb=0; t3
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010304.....]
   6 Insert           0    4    1 t3            39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010304.....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [SELECT CASE (SELECT 2,2) WHEN (1, 1) THEN 2 ELSE 1 END
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  22 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Eq               7    6    3               61 r[6] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:2
REG[6] =  i:0
  13 IfNot            6   15    0               00 
REG[6] =  i:0
  15 IfNot            6   18    1               00 
REG[6] =  i:0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  20 Halt             0    0    0               00 
SQL: [SELECT 1 FROM temptable WHERE (key,1) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    7 0             01 usesStmtJournal=0
  22 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  23 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  24 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  25 Goto             0    1    0               00 
   1 OpenRead         0    5    0 0             00 root=5 iDb=0; temptable
   2 Explain          2    0    0 SEARCH TABLE temptable USING INTEGER PRIMARY KEY (rowid>? AND rowid<?) 00 
   3 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   4 SeekGE           0   20    1               00 key=r[1]; pk
REG[1] =  i:1
   5 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   7 Gt               2   20    3               53 if r[3]>r[2] goto 20
REG[2] =  i:3
REG[3] =  i:1
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   9 Gt               6    1    4               64 r[1] = (r[4]>r[6])
REG[6] =  i:1
REG[4] =  i:1
REG[1] =  i:0
  10 ElseNotEq        0   12    0               00 
  11 Ge               6    1    5               61 r[1] = (r[5]>=r[6])
REG[6] =  i:1
REG[5] =  i:1
REG[1] =  i:1
  12 IfNot            1   19    1               00 
REG[1] =  i:1
  13 Lt               7    1    4               64 r[1] = (r[4]<r[7])
REG[7] =  i:3
REG[4] =  i:1
REG[1] =  i:1
  14 ElseNotEq        0   16    0               00 
  16 IfNot            1   19    1               00 
REG[1] =  i:1
  17 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  18 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  19 Next             0    6    0               00 
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   7 Gt               2   20    3               53 if r[3]>r[2] goto 20
REG[2] =  i:3
REG[3] =  i:2
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   9 Gt               6    1    4               64 r[1] = (r[4]>r[6])
REG[6] =  i:1
REG[4] =  i:2
REG[1] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            1   19    1               00 
REG[1] =  i:1
  13 Lt               7    1    4               64 r[1] = (r[4]<r[7])
REG[7] =  i:3
REG[4] =  i:2
REG[1] =  i:1
  14 ElseNotEq        0   16    0               00 
  16 IfNot            1   19    1               00 
REG[1] =  i:1
  17 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  18 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:1
  19 Next             0    6    0               00 
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:4
   7 Gt               2   20    3               53 if r[3]>r[2] goto 20
REG[2] =  i:3
REG[3] =  i:4
  20 Halt             0    0    0               00 
SQL: [;CREATE TABLE f(t2abc);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 f             00 r[7]='f'
REG[7] =   t1[f](8)
  20 String8          0    8    0 f             00 r[8]='f'
REG[8] =   t1[f](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE f(t2abc) 00 r[10]='CREATE TABLE f(t2abc)'
REG[10] =   t21[CREATE TABLE f(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[06170F0F01377461626C656666094352.....7tableff.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s35[06170F0F01377461626C656666094352.....7tableff.CR]
REG[5] =  i:8
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='f' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             00 usesStmtJournal=0
  16 String8          0    2    0 f             00 r[2]='f'
REG[2] =   t1[f](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[f](8)
REG[1] =   s1[f](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[f](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE f(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[f](8)
REG[5] =  i:9
REG[6] =   s21[CREATE TABLE f(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t2cd AFTER UPDATE ON t4 BEGIN
     UPDATE t4 SET (t1b,t1b,t1b)=(SELECT new.t1b,new.t1b+1,new.t1b+2);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    8 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t2cd          00 r[3]='t2cd'
REG[3] =   t4[t2cd](8)
   5 String8          0    4    0 t4            00 r[4]='t4'
REG[4] =   t2[t4](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t2cd AFTER UPDATE ON t4 BEGIN
     UPDATE t4 SET (t1b,t1b,t1b)=(SELECT new.t1b,new.t1b+1,new.t1b+2);
  END 00 r[6]='CREATE TRIGGER t2cd AFTER UPDATE ON t4 BEGIN
     UPDATE t4 SET (t1b,t1b,t1b)=(SELECT new.t1b
REG[6] =   t121[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s141[071B151108817F747269676765727432.......triggert2]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s141[071B151108817F747269676765727432.......triggert2]
REG[1] =  i:9
  10 SetCookie        0    1    9               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t2cd' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    9 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t2cd          00 r[3]='t2cd'
REG[3] =   t4[t2cd](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2cd](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t4[t2cd](8)
REG[1] =   s4[t2cd](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2cd](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s121[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2cd](8)
REG[5] =  i:0
REG[6] =   s121[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;SELECT * FROM t4;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    0    9 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    6    0 1             00 root=6 iDb=0; t4
   2 Explain          2    0    0 SCAN TABLE t4 00 
   3 Rewind           0    7    0               00 
   7 Halt             0    0    0               00 
SQL: [;
;UPDATE t1 SET x=97;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    9 0             01 usesStmtJournal=0
  13 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 IsNull           2   11    0               00 if r[2]==NULL goto 11
REG[2] =  i:1
   7 Integer         97    3    0               00 r[3]=97
REG[3] =  i:97
   8 MakeRecord       3    1    4               00 r[4]=mkrec(r[3])
REG[4] =  s3[020161..a]
   9 Insert           0    4    2 t1            07 intkey=r[2] data=r[4]
REG[4] =  s3[020161..a]
REG[2] =  i:1
  10 Next             0    5    0               01 
  11 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t2def AFTER INSERT ON t2 BEGIN
    UPDATE t2 SET (t1i1, a) = (SELECT 'b', 't1i1'), (b, t1i1) = (SELECT 't1i1', 'a')
      WHERE b = new.b-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    9 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t2def         00 r[3]='t2def'
REG[3] =   t5[t2def](8)
   5 String8          0    4    0 t2            00 r[4]='t2'
REG[4] =   t2[t2](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t2def AFTER INSERT ON t2 BEGIN
    UPDATE t2 SET (t1i1, a) = (SELECT 'b', 't1i1'), (b, t1i1) = (SELECT 't1i1', 'a')
      WHERE b = new.b-1;
  END 00 r[6]='CREATE TRIGGER t2def AFTER INSERT ON t2 BEGIN
    UPDATE t2 SET (t1i1, a) = (SELECT 'b', 't1i
REG[6] =   t161[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s182[071B171108824F747269676765727432......Otriggert2]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s182[071B171108824F747269676765727432......Otriggert2]
REG[1] =  i:10
  10 SetCookie        0    1   10               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t2def' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t2def         00 r[3]='t2def'
REG[3] =   t5[t2def](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2cd](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[t2def](8)
REG[1] =   s4[t2cd](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[t2def](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[t2def](8)
REG[1] =   s5[t2def](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s5[t2def](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s161[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s5[t2def](8)
REG[5] =  i:0
REG[6] =   s161[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;PRAGMA recursive_triggers = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;UPDATE t2 SET t1i1=t1i1 WHERE t1i1=3;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   10 0             01 usesStmtJournal=0
  17 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  18 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
   5 Column           0    2    6               00 r[6]=t2.t1i1
REG[6] =  i:1
   6 Ne               7   14    6 (BINARY)      51 if r[6]!=r[7] goto 14
REG[7] =  i:3
REG[6] =  i:1
  14 Next             0    5    0               01 
   5 Column           0    2    6               00 r[6]=t2.t1i1
REG[6] =  i:4
   6 Ne               7   14    6 (BINARY)      51 if r[6]!=r[7] goto 14
REG[7] =  i:3
REG[6] =  i:4
  14 Next             0    5    0               01 
  15 Halt             0    0    0               00 
SQL: [;CREATE TABLE t5(t5a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t5            00 r[7]='t5'
REG[7] =   t2[t5](8)
  20 String8          0    8    0 t5            00 r[8]='t5'
REG[8] =   t2[t5](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE t5(t5a) 00 r[10]='CREATE TABLE t5(t5a)'
REG[10] =   t20[CREATE TABLE t5](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C65743574350A.....5tablet5t5.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C65743574350A.....5tablet5t5.]
REG[5] =  i:11
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='t5' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 0             00 usesStmtJournal=0
  16 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s1[f](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t5](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t5](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE t5](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t5](8)
REG[5] =  i:10
REG[6] =   s20[CREATE TABLE t5](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE t5b ( x1 );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   11 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:12
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:12
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:12
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t5b           00 r[7]='t5b'
REG[7] =   t3[t5b](8)
  20 String8          0    8    0 t5b           00 r[8]='t5b'
REG[8] =   t3[t5b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  22 String8          0   10    0 CREATE TABLE t5b ( x1 ) 00 r[10]='CREATE TABLE t5b ( x1 )'
REG[10] =   t23[CREATE TABLE t5](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06171313013B7461626C657435627435.....;tablet5bt5]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06171313013B7461626C657435627435.....;tablet5bt5]
REG[5] =  i:12
  25 SetCookie        0    1   12               00 
  26 ParseSchema      0    0    0 tbl_name='t5b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 t5b           00 r[2]='t5b'
REG[2] =   t3[t5b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s1[f](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t5](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t5b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s3[t5b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t5b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s23[CREATE TABLE t5](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t5b](8)
REG[5] =  i:11
REG[6] =   s23[CREATE TABLE t5](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t4 VALUES (1);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1   12 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 1             00 root=6 iDb=0; t4
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s2[0209..]
   5 Insert           0    3    1 t4            39 intkey=r[1] data=r[3]
REG[3] =  s2[0209..]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (VALUES(t1.x, t1.x)) IN ( SELECT x, x FROM t1 );]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0   12 0             01 usesStmtJournal=0
  34 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   32    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Integer         17    1    0               00 r[1]=17; return address
REG[1] =  i:17
   6 Once             0   17    0               00 
   7 OpenEphemeral    2    2    0 k(2,B,B)      00 nColumn=2; Result of SELECT 2
   8 Explain          8    0    0 LIST SUBQUERY 2 00 
   9 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  10 Explain         10    8    0 SCAN TABLE t1 00 
  11 Rewind           1   17    0               00 
  12 Column           1    0    2               00 r[2]=t1.x
REG[2] =  i:97
  13 Column           1    0    3               00 r[3]=t1.x
REG[3] =  i:97
  14 MakeRecord       2    2    4 AA            00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301016161...aa]
  15 IdxInsert        2    4    2 2             00 key=r[4]
REG[4] =  s5[0301016161...aa]
  16 Next             1   12    0               01 
  17 Return           1    0    0               00 
REG[1] =  i:17
  18 Explain         18    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  19 Null             0    5    6               00 r[5..6]=NULL; Init subquery result
REG[5] =  NULL
  20 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
  21 Explain         21   18    0 SCAN CONSTANT ROW 00 
  22 Column           0    0    5               00 r[5]=t1.x
REG[5] =  i:97
  23 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:97
  24 DecrJumpZero     7   25    0               00 if (--r[7])==0 goto 25
REG[7] =  i:1
  25 IsNull           5   31    0               00 if r[5]==NULL goto 31
REG[5] =  i:97
  26 IsNull           6   31    0               00 if r[6]==NULL goto 31
REG[6] =  i:97
  27 Affinity         5    2    0 AA            00 affinity(r[5..6])
  28 NotFound         2   31    5 2             00 key=r[5..6]; end IN expr
REG[5] =  i:97
REG[6] =  i:97
  29 Column           0    0    8               00 r[8]=t1.x
REG[8] =  i:97
  30 ResultRow        8    1    0               00 output=r[8]
REG[8] =  i:97
  31 Next             0    4    0               01 
  32 Halt             0    0    0               00 
SQL: [;CREATE TABLE x1i(x1i2 INTEGER PRIMARY KEY,t0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:12
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:13
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:13
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:13
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 x1i           00 r[7]='x1i'
REG[7] =   t3[x1i](8)
  20 String8          0    8    0 x1i           00 r[8]='x1i'
REG[8] =   t3[x1i](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:12
  22 String8          0   10    0 CREATE TABLE x1i(x1i2 INTEGER PRIMARY KEY,t0) 00 r[10]='CREATE TABLE x1i(x1i2 INTEGER PRIMARY KEY,t0)'
REG[10] =   t45[CREATE TABLE x1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s63[0617131301677461626C657831697831.....gtablex1ix1]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s63[0617131301677461626C657831697831.....gtablex1ix1]
REG[5] =  i:13
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='x1i' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 x1i           00 r[2]='x1i'
REG[2] =   t3[x1i](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s1[f](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s2[t5](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t5b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s3[t5b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[x1i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[x1i](8)
REG[1] =   s3[x1i](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[x1i](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s45[CREATE TABLE x1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[x1i](8)
REG[5] =  i:12
REG[6] =   s45[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2(b,t1i1) VALUES(1,11),(2,22),(3,33),(4,44);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1   13 0             01 usesStmtJournal=1
  35 Goto             0    1    0               00 
   1 InitCoroutine    5   16    2               00 
  16 OpenEphemeral    0    2    0               00 nColumn=2
  17 Yield            5   22    0               00 
REG[5] =  i:1
REG[5] =  i:17
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   4 Integer         11    7    0               00 r[7]=11
REG[7] =  i:11
   5 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:5
  18 MakeRecord       6    2   10               00 r[10]=mkrec(r[6..7])
REG[10] =  s4[0309010B....]
  19 NewRowid         0   11    0               00 r[11]=rowid
REG[11] =  i:1
  20 Insert           0   10   11               00 intkey=r[11] data=r[10]
REG[10] =  s4[0309010B....]
REG[11] =  i:1
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:5
REG[5] =  i:17
   6 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   7 Integer         22    7    0               00 r[7]=22
REG[7] =  i:22
   8 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:8
  18 MakeRecord       6    2   10               00 r[10]=mkrec(r[6..7])
REG[10] =  s5[0301010216.....]
  19 NewRowid         0   11    0               00 r[11]=rowid
REG[11] =  i:2
  20 Insert           0   10   11               00 intkey=r[11] data=r[10]
REG[10] =  s5[0301010216.....]
REG[11] =  i:2
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:8
REG[5] =  i:17
   9 Integer          3    6    0               00 r[6]=3
REG[6] =  i:3
  10 Integer         33    7    0               00 r[7]=33
REG[7] =  i:33
  11 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:11
  18 MakeRecord       6    2   10               00 r[10]=mkrec(r[6..7])
REG[10] =  s5[0301010321....!]
  19 NewRowid         0   11    0               00 r[11]=rowid
REG[11] =  i:3
  20 Insert           0   10   11               00 intkey=r[11] data=r[10]
REG[10] =  s5[0301010321....!]
REG[11] =  i:3
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:11
REG[5] =  i:17
  12 Integer          4    6    0               00 r[6]=4
REG[6] =  i:4
  13 Integer         44    7    0               00 r[7]=44
REG[7] =  i:44
  14 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:14
  18 MakeRecord       6    2   10               00 r[10]=mkrec(r[6..7])
REG[10] =  s5[030101042C....,]
  19 NewRowid         0   11    0               00 r[11]=rowid
REG[11] =  i:4
  20 Insert           0   10   11               00 intkey=r[11] data=r[10]
REG[10] =  s5[030101042C....,]
REG[11] =  i:4
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:14
REG[5] =  i:17
  15 EndCoroutine     5    0    0               00 
REG[5] =  i:17
  22 OpenWrite        1    3    0 3             00 root=3 iDb=0; t2
  23 Rewind           0   32    0               00 
  24 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:5
  25 SoftNull         2    0    0               00 r[2]=NULL
  26 Column           0    0    3               00 r[3]=
REG[3] =  i:1
  27 Column           0    1    4               00 r[4]=
REG[4] =  i:11
  28 MakeRecord       2    3   11 D             00 r[11]=mkrec(r[2..4])
REG[11] =  s5[040009010B.....]
  29 Insert           1   11    1 t2            39 intkey=r[1] data=r[11]
REG[11] =  s5[040009010B.....]
REG[1] =  i:5
  30 Program         -3   31   12 program       00 Call: t2def.default
   0 Init             0    1    0 -- TRIGGER t2def 00 Start at 1; Start: t2def.default (AFTER INSERT ON t2)
   1 Trace         2147483647    1    0 -- UPDATE t2 SET (t1i1, a) = (SELECT 'b', 't1i1'), (b, t1i1) = (SELECT 't1i1', 'a')       WHERE b = new.b-1 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   14    0               00 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:1
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:1
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:1
REG[8] =  i:0
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:0
REG[7] =  i:1
  13 Next             0    6    0               01 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:4
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:1
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:1
REG[8] =  i:0
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:0
REG[7] =  i:4
  13 Next             0    6    0               01 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:1
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:1
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:1
REG[8] =  i:0
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:0
REG[7] =  i:1
  13 Next             0    6    0               01 
  14 OpenWrite        0    3    0 3             00 root=3 iDb=0; t2
  15 RowSetRead       1   52    2               00 r[2]=rowset(1)
REG[1] =  NULL
REG[2] =  NULL
  52 ResetCount       0    0    0               00 
  53 Halt             0    0    0               00 End: t2def.default
  31 Next             0   24    0               00 
  24 NewRowid         1    1    0               00 r[1]=rowid
REG[1] =  i:6
  25 SoftNull         2    0    0               00 r[2]=NULL
  26 Column           0    0    3               00 r[3]=
REG[3] =  i:2
  27 Column           0    1    4               00 r[4]=
REG[4] =  i:22
  28 MakeRecord       2    3   11 D             00 r[11]=mkrec(r[2..4])
REG[11] =  s6[040001010216......]
  29 Insert           1   11    1 t2            39 intkey=r[1] data=r[11]
REG[11] =  s6[040001010216......]
REG[1] =  i:6
  30 Program         -3   31   12 program       00 Call: t2def.default
   0 Init             1    1    0 -- TRIGGER t2def 00 Start at 1; Start: t2def.default (AFTER INSERT ON t2)
   1 Trace         2147483647    1    0 -- UPDATE t2 SET (t1i1, a) = (SELECT 'b', 't1i1'), (b, t1i1) = (SELECT 't1i1', 'a')       WHERE b = new.b-1 00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    3    0 2             00 root=3 iDb=0; t2
   4 Explain          4    0    0 SCAN TABLE t2 00 
   5 Rewind           0   14    0               00 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:1
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:2
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:2
REG[8] =  i:1
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:1
REG[7] =  i:1
  11 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
  12 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
  13 Next             0    6    0               01 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:4
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:2
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:2
REG[8] =  i:1
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:1
REG[7] =  i:4
  13 Next             0    6    0               01 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:1
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:2
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:2
REG[8] =  i:1
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:1
REG[7] =  i:1
  11 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:5
  12 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  (rowset)
REG[2] =  i:5
  13 Next             0    6    0               01 
   6 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:2
   7 Param            6    9    0               00 r[9]=new.b
REG[9] =  i:2
   8 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
   9 Subtract        10    9    8               00 r[8]=r[9]-r[10]
REG[10] =  i:1
REG[9] =  i:2
REG[8] =  i:1
  10 Ne               8   13    7 (BINARY)      51 if r[7]!=r[8] goto 13
REG[8] =  i:1
REG[7] =  i:2
  13 Next             0    6    0               01 
  14 OpenWrite        0    3    0 3             00 root=3 iDb=0; t2
  15 RowSetRead       1   52    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  16 NotExists        0   15    2               00 intkey=r[2]
REG[2] =  i:1
  17 Integer         26   11    0               00 r[11]=26; return address
REG[11] =  i:26
  18 Once             0   26    0               00 
  19 Explain         19    0    0 SCALAR SUBQUERY 1 00 
  20 Null             0   12   13               00 r[12..13]=NULL; Init subquery result
REG[12] =  NULL
  21 Integer          1   14    0               00 r[14]=1; LIMIT counter
REG[14] =  i:1
  22 Explain         22   19    0 SCAN CONSTANT ROW 00 
  23 String8          0   12    0 b             00 r[12]='b'
REG[12] =   t1[b](8)
  24 String8          0   13    0 t1i1          00 r[13]='t1i1'
REG[13] =   t4[t1i1](8)
  25 DecrJumpZero    14   26    0               00 if (--r[14])==0 goto 26
REG[14] =  i:1
  26 Return          11    0    0               00 
REG[11] =  i:26
  27 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =   t4[t1i1](8)
  28 MustBeInt        3    0    0               00 
REG[3] =   t4[t1i1](8)
SQL: [;SELECT * FROM f WHERE (t2abc,t2abc)>(0,0) ORDER BY t2abc;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    9    0 1             00 root=9 iDb=0; f
   3 Explain          3    0    0 SCAN TABLE f  00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    7    3               00 3 columns in r[7]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t4 WHERE (t1b,t1b)>=(0,0) ORDER BY t1b;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    6    0 1             00 root=6 iDb=0; t4
   3 Explain          3    0    0 SCAN TABLE t4 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t4.t1b
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    4               00 r[4]=t4.t1b
REG[4] =  i:1
  12 MakeRecord       4    1    6               00 r[6]=mkrec(r[4])
REG[6] =  s2[0209..]
  13 SorterInsert     1    6    4 1             00 key=r[6]
REG[6] =  s2[0209..]
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    7    3               00 3 columns in r[7]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    7    2               00 r[7]=data
  19 Column           2    0    5               00 r[5]=t1b
REG[5] =  i:1
  20 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:1
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t4 WHERE (t1b,t1b)>(3,0) ORDER BY t1b;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    6    0 1             00 root=6 iDb=0; t4
   3 Explain          3    0    0 SCAN TABLE t4 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t4.t1b
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t4 WHERE (t1b,t1b)<=(3,0) ORDER BY t1b DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    6    0 1             00 root=6 iDb=0; t4
   3 Explain          3    0    0 SCAN TABLE t4 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t4.t1b
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t4.t1b
REG[5] =  i:1
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s2[0209..]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s2[0209..]
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=t1b
REG[6] =  i:1
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t5 WHERE (t5a,t5a)>(3,32) ORDER BY t5a;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0   10    0 1             00 root=10 iDb=0; t5
   3 Explain          3    0    0 SCAN TABLE t5 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (t1i1,b)>(3,33) ORDER BY t1i1;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    2    2               00 r[2]=t2.t1i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:0
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=t2.t1i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:4
  12 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:4
  13 Column           0    2    5               00 r[5]=t2.t1i1
REG[5] =  i:4
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s7[04010101040404.......]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s7[04010101040404.......]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    0    8               00 r[8]=t1i1
REG[8] =  i:4
  22 Column           2    2    7               00 r[7]=b
REG[7] =  i:4
  23 Column           2    1    6               00 r[6]=a
REG[6] =  i:4
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:4
REG[7] =  i:4
REG[8] =  i:4
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (t1i1,b)>=(3,33) ORDER BY t1i1;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    2    2               00 r[2]=t2.t1i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:0
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=t2.t1i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:4
  12 Column           0    1    7               00 r[7]=t2.b
REG[7] =  i:4
  13 Column           0    2    5               00 r[5]=t2.t1i1
REG[5] =  i:4
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s7[04010101040404.......]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s7[04010101040404.......]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    0    8               00 r[8]=t1i1
REG[8] =  i:4
  22 Column           2    2    7               00 r[7]=b
REG[7] =  i:4
  23 Column           2    1    6               00 r[6]=a
REG[6] =  i:4
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:4
REG[7] =  i:4
REG[8] =  i:4
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (0,0)<(b,a) ORDER BY b;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  29 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    2               00 r[2]=t2.b
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  12 Column           0    2    6               00 r[6]=t2.t1i1
REG[6] =  i:1
  13 Column           0    1    4               00 r[4]=t2.b
REG[4] =  i:1
  14 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04090909....]
  15 SorterInsert     1    8    4 3             00 key=r[8]
REG[8] =  s4[04090909....]
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2.b
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  12 Column           0    2    6               00 r[6]=t2.t1i1
REG[6] =  i:4
  13 Column           0    1    4               00 r[4]=t2.b
REG[4] =  i:4
  14 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s7[04010101040404.......]
  15 SorterInsert     1    8    4 3             00 key=r[8]
REG[8] =  s7[04010101040404.......]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2    9    5               00 5 columns in r[9]
  19 SorterSort       1   26    0               00 
  20 SorterData       1    9    2               00 r[9]=data
  21 Column           2    2    7               00 r[7]=t1i1
REG[7] =  i:1
  22 Column           2    0    6               00 r[6]=b
REG[6] =  i:1
  23 Column           2    1    5               00 r[5]=a
REG[5] =  i:1
  24 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:1
REG[6] =  i:1
REG[7] =  i:1
  25 SorterNext       1   20    0               00 
  20 SorterData       1    9    2               00 r[9]=data
  21 Column           2    2    7               00 r[7]=t1i1
REG[7] =  i:4
  22 Column           2    0    6               00 r[6]=b
REG[6] =  i:4
  23 Column           2    1    5               00 r[5]=a
REG[5] =  i:4
  24 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:4
REG[6] =  i:4
REG[7] =  i:4
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (0,0)<=(t1i1,a) ORDER BY t1i1;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  29 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    2    2               00 r[2]=t2.t1i1
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  12 Column           0    1    6               00 r[6]=t2.b
REG[6] =  i:1
  13 Column           0    2    4               00 r[4]=t2.t1i1
REG[4] =  i:1
  14 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s4[04090909....]
  15 SorterInsert     1    8    4 3             00 key=r[8]
REG[8] =  s4[04090909....]
  16 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=t2.t1i1
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:0
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  12 Column           0    1    6               00 r[6]=t2.b
REG[6] =  i:4
  13 Column           0    2    4               00 r[4]=t2.t1i1
REG[4] =  i:4
  14 MakeRecord       4    3    8               00 r[8]=mkrec(r[4..6])
REG[8] =  s7[04010101040404.......]
  15 SorterInsert     1    8    4 3             00 key=r[8]
REG[8] =  s7[04010101040404.......]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2    9    5               00 5 columns in r[9]
  19 SorterSort       1   26    0               00 
  20 SorterData       1    9    2               00 r[9]=data
  21 Column           2    0    7               00 r[7]=t1i1
REG[7] =  i:1
  22 Column           2    2    6               00 r[6]=b
REG[6] =  i:1
  23 Column           2    1    5               00 r[5]=a
REG[5] =  i:1
  24 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:1
REG[6] =  i:1
REG[7] =  i:1
  25 SorterNext       1   20    0               00 
  20 SorterData       1    9    2               00 r[9]=data
  21 Column           2    0    7               00 r[7]=t1i1
REG[7] =  i:4
  22 Column           2    2    6               00 r[6]=b
REG[6] =  i:4
  23 Column           2    1    5               00 r[5]=a
REG[5] =  i:4
  24 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:4
REG[6] =  i:4
REG[7] =  i:4
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (3,0)<=(x,x) ORDER BY x;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:97
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t1.x
REG[5] =  i:97
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020161..a]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020161..a]
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=x
REG[6] =  i:97
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:97
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (3,0)>=(x,x) ORDER BY x DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:97
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (3,32)<(x,x) ORDER BY x;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:97
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:97
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t1.x
REG[5] =  i:97
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020161..a]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020161..a]
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=x
REG[6] =  i:97
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:97
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (3,33)<(b,a) ORDER BY b;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    2               00 r[2]=t2.b
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:0
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2.b
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:4
  12 Column           0    2    7               00 r[7]=t2.t1i1
REG[7] =  i:4
  13 Column           0    1    5               00 r[5]=t2.b
REG[5] =  i:4
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s7[04010101040404.......]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s7[04010101040404.......]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=t1i1
REG[8] =  i:4
  22 Column           2    0    7               00 r[7]=b
REG[7] =  i:4
  23 Column           2    1    6               00 r[6]=a
REG[6] =  i:4
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:4
REG[7] =  i:4
REG[8] =  i:4
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (3,33)<=(b,t1i1) ORDER BY b;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   13 0             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,B)        00 
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   17    0               00 
   5 Column           0    1    2               00 r[2]=t2.b
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:0
  16 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=t2.b
REG[2] =  i:4
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   16    1               00 
REG[1] =  i:1
  11 Rowid            0    6    0               00 r[6]=rowid
REG[6] =  i:4
  12 Column           0    2    7               00 r[7]=t2.t1i1
REG[7] =  i:4
  13 Column           0    1    5               00 r[5]=t2.b
REG[5] =  i:4
  14 MakeRecord       5    3    9               00 r[9]=mkrec(r[5..7])
REG[9] =  s7[04010101040404.......]
  15 SorterInsert     1    9    5 3             00 key=r[9]
REG[9] =  s7[04010101040404.......]
  16 Next             0    5    0               01 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  20 SorterData       1   10    2               00 r[10]=data
  21 Column           2    2    8               00 r[8]=t1i1
REG[8] =  i:4
  22 Column           2    0    7               00 r[7]=b
REG[7] =  i:4
  23 Column           2    1    6               00 r[6]=a
REG[6] =  i:4
  24 ResultRow        6    3    0               00 output=r[6..8]
REG[6] =  i:4
REG[7] =  i:4
REG[8] =  i:4
  25 SorterNext       1   20    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t4 WHERE (3,34)<=(t1b,t1b) ORDER BY t1b;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    6    0 1             00 root=6 iDb=0; t4
   3 Explain          3    0    0 SCAN TABLE t4 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t4.t1b
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t5 WHERE (3,34)>(t5a,t5a) ORDER BY t5a DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0   10    0 1             00 root=10 iDb=0; t5
   3 Explain          3    0    0 SCAN TABLE t5 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM f WHERE (3,33)>=(t2abc,t2abc) ORDER BY t2abc DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    9    0 1             00 root=9 iDb=0; f
   3 Explain          3    0    0 SCAN TABLE f  00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t5 WHERE (3,32)>=(t5a,t5a) ORDER BY t5a DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   13 0             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0   10    0 1             00 root=10 iDb=0; t5
   3 Explain          3    0    0 SCAN TABLE t5 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;CREATE TABLE c0(i0,_x_,PRIMARY KEY(_x_,_x_));]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   13 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:13
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:14
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:14
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:15
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_c0_1 00 r[7]='sqlite_autoindex_c0_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 c0            00 r[8]='c0'
REG[8] =   t2[c0](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:14
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:15
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:14
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:14
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:14
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 c0            00 r[15]='c0'
REG[15] =   t2[c0](8)
  31 String8          0   16    0 c0            00 r[16]='c0'
REG[16] =   t2[c0](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:13
  33 String8          0   18    0 CREATE TABLE c0(i0,_x_,PRIMARY KEY(_x_,_x_)) 00 r[18]='CREATE TABLE c0(i0,_x_,PRIMARY KEY(_x_,_x_))'
REG[18] =   t44[CREATE TABLE c0](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s60[0617111101657461626C65633063300D.....etablec0c0.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s60[0617111101657461626C65633063300D.....etablec0c0.]
REG[13] =  i:14
  36 SetCookie        0    1   14               00 
  37 ParseSchema      0    0    0 tbl_name='c0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 0             00 usesStmtJournal=0
  16 String8          0    2    0 c0            00 r[2]='c0'
REG[2] =   t2[c0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[f](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s1[f](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[t5](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t5b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[t5b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[x1i](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s3[x1i](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s44[CREATE TABLE c0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c0](8)
REG[5] =  i:13
REG[6] =   s44[CREATE TABLE c0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:14
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f58c369e859 in __GI_abort () at abort.c:79
#2  0x00007f58c369e729 in __assert_fail_base (fmt=0x7f58c3834588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007f58c36affd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7ffdd2a465e0, p=0x86b440, pIn=0x7ffdd2a44c60, pDest=0x7ffdd2a451b8, regReturn=15, regPrev=9, pKeyInfo=0x879090, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7ffdd2a465e0, p=0x86b440, pDest=0x7ffdd2a451b8) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7ffdd2a465e0, p=0x86b440, pDest=0x7ffdd2a451b8) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7ffdd2a465e0, p=0x86b440, pDest=0x7ffdd2a451b8) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffdd2a465e0, pExpr=0x8627a0) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7ffdd2a465e0, p=0x8627a0, piFreeable=0x7ffdd2a4527c) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7ffdd2a465e0, pExpr=0x870d50, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7ffdd2a465e0, pExpr=0x870d50, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7ffdd2a465e0, pList=0x86d060, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7ffdd2a465e0, pSelect=0x878280, pInfo=0x7ffdd2a45620) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7ffdd2a465e0, p=0x878280, srcTab=-1, pSort=0x0, pDistinct=0x7ffdd2a458c0, pDest=0x7ffdd2a459d0, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7ffdd2a465e0, p=0x878280, pDest=0x7ffdd2a459d0) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffdd2a45c00, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffdd2a465e0) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffdd2a45c00, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffdd2a465e0, 
    zSql=0x8708e2 ";;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4)"..., pzErrMsg=0x7ffdd2a467c0) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x85a810, 
    zSql=0x85d7eb ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SE"..., nBytes=905, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffdd2a468f8, pzTail=0x7ffdd2a468e0) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x85a810, 
    zSql=0x85d7eb ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SE"..., nBytes=905, prepFlags=128, pOld=0x0, ppStmt=0x7ffdd2a468f8, pzTail=0x7ffdd2a468e0) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x85a810, 
    zSql=0x85d7eb ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SE"..., nBytes=905, ppStmt=0x7ffdd2a468f8, pzTail=0x7ffdd2a468e0) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7ffdd2a46aa8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 55974] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
