GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000223,sig:06,src:021953+017956,time:3741856,execs:736948,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE TABLE a(
      b int default -111, 
      t1i1 real default +4.32,
      t2i1 int default +222,
      c int default 7.89
    )
  
;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  20 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE a(
      b int default -111, 
      t1i1 real default +4.32,
      t2i1 int default +222,
      c int default 7.89
    ) 00 r[10]='CREATE TABLE a(
      b int default -111, 
      t1i1 real default +4.32,
      t2i1 int def
REG[10] =   t133[CREATE TABLE a(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s148[07170F0F0182177461626C6561610343.......tableaa.C]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s148[07170F0F0182177461626C6561610343.......tableaa.C]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s133[CREATE TABLE a(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[a](8)
REG[5] =  i:3
REG[6] =   s133[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT 12345
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer       12345    1    0               00 r[1]=12345
REG[1] =  i:12345
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:12345
   4 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 ORDER BY x
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
  10 Explain         10    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  11 OpenPseudo       2    5    4               00 4 columns in r[5]
  12 SorterSort       1   18    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE x=22 AND x=-4.44
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 Integer         22    2    0               00 r[2]=22
REG[2] =  i:22
  15 Real             0    3    0 -4.44         00 r[3]=-4.44
REG[3] =  r:-4.44
  16 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [CREATE VIEW temptable(x,y) AS SELECT x,x FROM t1 LIMIT 10;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t4[view](8)
  19 String8          0    7    0 temptable     00 r[7]='temptable'
REG[7] =   t9[temptable](8)
  20 String8          0    8    0 temptable     00 r[8]='temptable'
REG[8] =   t9[temptable](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIEW temptable(x,y) AS SELECT x,x FROM t1 LIMIT 10 00 r[10]='CREATE VIEW temptable(x,y) AS SELECT x,x FROM t1 LIMIT 10'
REG[10] =   t57[CREATE VIEW tem](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s85[06151F1F087F7669657774656D707461......viewtempta]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s85[06151F1F087F7669657774656D707461......viewtempta]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='temptable' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 temptable     00 r[2]='temptable'
REG[2] =   t9[temptable](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s9[temptable](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s4[view](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[temptable](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s57[CREATE VIEW tem](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[temptable](8)
REG[5] =  i:0
REG[6] =   s57[CREATE VIEW tem](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM temptable WHERE 1
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    3 0             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 InitCoroutine    1   13    2               00 temptable
  13 Explain         13    0    0 SCAN SUBQUERY 1 00 
  14 InitCoroutine    1    0    2               00 
  15 Yield            1   20    0               00 next row of temptable
REG[1] =  i:1
REG[1] =  i:15
   2 Explain          2    0    0 CO-ROUTINE 1  00 
   3 Integer         10    2    0               00 r[2]=10; LIMIT counter
REG[2] =  i:10
   4 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   5 Explain          5    2    0 SCAN TABLE t1 00 
   6 Rewind           1   12    0               00 
  12 EndCoroutine     1    0    0               00 
REG[1] =  i:15
  20 Halt             0    0    0               00 
SQL: [SELECT temptable.x, [temptable].[y] FROM temptable WHERE 1
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    3 0             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 InitCoroutine    1   13    2               00 temptable
  13 Explain         13    0    0 SCAN SUBQUERY 1 00 
  14 InitCoroutine    1    0    2               00 
  15 Yield            1   20    0               00 next row of temptable
REG[1] =  i:1
REG[1] =  i:15
   2 Explain          2    0    0 CO-ROUTINE 1  00 
   3 Integer         10    2    0               00 r[2]=10; LIMIT counter
REG[2] =  i:10
   4 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   5 Explain          5    2    0 SCAN TABLE t1 00 
   6 Rewind           1   12    0               00 
  12 EndCoroutine     1    0    0               00 
REG[1] =  i:15
  20 Halt             0    0    0               00 
SQL: [DROP TABLE a;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 0             01 usesStmtJournal=1
  39 String8          0    3    0 a             00 r[3]='a'
REG[3] =   t1[a](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[a](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s1[a](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:2
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[temptable](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t1[a](8)
REG[2] =   s9[temptable](8)
  12 Next             0    5    0               01 
  13 Destroy          3    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 a             00 
  36 SetCookie        0    1    4               00 
  37 Halt             0    0    0               00 
SQL: [CREATE TABLE key(value,donotread);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  20 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE key(value,donotread) 00 r[10]='CREATE TABLE key(value,donotread)'
REG[10] =   t33[CREATE TABLE ke](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s51[06171313014F7461626C656B65796B65.....Otablekeyke]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s51[06171313014F7461626C656B65796B65.....Otablekeyke]
REG[5] =  i:4
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 0             00 usesStmtJournal=0
  16 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[key](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s33[CREATE TABLE ke](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[key](8)
REG[5] =  i:3
REG[6] =   s33[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT t1.x AS n, temptable.x FROM t1 JOIN temptable
;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 Integer         16    1    0               00 r[1]=16
REG[1] =  i:16
   2 Once             0   16    0               00 materialize "temptable"
   3 Explain          3    0    0 MATERIALIZE 1 00 
   4 OpenEphemeral    1    2    0               00 nColumn=2
   5 Integer         10    2    0               00 r[2]=10; LIMIT counter
REG[2] =  i:10
   6 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
   7 Explain          7    3    0 SCAN TABLE t1 00 
   8 Rewind           2   16    0               00 
  16 Return           1    0    0               00 end temptable
REG[1] =  i:16
  17 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
  18 Explain         18    0    0 SCAN SUBQUERY 1 00 
  19 Rewind           1   27    0               00 
  27 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS key;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    5 0             01 usesStmtJournal=1
  39 String8          0    3    0 key           00 r[3]='key'
REG[3] =   t3[key](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[temptable](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s9[temptable](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[key](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s3[key](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:4
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          3    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 key           00 
  36 SetCookie        0    1    6               00 
  37 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(x) VALUES(123);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    6 0             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer        123    2    0               00 r[2]=123
REG[2] =  i:123
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[0301007B...{]
   5 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s4[0301007B...{]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;SELECT name FROM pragma_table_info('t1');]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 VOpen            0    0    0 vtab:1BE2580  00 
   2 Explain          2    0    0 SCAN TABLE pragma_table_info VIRTUAL TABLE INDEX 0: 00 
   3 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 VFilter          0   10    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA table_info='t1']
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   5 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:0
REG[2] =   t1[x](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_info.name
REG[4] =   s1[x](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[x](8)
   9 VNext            0    7    0               00 
   8 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   9 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  10 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
  11 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  12 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  13 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  14 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:1
REG[2] =   t2[t2](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_info.name
REG[4] =   s2[t2](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[t2](8)
   9 VNext            0    7    0               00 
  15 Halt             0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;PRAGMA table_info='t1'
;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   5 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:0
REG[2] =   t1[x](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
   8 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   9 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  10 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
  11 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  12 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  13 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  14 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:1
REG[2] =   t2[t2](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
  15 Halt             0    0    0               00 
SQL: [;-- value couple assert()s that were
  CREATE TABLE key(value);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  20 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE key(value) 00 r[10]='CREATE TABLE key(value)'
REG[10] =   t23[CREATE TABLE ke](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06171313013B7461626C656B65796B65.....;tablekeyke]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06171313013B7461626C656B65796B65.....;tablekeyke]
REG[5] =  i:4
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[key](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s23[CREATE TABLE ke](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[key](8)
REG[5] =  i:3
REG[6] =   s23[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;-- added by ticket 3b44500725
  INSERT INTO key VALUES(17),(2),(99),(-3),(7);]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    7 0             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 InitCoroutine    3   14    2               00 
  14 OpenWrite        0    3    0 1             00 root=3 iDb=0; key
  15 Yield            3   20    0               00 
REG[3] =  i:1
REG[3] =  i:15
   2 Explain          2    0    0 SCAN 5 CONSTANT ROWS 00 
   3 Integer         17    2    0               00 r[2]=17
REG[2] =  i:17
   4 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:4
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020111...]
  18 Insert           0    4    1 key           39 intkey=r[1] data=r[4]
REG[4] =  s3[020111...]
REG[1] =  i:1
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:4
REG[3] =  i:15
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:6
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020102...]
  18 Insert           0    4    1 key           39 intkey=r[1] data=r[4]
REG[4] =  s3[020102...]
REG[1] =  i:2
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:6
REG[3] =  i:15
   7 Integer         99    2    0               00 r[2]=99
REG[2] =  i:99
   8 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:8
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020163..c]
  18 Insert           0    4    1 key           39 intkey=r[1] data=r[4]
REG[4] =  s3[020163..c]
REG[1] =  i:3
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:8
REG[3] =  i:15
   9 Integer         -3    2    0               00 r[2]=-3
REG[2] =  i:-3
  10 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:10
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[0201FD...]
  18 Insert           0    4    1 key           39 intkey=r[1] data=r[4]
REG[4] =  s3[0201FD...]
REG[1] =  i:4
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:10
REG[3] =  i:15
  11 Integer          7    2    0               00 r[2]=7
REG[2] =  i:7
  12 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:12
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[020107...]
  18 Insert           0    4    1 key           39 intkey=r[1] data=r[4]
REG[4] =  s3[020107...]
REG[1] =  i:5
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:12
REG[3] =  i:15
  13 EndCoroutine     3    0    0               00 
REG[3] =  i:15
  20 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc838496859 in __GI_abort () at abort.c:79
#2  0x00007fc838496729 in __assert_fail_base (fmt=0x7fc83862c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=<optimized out>) at assert.c:92
#3  0x00007fc8384a7fd6 in __GI___assert_fail (assertion=0x211bd9 "pColExpr->op!=TK_AGG_COLUMN", file=0x22873d "sqlite3.c", line=126590, 
    function=0x221122 "int sqlite3ColumnsFromExprList(Parse *, ExprList *, i16 *, Column **)") at assert.c:101
#4  0x000000000032d160 in sqlite3ColumnsFromExprList (pParse=0x7fff3ccdf610, pEList=0x1bd6d20, pnCol=0x1bd76c6, paCol=0x1bd7688) at sqlite3.c:126590
#5  0x000000000033cf65 in sqlite3ExpandSubquery (pParse=0x7fff3ccdf610, pFrom=0x1bd2b88) at sqlite3.c:129416
#6  0x00000000003a17f2 in sqlite3WindowRewrite (pParse=0x7fff3ccdf610, p=0x1bd0600) at sqlite3.c:146385
#7  0x00000000002fc6de in sqlite3Select (pParse=0x7fff3ccdf610, p=0x1bd0600, pDest=0x7fff3ccddf00) at sqlite3.c:130281
#8  0x00000000003a45ed in multiSelect (pParse=0x7fff3ccdf610, p=0x1bd0600, pDest=0x7fff3ccde308) at sqlite3.c:127314
#9  0x00000000002fccf5 in sqlite3Select (pParse=0x7fff3ccdf610, p=0x1bd0600, pDest=0x7fff3ccde308) at sqlite3.c:130384
#10 0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7fff3ccdf610, pExpr=0x1bd0150) at sqlite3.c:99820
#11 0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7fff3ccdf610, pExpr=0x1bd0150, target=5) at sqlite3.c:100770
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7fff3ccdf610, pList=0x1bde250, target=5, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7fff3ccdf610, pSelect=0x1bdd440, pInfo=0x7fff3ccde650) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7fff3ccdf610, p=0x1bdd440, srcTab=-1, pSort=0x0, pDistinct=0x0, pDest=0x7fff3ccdea00, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fffb0 in sqlite3Select (pParse=0x7fff3ccdf610, p=0x1bdd440, pDest=0x7fff3ccdea00) at sqlite3.c:131196
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff3ccdec30, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff3ccdf610) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff3ccdec30, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff3ccdf610, zSql=0x1bcfcda ";\n;DROP TABLE IF EXISTS key;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", pzErrMsg=0x7fff3ccdf7f0) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0x1bbf2b0, zSql=0x1bc026d ";SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;\n;DROP TABLE IF EXISTS key;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", 
    nBytes=138, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff3ccdf928, pzTail=0x7fff3ccdf910) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x1bbf2b0, zSql=0x1bc026d ";SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;\n;DROP TABLE IF EXISTS key;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", 
    nBytes=138, prepFlags=128, pOld=0x0, ppStmt=0x7fff3ccdf928, pzTail=0x7fff3ccdf910) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0x1bbf2b0, zSql=0x1bc026d ";SELECT (SELECT avg(x) UNION SELECT min(x) OVER()) FROM t1;\n;DROP TABLE IF EXISTS key;;DROP TABLE IF EXISTS t1;;\n;DROP TABLE IF EXISTS t3;", 
    nBytes=138, ppStmt=0x7fff3ccdf928, pzTail=0x7fff3ccdf910) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7fff3ccdfad8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53202] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
