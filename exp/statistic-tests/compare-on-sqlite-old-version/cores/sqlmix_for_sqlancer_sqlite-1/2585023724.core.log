GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000311,sig:06,src:023613+022581,time:7954524,execs:1812521,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(x, t2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x, t2) 00 r[10]='CREATE TABLE t1(x, t2)'
REG[10] =   t22[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C657431743102.....9tablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C657431743102.....9tablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s22[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE a(b TEXT, CHECK(b NOT BETWEEN 0 AND +b));]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a             00 r[7]='a'
REG[7] =   t1[a](8)
  20 String8          0    8    0 a             00 r[8]='a'
REG[8] =   t1[a](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE a(b TEXT, CHECK(b NOT BETWEEN 0 AND +b)) 00 r[10]='CREATE TABLE a(b TEXT, CHECK(b NOT BETWEEN 0 AND +b))'
REG[10] =   t53[CREATE TABLE a(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s67[06170F0F01777461626C656161034352.....wtableaa.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s67[06170F0F01777461626C656161034352.....wtableaa.CR]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='a' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[a](8)
REG[1] =   s1[a](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[a](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s53[CREATE TABLE a(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[a](8)
REG[5] =  i:3
REG[6] =   s53[CREATE TABLE a(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(oid,x,x) VALUES(16777216,15,'0000000001000000');]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 0             01 usesStmtJournal=0
  14 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  15 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 Integer       16777216    1    0               00 r[1]=16777216
REG[1] =  i:16777216
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:16777216
   5 MustBeInt        1    0    0               00 
REG[1] =  i:16777216
   6 Integer         15    2    0               00 r[2]=15
REG[2] =  i:15
   7 Noop             0    0    0               00 uniqueness check for ROWID
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:16777216
  10 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[0301000F....]
  11 Insert           0    4    1 t1            31 intkey=r[1] data=r[4]
REG[4] =  s4[0301000F....]
REG[1] =  i:16777216
  12 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE t1i1(t2i1 numeric, c text);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1i1          00 r[7]='t1i1'
REG[7] =   t4[t1i1](8)
  20 String8          0    8    0 t1i1          00 r[8]='t1i1'
REG[8] =   t4[t1i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE t1i1(t2i1 numeric, c text) 00 r[10]='CREATE TABLE t1i1(t2i1 numeric, c text)'
REG[10] =   t39[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s59[06171515015B7461626C657431693174.....[tablet1i1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s59[06171515015B7461626C657431693174.....[tablet1i1t]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='t1i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[a](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[a](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t1i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s39[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t1i1](8)
REG[5] =  i:4
REG[6] =   s39[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT * FROM (
        SELECT x COLLATE nocase IN (SELECT x FROM t1) FROM t1
    );]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    3 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           1   34    0               00 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             0   17    0               00 
   8 OpenEphemeral    3    1    0 k(1,NOCASE)   00 nColumn=1; Result of SELECT 1
   9 Explain          9    0    0 LIST SUBQUERY 1 00 
  10 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  11 Explain         11    9    0 SCAN TABLE t1 00 
  12 Rewind           2   17    0               00 
  13 Column           2    0    4               00 r[4]=t1.x
REG[4] =  i:15
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[02010F...]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[02010F...]
  16 Next             2   13    0               01 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  i:15
  21 Column           1    0    5               00 r[5]=t1.x
REG[5] =  i:15
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:15
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:15
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
  34 Halt             0    0    0               00 
SQL: [;
;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;
;SELECT b, min(b) FROM a;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; a
   3 Explain          3    0    0 SEARCH TABLE a 00 
   4 Rewind           0   11    0               00 
  11 AggFinal         2    1    0 min(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  NULL
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  NULL
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [;ROLLBACK TO one;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        2    0    0 one           00 
SQL: [;WITH RECURSIVE a(t2) AS (VALUES(1) UNION SELECT t2+1 FROM a WHERE t2<10)
          INSERT INTO t1(t2,t2) SELECT t2*10+2, printf('%04d%.800c',t2,'*') FROM a;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    1    3 0             01 usesStmtJournal=0
  54 Integer         10   11    0               00 r[11]=10
REG[11] =  i:10
  55 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  56 Integer          2   17    0               00 r[17]=2
REG[17] =  i:2
  57 String8          0   18    0 %04d%.800c    00 r[18]='%04d%.800c'
REG[18] =   t10[%04d%.800c](8)
  58 String8          0   20    0 *             00 r[20]='*'
REG[20] =   t1[*](8)
  59 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  60 Goto             0    1    0               00 
   1 InitCoroutine    4   45    2               00 
  45 OpenWrite        4    2    0 2             00 root=2 iDb=0; t1
  46 Yield            4   52    0               00 
REG[4] =  i:1
REG[4] =  i:46
   2 InitCoroutine    5   34    3               00 a
  34 Explain         34    0    0 SCAN SUBQUERY 2 00 
  35 InitCoroutine    5    0    3               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:2
REG[5] =  i:36
   3 Explain          3    0    0 CO-ROUTINE 2  00 
   4 OpenPseudo       1    6    1               00 1 columns in r[6]
   5 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   6 OpenEphemeral    3    1    0 k(1,B)        00 nColumn=1
   7 Explain          7    3    0 SETUP         00 
   8 Explain          8    7    0 SCAN CONSTANT ROW 00 
   9 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  10 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s2[0209..]
  11 Found            3   15    8 0             00 key=r[8]
REG[8] =  s2[0209..]
  12 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s2[0209..]
  13 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  14 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s2[0209..]
REG[9] =  i:1
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s2[0209..]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:1
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:1
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:1
REG[15] =  i:10
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:10
REG[13] =  i:12
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:1
  41 Function0        5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:1
REG[20] =   t1[*](8)
REG[14] =   s804[0001***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777217
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:12
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[0300010C....]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[0300010C....]
REG[1] =  i:16777217
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:1
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:1
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:1
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:1
REG[7] =  i:2
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020102...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020102...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020102...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020102...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020102...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:2
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:2
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:2
REG[15] =  i:20
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:20
REG[13] =  i:22
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:2
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:2
REG[20] =   t1[*](8)
REG[14] =   s804[0002***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777218
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:22
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[03000116....]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[03000116....]
REG[1] =  i:16777218
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:2
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:2
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:2
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:2
REG[7] =  i:3
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020103...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020103...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020103...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020103...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020103...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:3
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:3
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:3
REG[15] =  i:30
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:30
REG[13] =  i:32
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:3
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:3
REG[20] =   t1[*](8)
REG[14] =   s804[0003***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777219
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:32
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[03000120... ]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[03000120... ]
REG[1] =  i:16777219
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:3
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:3
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:3
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:3
REG[7] =  i:4
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020104...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020104...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020104...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020104...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020104...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:4
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:4
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:4
REG[15] =  i:40
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:40
REG[13] =  i:42
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:4
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:4
REG[20] =   t1[*](8)
REG[14] =   s804[0004***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777220
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:42
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[0300012A...*]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[0300012A...*]
REG[1] =  i:16777220
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:4
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:4
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:4
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:4
REG[7] =  i:5
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020105...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020105...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020105...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020105...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020105...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:5
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:5
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:5
REG[15] =  i:50
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:50
REG[13] =  i:52
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:5
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:5
REG[20] =   t1[*](8)
REG[14] =   s804[0005***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777221
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:52
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[03000134...4]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[03000134...4]
REG[1] =  i:16777221
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:5
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:5
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:5
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:5
REG[7] =  i:6
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020106...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020106...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020106...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020106...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020106...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:6
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:6
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:6
REG[15] =  i:60
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:60
REG[13] =  i:62
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:6
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:6
REG[20] =   t1[*](8)
REG[14] =   s804[0006***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777222
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:62
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[0300013E...>]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[0300013E...>]
REG[1] =  i:16777222
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:6
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:6
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:6
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:6
REG[7] =  i:7
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020107...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020107...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020107...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020107...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020107...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:7
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:7
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:7
REG[15] =  i:70
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:70
REG[13] =  i:72
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:7
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:7
REG[20] =   t1[*](8)
REG[14] =   s804[0007***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777223
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:72
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[03000148...H]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[03000148...H]
REG[1] =  i:16777223
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:7
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:7
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:7
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:7
REG[7] =  i:8
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020108...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020108...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020108...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020108...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020108...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:8
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:8
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:8
REG[15] =  i:80
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:80
REG[13] =  i:82
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:8
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:8
REG[20] =   t1[*](8)
REG[14] =   s804[0008***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777224
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:82
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[03000152...R]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[03000152...R]
REG[1] =  i:16777224
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:8
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:8
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:8
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:8
REG[7] =  i:9
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020109...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[020109...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[020109...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[020109...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020109...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:9
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:9
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:9
REG[15] =  i:90
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:90
REG[13] =  i:92
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:9
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:9
REG[20] =   t1[*](8)
REG[14] =   s804[0009***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777225
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:92
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[0300015C...\]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[0300015C...\]
REG[1] =  i:16777225
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:9
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:9
  25 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:9
  26 Add             12    8    7               00 r[7]=r[12]+r[8]
REG[12] =  i:1
REG[8] =  i:9
REG[7] =  i:10
  27 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010A...]
  28 Found            3   32    8 0             00 key=r[8]
REG[8] =  s3[02010A...]
  29 IdxInsert        3    8    7 1             00 key=r[8]
REG[8] =  s3[02010A...]
  30 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
  31 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s3[02010A...]
REG[9] =  i:1
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  16 NullRow          1    0    0               00 
  17 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010A...]
  18 Delete           2    0    0               00 
  19 Column           1    0   10               00 r[10]=
REG[10] =  i:10
  20 Yield            5    0    0               00 
REG[5] =  i:36
REG[5] =  i:20
  37 Copy            10   16    0               00 r[16]=r[10]; a.t2
REG[16] =  i:10
  38 Multiply        11   16   15               00 r[15]=r[11]*r[16]
REG[11] =  i:10
REG[16] =  i:10
REG[15] =  i:100
  39 Add             17   15   13               00 r[13]=r[17]+r[15]
REG[17] =  i:2
REG[15] =  i:100
REG[13] =  i:102
  40 Copy            10   19    0               00 r[19]=r[10]; a.t2
REG[19] =  i:10
  41 Function         5   18   14 printf(-1)    03 r[14]=func(r[18..20])
REG[18] =   t10[%04d%.800c](8)
REG[19] =  i:10
REG[20] =   t1[*](8)
REG[14] =   s804[0010***********](8)
  42 Yield            4    0    0               00 
REG[4] =  i:46
REG[4] =  i:42
  47 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:16777226
  48 SCopy           13    3    0               00 r[3]=r[13]
REG[3] =  i:102
  49 MakeRecord       2    2   21               00 r[21]=mkrec(r[2..3])
REG[21] =  s4[03000166...f]
  50 Insert           4   21    1 t1            39 intkey=r[1] data=r[21]
REG[21] =  s4[03000166...f]
REG[1] =  i:16777226
  51 Goto             0   46    0               00 
  46 Yield            4   52    0               00 
REG[4] =  i:42
REG[4] =  i:46
  43 Goto             0   36    0               00 
  36 Yield            5   44    0               00 next row of a
REG[5] =  i:20
REG[5] =  i:36
  21 Explain         21    3    0 RECURSIVE STEP 00 
  22 Explain         22   21    0 SCAN TABLE a  00 
  23 Column           1    0    8               00 r[8]=a.t2
REG[8] =  i:10
  24 Ge              11   32    8 (BINARY)      51 if r[8]>=r[11] goto 32
REG[11] =  i:10
REG[8] =  i:10
  32 Goto             0   15    0               00 
  15 Rewind           2   33    0               00 
  33 EndCoroutine     5    0    0               00 
REG[5] =  i:36
  44 EndCoroutine     4    0    0               00 
REG[4] =  i:46
  52 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_17
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_17         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_41
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_41         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_68
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_68         00 
   2 Halt             0    0    0               00 
SQL: [;SELECT b, max(b) FROM a;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; a
   3 Explain          3    0    0 SEARCH TABLE a 00 
   4 Rewind           0   11    0               00 
  11 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  NULL
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  NULL
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_73
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_73         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_87
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_87         00 
   2 Halt             0    0    0               00 
SQL: [;SELECT * FROM (
        SELECT t2 COLLATE nocase IN (SELECT t2 FROM t1) FROM t1
    );]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    0    3 0             01 usesStmtJournal=0
  36 Goto             0    1    0               00 
   1 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           1   34    0               00 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             0   17    0               00 
   8 OpenEphemeral    3    1    0 k(1,NOCASE)   00 nColumn=1; Result of SELECT 1
   9 Explain          9    0    0 LIST SUBQUERY 1 00 
  10 OpenRead         2    2    0 2             00 root=2 iDb=0; t1
  11 Explain         11    9    0 SCAN TABLE t1 00 
  12 Rewind           2   17    0               00 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  NULL
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s2[0200..]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s2[0200..]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:12
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[02010C...]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[02010C...]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:22
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020116...]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[020116...]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:32
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020120.. ]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[020120.. ]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:42
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[02012A..*]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[02012A..*]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:52
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020134..4]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[020134..4]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:62
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[02013E..>]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[02013E..>]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:72
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020148..H]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[020148..H]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:82
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020152..R]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[020152..R]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:92
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[02015C..\]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[02015C..\]
  16 Next             2   13    0               01 
  13 Column           2    1    4               00 r[4]=t1.t2
REG[4] =  i:102
  14 MakeRecord       4    1    5 A             00 r[5]=mkrec(r[4])
REG[5] =  s3[020166..f]
  15 IdxInsert        3    5    4 1             00 key=r[5]
REG[5] =  s3[020166..f]
  16 Next             2   13    0               01 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  NULL
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  NULL
  26 Rewind           3   31    0               00 
  27 Column           3    0    6               00 r[6]=
REG[6] =  NULL
  28 Ne               5   31    6 (NOCASE)      00 if r[6]!=r[5] goto 31
REG[5] =  NULL
REG[6] =  NULL
  29 Goto             0   32    0               00 end IN expr
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:12
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:12
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:12
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:22
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:22
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:22
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:32
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:32
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:32
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:42
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:42
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:42
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:52
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:52
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:52
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:62
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:62
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:62
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:72
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:72
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:72
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:82
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:82
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:82
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:92
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:92
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:92
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Noop             0    0    0               00 begin IN expr
   6 Integer         17    3    0               00 r[3]=17; return address
REG[3] =  i:17
   7 Once             1   17    0               00 
  17 Return           3    0    0               00 
REG[3] =  i:17
  18 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  19 Rewind           3   21    0               00 
  20 Column           3    0    2               80 r[2]=first_entry_in(3)
REG[2] =  NULL
  21 Column           1    1    5               00 r[5]=t1.t2
REG[5] =  i:102
  22 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:102
  23 Affinity         5    1    0 A             00 affinity(r[5])
  24 Found            3   30    5 1             00 key=r[5]
REG[5] =  i:102
  30 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  31 AddImm           1    0    0               00 r[1]=r[1]+0
REG[1] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Next             1    4    0               01 
  34 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_71
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_71         00 
   2 Halt             0    0    0               00 
SQL: [SAVEPOINT sp_31
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Savepoint        0    0    0 sp_31         00 
   2 Halt             0    0    0               00 
SQL: [;INSERT INTO a(oid,b,b) VALUES(2147483648,36,'0000000080000000');]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    3 0             01 usesStmtJournal=0
  18 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  19 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 1             00 root=3 iDb=0; a
   2 Int64            0    1    0 2147483648    00 r[1]=2147483648
REG[1] =  i:2147483648
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  i:2147483648
   5 MustBeInt        1    0    0               00 
REG[1] =  i:2147483648
   6 Integer         36    2    0               00 r[2]=36
REG[2] =  i:36
   7 Abortable        0    0    0               00 
   8 Lt               4   11    2 (BINARY)      52 if r[2]<r[4] goto 11
REG[4] =  i:0
REG[2] =  i:36
   9 Gt               2   11    2 (BINARY)      52 if r[2]>r[2] goto 11

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fceb51b6859 in __GI_abort () at abort.c:79
#2  0x00007fceb51b6729 in __assert_fail_base (fmt=0x7fceb534c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=<optimized out>) at assert.c:92
#3  0x00007fceb51c7fd6 in __GI___assert_fail (assertion=0x21d368 "pIn1!=pIn3", file=0x22873d "sqlite3.c", line=85580, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c5c6a in sqlite3VdbeExec (p=0x165eb90) at sqlite3.c:85580
#5  0x0000000000411104 in sqlite3Step (p=0x165eb90) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0x165eb90) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7ffe5741e1d8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53885] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
