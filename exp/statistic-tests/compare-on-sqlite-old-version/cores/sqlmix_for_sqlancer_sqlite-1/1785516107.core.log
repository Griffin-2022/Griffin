GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000376,sig:06,src:023198+012652,time:10060820,execs:2503855,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT tbl_name AS t FROM sqlite_master WHERE type = 'table'
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 1             01 usesStmtJournal=0
  11 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[t2](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               5    1    4               E9 r[1] = (r[4]==r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS NOT (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               E9 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               5    1    4               E9 r[1] = (r[4]!=r[5])
REG[5] =  i:3
REG[4] =  NULL
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) != (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               61 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               3    1    3               69 r[1] = (r[3]!=r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               4    1    4               69 r[1] = (r[4]!=r[4])
REG[4] =  NULL
REG[4] =  NULL
REG[1] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, NULL) IS (1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               3    1    3               E9 r[1] = (r[3]==r[3])
REG[3] =  i:2
REG[3] =  i:2
   5 IfNot            1    7    0               00 
REG[1] =  i:1
   6 Eq               4    1    4               E9 r[1] = (r[4]==r[4])
REG[4] =  NULL
REG[4] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, 2, NULL) != (SELECT 1, 2, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          2    9    0               00 r[9]=2
REG[9] =  i:2
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:2
REG[4] =  i:2
  27 If               1   29    0               00 
REG[1] =  i:0
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (NULL, NULL, NULL) IS NOT (NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   5 If               1    7    0               00 
REG[1] =  i:0
   6 Ne               2    1    2               E9 r[1] = (r[2]!=r[2])
REG[2] =  NULL
REG[2] =  NULL
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT NULL, NULL, NULL) == (SELECT NULL, NULL, NULL)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  20 Null             0    9    0               00 r[9]=NULL
REG[9] =  NULL
  21 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  NULL
REG[3] =  NULL
REG[1] =  NULL
  25 IfNot            1   29    0               00 
REG[1] =  NULL
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  NULL
REG[5] =  NULL
REG[1] =  NULL
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 1)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) == (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Eq               8    1    3               61 r[1] = (r[3]==r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:1
  25 IfNot            1   29    0               00 
REG[1] =  i:1
  26 Eq               9    1    4               69 r[1] = (r[4]==r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 IfNot            1   29    0               00 
REG[1] =  NULL
  28 Eq              10    1    5               69 r[1] = (r[5]==r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (SELECT 1, NULL, 1) != (SELECT 1, 1, 1)
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   3 Once             0   12    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    5               00 r[3..5]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  11 DecrJumpZero     6   12    0               00 if (--r[6])==0 goto 12
REG[6] =  i:1
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 Integer         23    7    0               00 r[7]=23; return address
REG[7] =  i:23
  14 Once             0   23    0               00 
  15 Explain         15    0    0 SCALAR SUBQUERY 2 00 
  16 Null             0    8   10               00 r[8..10]=NULL; Init subquery result
REG[8] =  NULL
  17 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  18 Explain         18   15    0 SCAN CONSTANT ROW 00 
  19 Integer          1    8    0               00 r[8]=1
REG[8] =  i:1
  20 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  21 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  22 DecrJumpZero    11   23    0               00 if (--r[11])==0 goto 23
REG[11] =  i:1
  23 Return           7    0    0               00 
REG[7] =  i:23
  24 Ne               8    1    3               61 r[1] = (r[3]!=r[8])
REG[8] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  25 If               1   29    0               00 
REG[1] =  i:0
  26 Ne               9    1    4               69 r[1] = (r[4]!=r[9])
REG[9] =  i:1
REG[4] =  NULL
REG[1] =  NULL
  27 If               1   29    0               00 
REG[1] =  NULL
  28 Ne              10    1    5               69 r[1] = (r[5]!=r[10])
REG[10] =  i:1
REG[5] =  i:1
  29 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  30 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               2    1    2               E1 r[1] = (r[2]==r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:1
   3 IfNot            1    7    0               00 
REG[1] =  i:1
   4 Eq               2    1    3               E9 r[1] = (r[3]==r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:0
   5 IfNot            1    7    0               00 
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 1) IS NOT (1, 1, 2)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               2    1    2               E1 r[1] = (r[2]!=r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 If               1    7    0               00 
REG[1] =  i:0
   4 Ne               2    1    3               E9 r[1] = (r[3]!=r[2])
REG[2] =  i:1
REG[3] =  NULL
REG[1] =  i:1
   5 If               1    7    0               00 
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    2               61 r[1] = (r[2]>r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, 1, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:1
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Gt               4    1    4               61 r[1] = (r[4]>r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:0
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 2, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:0
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:1
   6 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  i:2
REG[3] =  i:2
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   6 Le               4    1    4               61 r[1] = (r[4]<=r[4])
REG[4] =  i:3
REG[4] =  i:3
REG[1] =  i:1
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, 2, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:2
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  18 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  19 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  20 Le               4    1    3               61 r[1] = (r[3]<=r[4])
REG[4] =  i:3
REG[3] =  i:3
REG[1] =  i:1
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) > (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:1
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  i:3
REG[1] =  i:0
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  i:0
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 3, 3) <= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  i:2
REG[4] =  i:3
REG[1] =  i:0
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  i:0
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0    8    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) < (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  13 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:2
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, NULL, 3) >= (1, 2, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  i:2
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, 3, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, 3, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  i:3
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, 3, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  11 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  NULL
REG[3] =  i:3
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (1, NULL, 3) < (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Lt               4    1    3               61 r[1] = (r[3]<r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Lt               3    1    4               61 r[1] = (r[4]<r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 IfNot            1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE NOT (1, NULL, 3) > (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) <= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Lt               2    1    2               61 r[1] = (r[2]<r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Lt               3    1    3               61 r[1] = (r[3]<r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  12 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               2    1    2               61 r[1] = (r[2]>r[2])
REG[2] =  i:1
REG[2] =  i:1
REG[1] =  i:0
   3 ElseNotEq        0    7    0               00 
   4 Gt               3    1    3               61 r[1] = (r[3]>r[3])
REG[3] =  NULL
REG[3] =  NULL
REG[1] =  NULL
   5 ElseNotEq        0    7    0               00 
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE NOT (1, NULL, 3) >= (1, NULL, 3)
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 1             01 usesStmtJournal=0
  10 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
  11 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  12 Gt               4    1    3               61 r[1] = (r[3]>r[4])
REG[4] =  i:1
REG[3] =  i:1
REG[1] =  i:0
  13 ElseNotEq        0   21    0               00 
  14 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  15 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  16 Gt               3    1    4               61 r[1] = (r[4]>r[3])
REG[3] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  17 ElseNotEq        0   21    0               00 
  21 Goto             0    1    0               00 
   1 If               1    8    1               00 
REG[1] =  NULL
   8 Halt             0    0    0               00 
SQL: [;
;SELECT (1, 1) == (SELECT x,x FROM t1 ORDER BY x)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    2 1             01 usesStmtJournal=0
  34 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  35 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         27    2    0               00 r[2]=27; return address
REG[2] =  i:27
   3 Once             0   27    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   22    0               00 
  11 Column           0    0    3               00 r[3]=t1.x
REG[3] =  i:1
  12 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:1
  13 Sequence         1    7    0               00 r[7]=cursor[1].ctr++
REG[7] =  i:0
  14 Move             3    8    1               00 r[8]=r[3]
REG[8] =  i:1
  15 IfNotZero        5   19    0               00 if r[5]!=0 then r[5]--, goto 19
REG[5] =  i:1
  19 MakeRecord       6    3    9               00 r[9]=mkrec(r[6..8])
REG[9] =  s4[04090809....]
  20 IdxInsert        1    9    6 3             00 key=r[9]
REG[9] =  s4[04090809....]
  21 Next             0   11    0               01 
  22 Explain         22    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  23 Sort             1   27    0               00 
  24 Column           1    0    4               00 r[4]=x
REG[4] =  i:1
  25 Column           1    2    3               00 r[3]=x
REG[3] =  i:1
  26 Next             1   24    0               00 
  27 Return           2    0    0               00 
REG[2] =  i:27
  28 Eq               3    1   10 (BINARY)      61 r[1] = (r[10]==r[3])
REG[3] =  i:1
REG[10] =  i:1
REG[1] =  i:1
  29 IfNot            1   31    0               00 
REG[1] =  i:1
  30 Eq               4    1   10 (BINARY)      69 r[1] = (r[10]==r[4])
REG[4] =  i:1
REG[10] =  i:1
  31 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  32 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t1 ORDER BY x) == (SELECT * FROM t1 ORDER BY x)
  
;]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      0    0    2 1             01 usesStmtJournal=0
  52 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         24    3    0               00 r[3]=24; return address
REG[3] =  i:24
   3 Once             0   24    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    3    0 k(1,B)        00 nColumn=3
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   20    0               00 
  11 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:1
  12 Sequence         2    7    0               00 r[7]=cursor[2].ctr++
REG[7] =  i:0
  13 IfNotZero        5   17    0               00 if r[5]!=0 then r[5]--, goto 17
REG[5] =  i:1
  17 MakeRecord       6    2    8               00 r[8]=mkrec(r[6..7])
REG[8] =  s3[030908...]
  18 IdxInsert        2    8    6 2             00 key=r[8]
REG[8] =  s3[030908...]
  19 Next             0   11    0               01 
  20 Explain         20    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  21 Sort             2   24    0               00 
  22 Column           2    0    4               00 r[4]=x
REG[4] =  i:1
  23 Next             2   22    0               00 
  24 Return           3    0    0               00 
REG[3] =  i:24
  25 Integer         47    9    0               00 r[9]=47; return address
REG[9] =  i:47
  26 Once             0   47    0               00 
  27 Explain         27    0    0 SCALAR SUBQUERY 2 00 
  28 Null             0   10   10               00 r[10..10]=NULL; Init subquery result
REG[10] =  NULL
  29 OpenEphemeral    3    3    0 k(1,B)        00 nColumn=3
  30 Integer          1   11    0               00 r[11]=1; LIMIT counter
REG[11] =  i:1
  31 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  32 Explain         32   27    0 SCAN TABLE t1 00 
  33 Rewind           1   43    0               00 
  34 Column           1    0   12               00 r[12]=t1.x
REG[12] =  i:1
  35 Sequence         3   13    0               00 r[13]=cursor[3].ctr++
REG[13] =  i:0
  36 IfNotZero       11   40    0               00 if r[11]!=0 then r[11]--, goto 40
REG[11] =  i:1
  40 MakeRecord      12    2   14               00 r[14]=mkrec(r[12..13])
REG[14] =  s3[030908...]
  41 IdxInsert        3   14   12 2             00 key=r[14]
REG[14] =  s3[030908...]
  42 Next             1   34    0               01 
  43 Explain         43   27    0 USE TEMP B-TREE FOR ORDER BY 00 
  44 Sort             3   47    0               00 
  45 Column           3    0   10               00 r[10]=x
REG[10] =  i:1
  46 Next             3   45    0               00 
  47 Return           9    0    0               00 
REG[9] =  i:47
  48 Eq              10    1    4               61 r[1] = (r[4]==r[10])
REG[10] =  i:1
REG[4] =  i:1
REG[1] =  i:1
  49 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  50 Halt             0    0    0               00 
SQL: [SELECT (1, 1) == (SELECT x,x FROM t1 ORDER BY x, x)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    2 1             01 usesStmtJournal=0
  35 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  36 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,B,B)      00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   9 Explain          9    4    0 SCAN TABLE t1 00 
  10 Rewind           0   23    0               00 
  11 Column           0    0    3               00 r[3]=t1.x
REG[3] =  i:1
  12 Column           0    0    6               00 r[6]=t1.x
REG[6] =  i:1
  13 Column           0    0    7               00 r[7]=t1.x
REG[7] =  i:1
  14 Sequence         1    8    0               00 r[8]=cursor[1].ctr++
REG[8] =  i:0
  15 Move             3    9    1               00 r[9]=r[3]
REG[9] =  i:1
  16 IfNotZero        5   20    0               00 if r[5]!=0 then r[5]--, goto 20
REG[5] =  i:1
  20 MakeRecord       6    4   10               00 r[10]=mkrec(r[6..9])
REG[10] =  s5[0509090809.....]
  21 IdxInsert        1   10    6 4             00 key=r[10]
REG[10] =  s5[0509090809.....]
  22 Next             0   11    0               01 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  25 Column           1    1    4               00 r[4]=x
REG[4] =  i:1
  26 Column           1    3    3               00 r[3]=x
REG[3] =  i:1
  27 Next             1   25    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  i:1
REG[11] =  i:1
REG[1] =  i:1
  30 IfNot            1   32    0               00 
REG[1] =  i:1
  31 Eq               4    1   11 (BINARY)      69 r[1] = (r[11]==r[4])
REG[4] =  i:1
REG[11] =  i:1
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT * FROM t2 ORDER BY a, a DESC) == (SELECT * FROM t2 ORDER BY a, a DESC)
  
;]
VDBE Trace:
   0 Init             0   53    0               00 Start at 53
  53 Transaction      0    0    2 1             01 usesStmtJournal=0
  54 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         25    3    0               00 r[3]=25; return address
REG[3] =  i:25
   3 Once             0   25    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   6 OpenEphemeral    2    4    0 k(2,B,-B)     00 nColumn=4
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   9 Explain          9    4    0 SCAN TABLE t2 00 
  10 Rewind           0   21    0               00 
  21 Explain         21    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  22 Sort             2   25    0               00 
  25 Return           3    0    0               00 
REG[3] =  i:25
  26 Integer         49   10    0               00 r[10]=49; return address
REG[10] =  i:49
  27 Once             0   49    0               00 
  28 Explain         28    0    0 SCALAR SUBQUERY 2 00 
  29 Null             0   11   11               00 r[11..11]=NULL; Init subquery result
REG[11] =  NULL
  30 OpenEphemeral    3    4    0 k(2,B,-B)     00 nColumn=4
  31 Integer          1   12    0               00 r[12]=1; LIMIT counter
REG[12] =  i:1
  32 OpenRead         1    3    0 1             00 root=3 iDb=0; t2
  33 Explain         33   28    0 SCAN TABLE t2 00 
  34 Rewind           1   45    0               00 
  45 Explain         45   28    0 USE TEMP B-TREE FOR ORDER BY 00 
  46 Sort             3   49    0               00 
  49 Return          10    0    0               00 
REG[10] =  i:49
  50 Eq              11    1    4               61 r[1] = (r[4]==r[11])
REG[11] =  NULL
REG[4] =  NULL
REG[1] =  NULL
  51 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  52 Halt             0    0    0               00 
SQL: [SELECT ((3, 5)) == (SELECT a,a FROM t2 ORDER BY a DESC, a)
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    0    2 1             01 usesStmtJournal=0
  35 Integer          3   11    0               00 r[11]=3
REG[11] =  i:3
  36 Integer          5   12    0               00 r[12]=5
REG[12] =  i:5
  37 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         28    2    0               00 r[2]=28; return address
REG[2] =  i:28
   3 Once             0   28    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
   7 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   8 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   9 Explain          9    4    0 SCAN TABLE t2 00 
  10 Rewind           0   23    0               00 
  23 Explain         23    4    0 USE TEMP B-TREE FOR ORDER BY 00 
  24 Sort             1   28    0               00 
  28 Return           2    0    0               00 
REG[2] =  i:28
  29 Eq               3    1   11 (BINARY)      61 r[1] = (r[11]==r[3])
REG[3] =  NULL
REG[11] =  i:3
REG[1] =  NULL
  30 IfNot            1   32    0               00 
REG[1] =  NULL
  31 Eq               4    1   12 (BINARY)      69 r[1] = (r[12]==r[4])
REG[4] =  NULL
REG[12] =  i:5
REG[1] =  NULL
  32 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
  33 Halt             0    0    0               00 
SQL: [SELECT (SELECT 3, 5) == (SELECT x,x FROM t1 ORDER BY x DESC, x)
;]
VDBE Trace:
   0 Init             0   44    0               00 Start at 44
  44 Transaction      0    0    2 1             01 usesStmtJournal=0
  45 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         11    2    0               00 r[2]=11; return address
REG[2] =  i:11
   3 Once             0   11    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    4               00 r[3..4]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   9 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  10 DecrJumpZero     5   11    0               00 if (--r[5])==0 goto 11
REG[5] =  i:1
  11 Return           2    0    0               00 
REG[2] =  i:11
  12 Integer         38    6    0               00 r[6]=38; return address
REG[6] =  i:38
  13 Once             0   38    0               00 
  14 Explain         14    0    0 SCALAR SUBQUERY 2 00 
  15 Null             0    7    8               00 r[7..8]=NULL; Init subquery result
REG[7] =  NULL
  16 OpenEphemeral    1    5    0 k(2,-B,B)     00 nColumn=5
  17 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  18 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
  19 Explain         19   14    0 SCAN TABLE t1 00 
  20 Rewind           0   33    0               00 
  21 Column           0    0    7               00 r[7]=t1.x
REG[7] =  i:1
  22 Column           0    0   10               00 r[10]=t1.x
REG[10] =  i:1
  23 Column           0    0   11               00 r[11]=t1.x
REG[11] =  i:1
  24 Sequence         1   12    0               00 r[12]=cursor[1].ctr++
REG[12] =  i:0
  25 Move             7   13    1               00 r[13]=r[7]
REG[13] =  i:1
  26 IfNotZero        9   30    0               00 if r[9]!=0 then r[9]--, goto 30
REG[9] =  i:1
  30 MakeRecord      10    4   14               00 r[14]=mkrec(r[10..13])
REG[14] =  s5[0509090809.....]
  31 IdxInsert        1   14   10 4             00 key=r[14]
REG[14] =  s5[0509090809.....]
  32 Next             0   21    0               01 
  33 Explain         33   14    0 USE TEMP B-TREE FOR ORDER BY 00 
  34 Sort             1   38    0               00 
  35 Column           1    1    8               00 r[8]=x
REG[8] =  i:1
  36 Column           1    3    7               00 r[7]=x
REG[7] =  i:1
  37 Next             1   35    0               00 
  38 Return           6    0    0               00 
REG[6] =  i:38
  39 Eq               7    1    3 (BINARY)      61 r[1] = (r[3]==r[7])
REG[7] =  i:1
REG[3] =  i:3
REG[1] =  i:0
  40 IfNot            1   42    0               00 
REG[1] =  i:0
  42 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  43 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (2, 2) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  14 Integer          3    7    0               00 r[7]=3
REG[7] =  i:3
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:2
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   4 Ge               5    4    3               61 r[4] = (r[3]>=r[5])
REG[5] =  i:2
REG[3] =  i:2
REG[4] =  i:1
   5 Lt               7    6    2               61 r[6] = (r[2]<r[7])
REG[7] =  i:3
REG[2] =  i:2
REG[6] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              6    4    1               00 r[1]=(r[6] && r[4])
REG[6] =  i:1
REG[4] =  i:1
REG[1] =  i:1
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
  10 Halt             0    0    0               00 
SQL: [SELECT (2, 2) BETWEEN (3, NULL) AND (3, 3)
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  12 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  13 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  14 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  15 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               5    4    2               61 r[4] = (r[2]>r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[4] =  i:0
   3 ElseNotEq        0    5    0               00 
   5 Lt               5    7    2               61 r[7] = (r[2]<r[5])
REG[5] =  i:3
REG[2] =  i:2
REG[7] =  i:1
   6 ElseNotEq        0    8    0               00 
   8 And              7    4    1               00 r[1]=(r[7] && r[4])
REG[7] =  i:1
REG[4] =  i:0
REG[1] =  i:0
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE c(temptable, key, value);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 c             00 r[7]='c'
REG[7] =   t1[c](8)
  20 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t1[c](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE c(temptable, key, value) 00 r[10]='CREATE TABLE c(temptable, key, value)'
REG[10] =   t37[CREATE TABLE c(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s51[06170F0F01577461626C656363044352.....Wtablecc.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s51[06170F0F01577461626C656363044352.....Wtablecc.CR]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[c](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s37[CREATE TABLE c(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[c](8)
REG[5] =  i:4
REG[6] =   s37[CREATE TABLE c(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES('def', 2, 'iii');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    3 1             01 usesStmtJournal=0
  10 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; c
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 def           00 r[2]='def'
REG[2] =   t3[def](8)
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 String8          0    4    0 iii           00 r[4]='iii'
REG[4] =   t3[iii](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s11[0413011364656602696969....def.iii]
   7 Insert           0    5    1 c             39 intkey=r[1] data=r[5]
REG[5] =  s11[0413011364656602696969....def.iii]
REG[1] =  i:1
   8 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE (a, a) = (SELECT 'abc', 1);]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    3 1             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   21    0               00 
  21 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t2 WHERE a = (SELECT 'abc' COLLATE nocase) AND a = (SELECT 1);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    3 1             01 usesStmtJournal=0
  31 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   29    0               00 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT x FROM t1 WHERE (x, x) = (SELECT 2, 'def');]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
  22 Transaction      0    0    3 1             01 usesStmtJournal=0
  23 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   21    0               00 
   4 Column           0    0    1               00 r[1]=t1.x
REG[1] =  i:1
   5 Integer         14    3    0               00 r[3]=14; return address
REG[3] =  i:14
   6 Once             0   14    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    5               00 r[4..5]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    6    0               00 r[6]=1; LIMIT counter
REG[6] =  i:1
  10 Explain         10    7    0 SCAN CONSTANT ROW 00 
  11 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  12 String8          0    5    0 def           00 r[5]='def'
REG[5] =   t3[def](8)
  13 DecrJumpZero     6   14    0               00 if (--r[6])==0 goto 14
REG[6] =  i:1
  14 Return           3    0    0               00 
REG[3] =  i:14
  15 Ne               4   20    1 (BINARY)      51 if r[1]!=r[4] goto 20
REG[4] =  i:2
REG[1] =  i:1
  20 Next             0    4    0               01 
  21 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (a, a) IS (2, 2)
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             01 usesStmtJournal=0
  13 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   11    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE (x, x) < (2, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 1             01 usesStmtJournal=0
  15 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   13    0               00 
   4 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:1
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:2
REG[2] =  i:1
REG[1] =  i:1
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:1
  10 Column           0    0    5               00 r[5]=t1.x
REG[5] =  i:1
  11 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:1
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [SELECT * FROM t2 WHERE (a, a) > ('2', 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    3 1             01 usesStmtJournal=0
  15 String8          0    3    0 2             00 r[3]='2'
REG[3] =   t1[2](8)
  16 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  17 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   2 Explain          2    0    0 SCAN TABLE t2 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [CREATE TABLE donotread(t4);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 donotread     00 r[7]='donotread'
REG[7] =   t9[donotread](8)
  20 String8          0    8    0 donotread     00 r[8]='donotread'
REG[8] =   t9[donotread](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE donotread(t4) 00 r[10]='CREATE TABLE donotread(t4)'
REG[10] =   t26[CREATE TABLE do](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s56[06171F1F01417461626C65646F6E6F74.....Atabledonot]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s56[06171F1F01417461626C65646F6E6F74.....Atabledonot]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='donotread' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 1             00 usesStmtJournal=0
  16 String8          0    2    0 donotread     00 r[2]='donotread'
REG[2] =   t9[donotread](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s9[donotread](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[donotread](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE do](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[donotread](8)
REG[5] =  i:5
REG[6] =   s26[CREATE TABLE do](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [CREATE TABLE t1b(name INTEGER PRIMARY KEY, t3, d);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1b           00 r[7]='t1b'
REG[7] =   t3[t1b](8)
  20 String8          0    8    0 t1b           00 r[8]='t1b'
REG[8] =   t3[t1b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE t1b(name INTEGER PRIMARY KEY, t3, d) 00 r[10]='CREATE TABLE t1b(name INTEGER PRIMARY KEY, t3, d)'
REG[10] =   t49[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s67[06171313016F7461626C657431627431.....otablet1bt1]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s67[06171313016F7461626C657431627431.....otablet1bt1]
REG[5] =  i:5
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='t1b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 1             00 usesStmtJournal=0
  16 String8          0    2    0 t1b           00 r[2]='t1b'
REG[2] =   t3[t1b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s3[t1b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t1b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s49[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t1b](8)
REG[5] =  i:6
REG[6] =   s49[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT temptable FROM c WHERE (temptable, value) < (4, 5)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 1             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
  17 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; c
   2 Explain          2    0    0 SCAN TABLE c  00 
   3 Rewind           0   13    0               00 
   4 Column           0    0    2               00 r[2]=c.temptable
REG[2] =   s3[def](8)
   5 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:4
REG[2] =   s3[def](8)
REG[1] =  i:0
   6 ElseNotEq        0    9    0               00 
   9 IfNot            1   12    1               00 
REG[1] =  i:0
  12 Next             0    4    0               01 
  13 Halt             0    0    0               00 
SQL: [SELECT t4 FROM donotread WHERE (t4, t4) < (4, 3)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 1             01 usesStmtJournal=0
  15 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  16 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  17 Goto             0    1    0               00 
   1 OpenRead         0    5    0 1             00 root=5 iDb=0; donotread
   2 Explain          2    0    0 SCAN TABLE donotread 00 
   3 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [;CREATE TABLE e(f TEXT,t2abc TEXT,t2cd TEXT,t2def TEXT,t5 TEXT,t5a TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 e             00 r[7]='e'
REG[7] =   t1[e](8)
  20 String8          0    8    0 e             00 r[8]='e'
REG[8] =   t1[e](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE e(f TEXT,t2abc TEXT,t2cd TEXT,t2def TEXT,t5 TEXT,t5a TEXT) 00 r[10]='CREATE TABLE e(f TEXT,t2abc TEXT,t2cd TEXT,t2def TEXT,t5 TEXT,t5a TEXT)'
REG[10] =   t71[CREATE TABLE e(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s86[07170F0F01811B7461626C6565650743.......tableee.C]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s86[07170F0F01811B7461626C6565650743.......tableee.C]
REG[5] =  i:6
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='e' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 1             00 usesStmtJournal=0
  16 String8          0    2    0 e             00 r[2]='e'
REG[2] =   t1[e](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[e](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[e](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[e](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[e](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[e](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[e](8)
REG[1] =   s1[e](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[e](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s71[CREATE TABLE e(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[e](8)
REG[5] =  i:7
REG[6] =   s71[CREATE TABLE e(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE INDEX t5b ON c(key,value,key,temptable,value);]
VDBE Trace:
   0 Init             0   37    0               00 Start at 37
  37 Transaction      0    1    6 1             01 usesStmtJournal=0
  38 Goto             0    1    0               00 
   1 Noop             0   36    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:8
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:7
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t5b           00 r[4]='t5b'
REG[4] =   t3[t5b](8)
   7 String8          0    5    0 c             00 r[5]='c'
REG[5] =   t1[c](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE INDEX t5b ON c(key,value,key,temptable,value) 00 r[7]='CREATE INDEX t5b ON c(key,value,key,temptable,value)'
REG[7] =   t52[CREATE INDEX t5](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s68[0617130F0175696E6465787435626308.....uindext5bc.]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s68[0617130F0175696E6465787435626308.....uindext5bc.]
REG[2] =  i:7
  12 SorterOpen       3    0    5 k(6,,,,,,)    00 
  13 OpenRead         1    4    0 3             00 root=4 iDb=0; c
  14 Rewind           1   24    0               00 
  15 Column           1    1   10               00 r[10]=c.key
REG[10] =  i:2
  16 Column           1    2   11               00 r[11]=c.value
REG[11] =   s3[iii](8)
  17 Column           1    1   12               00 r[12]=c.key
REG[12] =  i:2
  18 Column           1    0   13               00 r[13]=c.temptable
REG[13] =   s3[def](8)
  19 Column           1    2   14               00 r[14]=c.value
REG[14] =   s3[iii](8)
  20 Rowid            1   15    0               00 r[15]=rowid
REG[15] =  i:1
  21 MakeRecord      10    6    9               00 r[9]=mkrec(r[10..15])
REG[9] =  s18[07011301131309026969690264656669........iii.defi]
  22 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  s18[07011301131309026969690264656669........iii.defi]
  23 Next             1   15    0               00 
  24 OpenWrite        2    1    0 k(6,,,,,,)    11 root=1 iDb=0
  25 SorterSort       3   30    0               00 
  26 SorterData       3    9    2               00 r[9]=data
  27 SeekEnd          2    0    0               00 
  28 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s18[07011301131309026969690264656669........iii.defi]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        0    1    7               00 
  34 ParseSchema      0    0    0 name='t5b' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 1             00 usesStmtJournal=0
  16 String8          0    2    0 t5b           00 r[2]='t5b'
REG[2] =   t3[t5b](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t5b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t5b](8)
REG[1] =   s3[t5b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t5b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:8
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s52[CREATE INDEX t5](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t5b](8)
REG[5] =  i:8
REG[6] =   s52[CREATE INDEX t5](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  35 Expire           0    1    0               00 
  36 Halt             0    0    0               00 
SQL: [;SELECT t4 FROM donotread
    WHERE (t4,t4) IN (SELECT 't4','t4' FROM e)
    AND (t4,t4,t4) IN (SELECT 't4','t4','t4' FROM e);]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      0    0    7 1             01 usesStmtJournal=0
  52 Goto             0    1    0               00 
   1 OpenRead         0    5    0 1             00 root=5 iDb=0; donotread
   2 Explain          2    0    0 SCAN TABLE donotread 00 
   3 Rewind           0   50    0               00 
  50 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE x1(x1i);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 x1            00 r[7]='x1'
REG[7] =   t2[x1](8)
  20 String8          0    8    0 x1            00 r[8]='x1'
REG[8] =   t2[x1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE x1(x1i) 00 r[10]='CREATE TABLE x1(x1i)'
REG[10] =   t20[CREATE TABLE x1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657831783109.....5tablex1x1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657831783109.....5tablex1x1.]
REG[5] =  i:8
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='x1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 1             00 usesStmtJournal=0
  16 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[x1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[x1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s20[CREATE TABLE x1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[x1](8)
REG[5] =  i:9
REG[6] =   s20[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS x1;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    8 1             01 usesStmtJournal=1
  39 String8          0    3    0 x1            00 r[3]='x1'
REG[3] =   t2[x1](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s1[c](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[donotread](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s9[donotread](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[e](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s1[e](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s1[c](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[x1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[x1](8)
REG[2] =   s2[x1](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:8
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          9    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 x1            00 
  36 SetCookie        0    1    9               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE x1(x1i,x1i2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 x1            00 r[7]='x1'
REG[7] =   t2[x1](8)
  20 String8          0    8    0 x1            00 r[8]='x1'
REG[8] =   t2[x1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  22 String8          0   10    0 CREATE TABLE x1(x1i,x1i2) 00 r[10]='CREATE TABLE x1(x1i,x1i2)'
REG[10] =   t25[CREATE TABLE x1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06171111013F7461626C657831783109.....?tablex1x1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06171111013F7461626C657831783109.....?tablex1x1.]
REG[5] =  i:8
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='x1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 1             00 usesStmtJournal=0
  16 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[x1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[x1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:9
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE TABLE x1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[x1](8)
REG[5] =  i:9
REG[6] =   s25[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO x1 VALUES(3,4);]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1   10 1             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    9    0 2             00 root=9 iDb=0; x1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   4 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[0301010304.....]
   6 Insert           0    4    1 x1            39 intkey=r[1] data=r[4]
REG[4] =  s5[0301010304.....]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [CREATE TABLE t0(c0);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   10 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:9
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:9
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:9
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:9
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  20 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE t0(c0) 00 r[10]='CREATE TABLE t0(c0)'
REG[10] =   t19[CREATE TABLE t0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[0617111101337461626C65743074300A.....3tablet0t0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s35[0617111101337461626C65743074300A.....3tablet0t0.]
REG[5] =  i:9
  25 SetCookie        0    1   11               00 
  26 ParseSchema      0    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   11 1             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:10
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s19[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:10
REG[6] =   s19[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,2) BETWEEN (1,1) AND (3,3)
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
  14 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
  15 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  16 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  17 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:2
REG[3] =  i:1
   3 ElseNotEq        0    5    0               00 
   5 IfNot            3   12    1               00 
REG[3] =  i:1
   6 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:2
REG[3] =  i:1
   7 ElseNotEq        0    9    0               00 
   9 IfNot            3   12    1               00 
REG[3] =  i:1
  10 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  11 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  12 Halt             0    0    0               00 
SQL: [SELECT 1 FROM t1 WHERE (1,x) BETWEEN (1,1) AND (3,3)

;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0   11 1             01 usesStmtJournal=0
  18 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  19 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  20 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  21 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   16    0               00 
   4 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:1
   5 Gt               4    3    1               61 r[3] = (r[1]>r[4])
REG[4] =  i:1
REG[1] =  i:1
REG[3] =  i:0
   6 ElseNotEq        0    8    0               00 
   7 Ge               4    3    2 (BINARY)      61 r[3] = (r[2]>=r[4])
REG[4] =  i:1
REG[2] =  i:1
REG[3] =  i:1
   8 IfNot            3   15    1               00 
REG[3] =  i:1
   9 Lt               5    3    1               61 r[3] = (r[1]<r[5])
REG[5] =  i:3
REG[1] =  i:1
REG[3] =  i:1
  10 ElseNotEq        0   12    0               00 
  12 IfNot            3   15    1               00 
REG[3] =  i:1
  13 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  14 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  15 Next             0    4    0               01 
  16 Halt             0    0    0               00 
SQL: [CREATE TABLE i0(_x_ PRIMARY KEY, _xxx_);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   11 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:12
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:11
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_i0_1 00 r[7]='sqlite_autoindex_i0_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 i0            00 r[8]='i0'
REG[8] =   t2[i0](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:12
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:11
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:10
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:10
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:10
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 i0            00 r[15]='i0'
REG[15] =   t2[i0](8)
  31 String8          0   16    0 i0            00 r[16]='i0'
REG[16] =   t2[i0](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:11
  33 String8          0   18    0 CREATE TABLE i0(_x_ PRIMARY KEY, _xxx_) 00 r[18]='CREATE TABLE i0(_x_ PRIMARY KEY, _xxx_)'
REG[18] =   t39[CREATE TABLE i0](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s55[06171111015B7461626C65693069300B.....[tablei0i0.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s55[06171111015B7461626C65693069300B.....[tablei0i0.]
REG[13] =  i:10
  36 SetCookie        0    1   12               00 
  37 ParseSchema      0    0    0 tbl_name='i0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 1             00 usesStmtJournal=0
  16 String8          0    2    0 i0            00 r[2]='i0'
REG[2] =   t2[i0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[i0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[i0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:11
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s39[CREATE TABLE i0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[i0](8)
REG[5] =  i:11
REG[6] =   s39[CREATE TABLE i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i0](8)
REG[1] =   s2[i0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:12
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:12
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE i1(v1 INTEGER PRIMARY KEY, tr1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:13
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:12
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:12
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:12
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:12
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 i1            00 r[7]='i1'
REG[7] =   t2[i1](8)
  20 String8          0    8    0 i1            00 r[8]='i1'
REG[8] =   t2[i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:13
  22 String8          0   10    0 CREATE TABLE i1(v1 INTEGER PRIMARY KEY, tr1) 00 r[10]='CREATE TABLE i1(v1 INTEGER PRIMARY KEY, tr1)'
REG[10] =   t44[CREATE TABLE i1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s60[0617111101657461626C65693169310D.....etablei1i1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s60[0617111101657461626C65693169310D.....etablei1i1.]
REG[5] =  i:12
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 1             00 usesStmtJournal=0
  16 String8          0    2    0 i1            00 r[2]='i1'
REG[2] =   t2[i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:13
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s44[CREATE TABLE i1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[i1](8)
REG[5] =  i:13
REG[6] =   s44[CREATE TABLE i1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [
;CREATE TABLE tr2(y,i,j);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   13 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:14
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:13
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:13
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:13
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:13
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 tr2           00 r[7]='tr2'
REG[7] =   t3[tr2](8)
  20 String8          0    8    0 tr2           00 r[8]='tr2'
REG[8] =   t3[tr2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:14
  22 String8          0   10    0 CREATE TABLE tr2(y,i,j) 00 r[10]='CREATE TABLE tr2(y,i,j)'
REG[10] =   t23[CREATE TABLE tr](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s41[06171313013B7461626C657472327472.....;tabletr2tr]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s41[06171313013B7461626C657472327472.....;tabletr2tr]
REG[5] =  i:13
  25 SetCookie        0    1   14               00 
  26 ParseSchema      0    0    0 tbl_name='tr2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   14 1             00 usesStmtJournal=0
  16 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[tr2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:14
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s23[CREATE TABLE tr](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[tr2](8)
REG[5] =  i:14
REG[6] =   s23[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO c VALUES(1,2,3);]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    1   14 1             01 usesStmtJournal=0
  20 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; c
   2 OpenWrite        1    8    0 k(6,,,,,,)    00 root=8 iDb=0; t5b
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   6 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
   7 Noop             0    0    0               00 uniqueness check for t5b
   8 SCopy            3    6    0               00 r[6]=r[3]; key
REG[6] =  i:2
   9 SCopy            4    7    0               00 r[7]=r[4]; value
REG[7] =  i:3
  10 SCopy            3    8    0               00 r[8]=r[3]; key
REG[8] =  i:2
  11 SCopy            2    9    0               00 r[9]=r[2]; temptable
REG[9] =  i:1
  12 SCopy            4   10    0               00 r[10]=r[4]; value
REG[10] =  i:3
  13 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:2
  14 MakeRecord       6    6    5               00 r[5]=mkrec(r[6..11]); for t5b
REG[5] =  s12[070101010901010203020302............]
  15 IdxInsert        1    5    6 6             10 key=r[5]
REG[5] =  s12[070101010901010203020302............]
  16 MakeRecord       2    3   12               00 r[12]=mkrec(r[2..4])
REG[12] =  s6[040901010203......]
  17 Insert           0   12    1 c             39 intkey=r[1] data=r[12]
REG[12] =  s6[040901010203......]
REG[1] =  i:2
  18 Halt             0    0    0               00 
SQL: [;INSERT INTO c(temptable) VALUES(1);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1   14 1             01 usesStmtJournal=0
  18 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  19 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  20 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; c
   2 OpenWrite        1    8    0 k(6,,,,,,)    00 root=8 iDb=0; t5b
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 Noop             0    0    0               00 uniqueness check for t5b
   6 SCopy            3    6    0               00 r[6]=r[3]; key
REG[6] =  NULL
   7 SCopy            4    7    0               00 r[7]=r[4]; value
REG[7] =  NULL
   8 SCopy            3    8    0               00 r[8]=r[3]; key
REG[8] =  NULL
   9 SCopy            2    9    0               00 r[9]=r[2]; temptable
REG[9] =  i:1
  10 SCopy            4   10    0               00 r[10]=r[4]; value
REG[10] =  NULL
  11 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:3
  12 MakeRecord       6    6    5               00 r[5]=mkrec(r[6..11]); for t5b
REG[5] =  s8[0700000009000103........]
  13 IdxInsert        1    5    6 6             10 key=r[5]
REG[5] =  s8[0700000009000103........]
  14 MakeRecord       2    3   12               00 r[12]=mkrec(r[2..4])
REG[12] =  s4[04090000....]
  15 Insert           0   12    1 c             39 intkey=r[1] data=r[12]
REG[12] =  s4[04090000....]
REG[1] =  i:3
  16 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t1y AFTER UPDATE ON donotread BEGIN
     UPDATE t2 SET (a,a,a)=(SELECT new.t4,new.t4+1,new.t4+2);
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   14 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t1y           00 r[3]='t1y'
REG[3] =   t3[t1y](8)
   5 String8          0    4    0 donotread     00 r[4]='donotread'
REG[4] =   t9[donotread](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1y AFTER UPDATE ON donotread BEGIN
     UPDATE t2 SET (a,a,a)=(SELECT new.t4,new.t4+1,new.t4+2);
  END 00 r[6]='CREATE TRIGGER t1y AFTER UPDATE ON donotread BEGIN
     UPDATE t2 SET (a,a,a)=(SELECT new.t4,
REG[6] =   t118[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s144[071B131F088179747269676765727431......ytriggert1]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s144[071B131F088179747269676765727431......ytriggert1]
REG[1] =  i:14
  10 SetCookie        0    1   15               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t1y' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   15 1             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t1y           00 r[3]='t1y'
REG[3] =   t3[t1y](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1y](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t3[t1y](8)
REG[1] =   s3[t1y](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t1y](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s118[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t1y](8)
REG[5] =  i:0
REG[6] =   s118[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE t1b SET d=7;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1   15 1             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    6    0 3             00 root=6 iDb=0; t1b
   3 Explain          3    0    0 SCAN TABLE t1b 00 
   4 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [;SELECT * FROM e;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0   15 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    7    0 6             00 root=7 iDb=0; e
   2 Explain          2    0    0 SCAN TABLE e  00 
   3 Rewind           0   12    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;UPDATE t2 SET a=97;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   15 1             01 usesStmtJournal=1
  17 Integer          5    5    0               00 r[5]=5
REG[5] =  i:5
  18 Integer         10    6    0               00 r[6]=10
REG[6] =  i:10
  19 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0    3    0 1             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
  15 Halt             0    0    0               00 
SQL: [;
;DROP TRIGGER t1y;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1   15 1             01 usesStmtJournal=0
  17 String8          0    3    0 t1y           00 r[3]='t1y'
REG[3] =   t3[t1y](8)
  18 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  19 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s2[t1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[c](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s1[c](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s9[donotread](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s9[donotread](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t1b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s3[t1b](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[e](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s1[e](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t5b](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s3[t5b](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[x1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s2[x1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[t0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s2[t0](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[i0](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s2[i0](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s21[sqlite_autoinde](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s21[sqlite_autoinde](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[i1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s2[i1](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[tr2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s3[tr2](8)
  12 Next             0    5    0               01 
   5 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[t1y](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[t1y](8)
REG[2] =   s3[t1y](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s7[trigger](8)
   8 Ne               4   12    2 (BINARY)      52 if r[2]!=r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s7[trigger](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:14
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 SetCookie        0    1   16               00 
  14 DropTrigger      0    0    0 t1y           00 
  15 Halt             0    0    0               00 
SQL: [;PRAGMA recursive_triggers = 1;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t1y AFTER UPDATE ON t1b WHEN new.t3>1 BEGIN
    UPDATE t1b SET (d, t3) = (
      SELECT t3, name FROM t1b WHERE t3 = new.t3-1
    ), (name, t3) = (
      SELECT t3, d FROM t1b WHERE t3 = new.t3-1
    ) WHERE t3 = new.t3-1;
  END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1   16 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t1y           00 r[3]='t1y'
REG[3] =   t3[t1y](8)
   5 String8          0    4    0 t1b           00 r[4]='t1b'
REG[4] =   t3[t1b](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1y AFTER UPDATE ON t1b WHEN new.t3>1 BEGIN
    UPDATE t1b SET (d, t3) = (
      SELECT t3, name FROM t1b WHERE t3 = new.t3-1
    ), (name, t3) = (
      SELECT t3, d FROM t1b WHERE t3 = new.t3-1
    ) WHERE t3 = new.t3-1;
  END 00 r[6]='CREATE TRIGGER t1y AFTER UPDATE ON t1b WHEN new.t3>1 BEGIN
    UPDATE t1b SET (d, t3) = (
   
REG[6] =   t243[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s263[071B1313088373747269676765727431......striggert1]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s263[071B1313088373747269676765727431......striggert1]
REG[1] =  i:14
  10 SetCookie        0    1   17               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t1y' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   17 1             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t1y           00 r[3]='t1y'
REG[3] =   t3[t1y](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[t1y](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t3[t1y](8)
REG[1] =   s3[t1y](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t1y](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s243[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t1y](8)
REG[5] =  i:0
REG[6] =   s243[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;UPDATE t0 SET c0=c0 WHERE c0=3;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1   17 1             01 usesStmtJournal=0
  15 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  16 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenWrite        0   10    0 1             00 root=10 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   13    0               00 
  13 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE a1(a2, a3);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   17 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:15
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:15
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:15
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:15
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:15
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 a1            00 r[7]='a1'
REG[7] =   t2[a1](8)
  20 String8          0    8    0 a1            00 r[8]='a1'
REG[8] =   t2[a1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:15
  22 String8          0   10    0 CREATE TABLE a1(a2, a3) 00 r[10]='CREATE TABLE a1(a2, a3)'
REG[10] =   t23[CREATE TABLE a1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s39[06171111013B7461626C65613161310F.....;tablea1a1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s39[06171111013B7461626C65613161310F.....;tablea1a1.]
REG[5] =  i:15
  25 SetCookie        0    1   18               00 
  26 ParseSchema      0    0    0 tbl_name='a1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   18 1             00 usesStmtJournal=0
  16 String8          0    2    0 a1            00 r[2]='a1'
REG[2] =   t2[a1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a1](8)
REG[1] =   s2[a1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[a1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:15
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s23[CREATE TABLE a1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[a1](8)
REG[5] =  i:15
REG[6] =   s23[CREATE TABLE a1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE a4 ( b1, b2, PRIMARY KEY (b1, b2) );]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   18 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:16
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:16
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:17
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:17
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_a4_1 00 r[7]='sqlite_autoindex_a4_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 a4            00 r[8]='a4'
REG[8] =   t2[a4](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:17
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:17
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:16
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:16
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:16
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 a4            00 r[15]='a4'
REG[15] =   t2[a4](8)
  31 String8          0   16    0 a4            00 r[16]='a4'
REG[16] =   t2[a4](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:16
  33 String8          0   18    0 CREATE TABLE a4 ( b1, b2, PRIMARY KEY (b1, b2) ) 00 r[18]='CREATE TABLE a4 ( b1, b2, PRIMARY KEY (b1, b2) )'
REG[18] =   t48[CREATE TABLE a4](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s64[06171111016D7461626C656134613410.....mtablea4a4.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s64[06171111016D7461626C656134613410.....mtablea4a4.]
REG[13] =  i:16
  36 SetCookie        0    1   19               00 
  37 ParseSchema      0    0    0 tbl_name='a4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   19 1             00 usesStmtJournal=0
  16 String8          0    2    0 a4            00 r[2]='a4'
REG[2] =   t2[a4](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[a4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[a4](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:16
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s48[CREATE TABLE a4](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[a4](8)
REG[5] =  i:16
REG[6] =   s48[CREATE TABLE a4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[a4](8)
REG[1] =   s2[a4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:17
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:17
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;CREATE TABLE b3 ( b4 );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   19 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:18
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:18
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:18
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:18
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:18
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:18
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b3            00 r[7]='b3'
REG[7] =   t2[b3](8)
  20 String8          0    8    0 b3            00 r[8]='b3'
REG[8] =   t2[b3](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:18
  22 String8          0   10    0 CREATE TABLE b3 ( b4 ) 00 r[10]='CREATE TABLE b3 ( b4 )'
REG[10] =   t22[CREATE TABLE b3](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C656233623312.....9tableb3b3.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C656233623312.....9tableb3b3.]
REG[5] =  i:18
  25 SetCookie        0    1   20               00 
  26 ParseSchema      0    0    0 tbl_name='b3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   20 1             00 usesStmtJournal=0
  16 String8          0    2    0 b3            00 r[2]='b3'
REG[2] =   t2[b3](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[a4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[a4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[b3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b3](8)
REG[1] =   s2[b3](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[b3](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:18
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE b3](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[b3](8)
REG[5] =  i:18
REG[6] =   s22[CREATE TABLE b3](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c0,c0) VALUES(1,11),(2,22),(3,33),(4,44);]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1   20 1             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 InitCoroutine    3   16    2               00 
  16 OpenWrite        0   10    0 1             00 root=10 iDb=0; t0
  17 Yield            3   23    0               00 
REG[3] =  i:1
REG[3] =  i:17
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   4 Integer         11    5    0               00 r[5]=11
REG[5] =  i:11
   5 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:5
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:1
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s2[0209..]
  21 Insert           0    8    1 t0            39 intkey=r[1] data=r[8]
REG[8] =  s2[0209..]
REG[1] =  i:1
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:5
REG[3] =  i:17
   6 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   7 Integer         22    5    0               00 r[5]=22
REG[5] =  i:22
   8 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:8
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:2
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020102...]
  21 Insert           0    8    1 t0            39 intkey=r[1] data=r[8]
REG[8] =  s3[020102...]
REG[1] =  i:2
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:8
REG[3] =  i:17
   9 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  10 Integer         33    5    0               00 r[5]=33
REG[5] =  i:33
  11 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:11
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:3
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020103...]
  21 Insert           0    8    1 t0            39 intkey=r[1] data=r[8]
REG[8] =  s3[020103...]
REG[1] =  i:3
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:11
REG[3] =  i:17
  12 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
  13 Integer         44    5    0               00 r[5]=44
REG[5] =  i:44
  14 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:14
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:4
  20 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s3[020104...]
  21 Insert           0    8    1 t0            39 intkey=r[1] data=r[8]
REG[8] =  s3[020104...]
REG[1] =  i:4
  22 Goto             0   17    0               00 
  17 Yield            3   23    0               00 
REG[3] =  i:14
REG[3] =  i:17
  15 EndCoroutine     3    0    0               00 
REG[3] =  i:17
  23 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1b WHERE (name,name)>(3,0) ORDER BY name;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   20 1             01 usesStmtJournal=0
  19 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  20 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  21 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; t1b
   3 Explain          3    0    0 SEARCH TABLE t1b USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekGE           0   17    1               00 key=r[1]; pk
REG[1] =  i:3
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1 WHERE (x,x)>(3,32) ORDER BY x;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   20 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          3    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t1.x
REG[2] =  i:1
   6 Gt               3    1    2 (BINARY)      61 r[1] = (r[2]>r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM donotread WHERE (t4,t4)>=(3,34) ORDER BY t4;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   20 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         34    4    0               00 r[4]=34
REG[4] =  i:34
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; donotread
   3 Explain          3    0    0 SCAN TABLE donotread 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (c0,c0)<(3,33) ORDER BY c0 DESC;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   20 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0   10    0 1             00 root=10 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:1
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:1
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t0.c0
REG[5] =  i:1
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s2[0209..]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s2[0209..]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:2
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:2
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t0.c0
REG[5] =  i:2
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020102...]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020102...]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:3
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:3
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
   8 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:3
   9 Lt               4    1    2 (BINARY)      61 r[1] = (r[2]<r[4])
REG[4] =  i:33
REG[2] =  i:3
REG[1] =  i:1
  10 IfNot            1   14    1               00 
REG[1] =  i:1
  11 Column           0    0    5               00 r[5]=t0.c0
REG[5] =  i:3
  12 MakeRecord       5    1    7               00 r[7]=mkrec(r[5])
REG[7] =  s3[020103...]
  13 SorterInsert     1    7    5 1             00 key=r[7]
REG[7] =  s3[020103...]
  14 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:4
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:3
REG[2] =  i:4
REG[1] =  i:0
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   14    1               00 
REG[1] =  i:0
  14 Next             0    5    0               01 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=c0
REG[6] =  i:3
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:3
  21 SorterNext       1   18    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=c0
REG[6] =  i:2
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  21 SorterNext       1   18    0               00 
  18 SorterData       1    8    2               00 r[8]=data
  19 Column           2    0    6               00 r[6]=c0
REG[6] =  i:1
  20 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  21 SorterNext       1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1b WHERE (name,d)<=(3,32) ORDER BY name DESC;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0   20 1             01 usesStmtJournal=0
  19 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  20 Integer         32    4    0               00 r[4]=32
REG[4] =  i:32
  21 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; t1b
   3 Explain          3    0    0 SEARCH TABLE t1b USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   5 SeekLE           0   17    1               00 key=r[1]; pk
REG[1] =  i:3
  17 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (0,0)<=(a,a) ORDER BY a;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   20 1             01 usesStmtJournal=0
  24 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  25 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    7    3               00 3 columns in r[7]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM x1 WHERE (5,0)>=(x1i,x1i) ORDER BY x1i DESC;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0   20 1             01 usesStmtJournal=0
  26 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
  27 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  28 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,-B)       00 
   2 OpenRead         0    9    0 2             00 root=9 iDb=0; x1
   3 Explain          3    0    0 SCAN TABLE x1 00 
   4 Rewind           0   16    0               00 
   5 Column           0    0    2               00 r[2]=x1.x1i
REG[2] =  i:3
   6 Lt               3    1    2 (BINARY)      61 r[1] = (r[2]<r[3])
REG[3] =  i:5
REG[2] =  i:3
REG[1] =  i:1
   7 ElseNotEq        0   10    0               00 
  10 IfNot            1   15    1               00 
REG[1] =  i:1
  11 Column           0    1    6               00 r[6]=x1.x1i2
REG[6] =  i:4
  12 Column           0    0    5               00 r[5]=x1.x1i
REG[5] =  i:3
  13 MakeRecord       5    2    8               00 r[8]=mkrec(r[5..6])
REG[8] =  s5[0301010304.....]
  14 SorterInsert     1    8    5 2             00 key=r[8]
REG[8] =  s5[0301010304.....]
  15 Next             0    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  17 OpenPseudo       2    9    4               00 4 columns in r[9]
  18 SorterSort       1   24    0               00 
  19 SorterData       1    9    2               00 r[9]=data
  20 Column           2    1    7               00 r[7]=x1i2
REG[7] =  i:4
  21 Column           2    0    6               00 r[6]=x1i
REG[6] =  i:3
  22 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  i:3
REG[7] =  i:4
  23 SorterNext       1   19    0               00 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t1b WHERE (3,0)>(t3,t3) ORDER BY t3 DESC;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0   20 1             01 usesStmtJournal=0
  28 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  29 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  30 Goto             0    1    0               00 
   1 SorterOpen       1    5    0 k(1,-B)       00 
   2 OpenRead         0    6    0 3             00 root=6 iDb=0; t1b
   3 Explain          3    0    0 SCAN TABLE t1b 00 
   4 Rewind           0   17    0               00 
  17 Explain         17    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  18 OpenPseudo       2   10    5               00 5 columns in r[10]
  19 SorterSort       1   26    0               00 
  26 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t2 WHERE (3,33)<=(a,a) ORDER BY a;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0   20 1             01 usesStmtJournal=0
  24 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  25 Integer         33    4    0               00 r[4]=33
REG[4] =  i:33
  26 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
  15 Explain         15    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  16 OpenPseudo       2    8    3               00 3 columns in r[8]
  17 SorterSort       1   22    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;SELECT 1 WHERE (2,(2,0)) IS (2,(2,0));]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   9 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  10 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   3 Ne               1    7    1               C1 if r[1]!=r[1] goto 7
REG[1] =  i:2
REG[1] =  i:2
   4 Ne               2    7    2               C1 if r[2]!=r[2] goto 7
REG[2] =  i:0
REG[2] =  i:0
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:1
   7 Halt             0    0    0               00 
SQL: [;CREATE TABLE abc(tx,z,PRIMARY KEY(z,z));]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1   20 1             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:19
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:19
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:19
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:20
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:20
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_abc_1 00 r[7]='sqlite_autoindex_abc_1'
REG[7] =   t22[sqlite_autoinde](8)
  17 String8          0    8    0 abc           00 r[8]='abc'
REG[8] =   t3[abc](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:20
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit]
REG[5] =  i:20
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:19
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:19
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:19
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 abc           00 r[15]='abc'
REG[15] =   t3[abc](8)
  31 String8          0   16    0 abc           00 r[16]='abc'
REG[16] =   t3[abc](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:19
  33 String8          0   18    0 CREATE TABLE abc(tx,z,PRIMARY KEY(z,z)) 00 r[18]='CREATE TABLE abc(tx,z,PRIMARY KEY(z,z))'
REG[18] =   t39[CREATE TABLE ab](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s57[06171313015B7461626C656162636162.....[tableabcab]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s57[06171313015B7461626C656162636162.....[tableabcab]
REG[13] =  i:19
  36 SetCookie        0    1   21               00 
  37 ParseSchema      0    0    0 tbl_name='abc' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   21 1             00 usesStmtJournal=0
  16 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t3[abc](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[e](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s1[e](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[i0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s3[t1b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[a1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[a4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[a4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[a4](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[b3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s2[b3](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s3[abc](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[abc](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:19
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s39[CREATE TABLE ab](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[abc](8)
REG[5] =  i:19
REG[6] =   s39[CREATE TABLE ab](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[abc](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[abc](8)
REG[1] =   s3[abc](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s22[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:20
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s22[sqlite_autoinde](8)
REG[5] =  i:20
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [;INSERT INTO abc VALUES(1,2),(3,4),(5,6);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1   21 1             01 usesStmtJournal=1
  31 Goto             0    1    0               00 
   1 InitCoroutine    4   13    2               00 
  13 OpenWrite        0   19    0 2             00 root=19 iDb=0; abc
  14 OpenWrite        1   20    0 k(3,,,)       00 root=20 iDb=0; sqlite_autoindex_abc_1
  15 Yield            4   29    0               00 
REG[4] =  i:1
REG[4] =  i:15
   2 Explain          2    0    0 SCAN 3 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 Yield            4    0    0               00 
REG[4] =  i:15
REG[4] =  i:5
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  17 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_abc_1
  18 SCopy            3    6    0               00 r[6]=r[3]; z
REG[6] =  i:2
  19 SCopy            3    7    0               00 r[7]=r[3]; z
REG[7] =  i:2
  20 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:1
  21 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for sqlite_autoindex_abc_1
REG[5] =  s6[040101090202......]
  22 Abortable        0    0    0               00 
  23 NoConflict       1   25    6 2             00 key=r[6..7]
REG[6] =  i:2
REG[7] =  i:2
  25 IdxInsert        1    5    6 3             10 key=r[5]
REG[5] =  s6[040101090202......]
  26 MakeRecord       2    2    9               00 r[9]=mkrec(r[2..3])
REG[9] =  s4[03090102....]
  27 Insert           0    9    1 abc           39 intkey=r[1] data=r[9]
REG[9] =  s4[03090102....]
REG[1] =  i:1
  28 Goto             0   15    0               00 
  15 Yield            4   29    0               00 
REG[4] =  i:5
REG[4] =  i:15
   6 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   7 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   8 Yield            4    0    0               00 
REG[4] =  i:15
REG[4] =  i:8
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  17 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_abc_1
  18 SCopy            3    6    0               00 r[6]=r[3]; z
REG[6] =  i:4
  19 SCopy            3    7    0               00 r[7]=r[3]; z
REG[7] =  i:4
  20 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:2
  21 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for sqlite_autoindex_abc_1
REG[5] =  s7[04010101040402.......]
  22 Abortable        0    0    0               00 
  23 NoConflict       1   25    6 2             00 key=r[6..7]
REG[6] =  i:4
REG[7] =  i:4
  25 IdxInsert        1    5    6 3             10 key=r[5]
REG[5] =  s7[04010101040402.......]
  26 MakeRecord       2    2    9               00 r[9]=mkrec(r[2..3])
REG[9] =  s5[0301010304.....]
  27 Insert           0    9    1 abc           39 intkey=r[1] data=r[9]
REG[9] =  s5[0301010304.....]
REG[1] =  i:2
  28 Goto             0   15    0               00 
  15 Yield            4   29    0               00 
REG[4] =  i:8
REG[4] =  i:15
   9 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
  10 Integer          6    3    0               00 r[3]=6
REG[3] =  i:6
  11 Yield            4    0    0               00 
REG[4] =  i:15
REG[4] =  i:11
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  17 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_abc_1
  18 SCopy            3    6    0               00 r[6]=r[3]; z
REG[6] =  i:6
  19 SCopy            3    7    0               00 r[7]=r[3]; z
REG[7] =  i:6
  20 IntCopy          1    8    0               00 r[8]=r[1]; rowid
REG[8] =  i:3
  21 MakeRecord       6    3    5               00 r[5]=mkrec(r[6..8]); for sqlite_autoindex_abc_1
REG[5] =  s7[04010101060603.......]
  22 Abortable        0    0    0               00 
  23 NoConflict       1   25    6 2             00 key=r[6..7]
REG[6] =  i:6
REG[7] =  i:6
  25 IdxInsert        1    5    6 3             10 key=r[5]
REG[5] =  s7[04010101060603.......]
  26 MakeRecord       2    2    9               00 r[9]=mkrec(r[2..3])
REG[9] =  s5[0301010506.....]
  27 Insert           0    9    1 abc           39 intkey=r[1] data=r[9]
REG[9] =  s5[0301010506.....]
REG[1] =  i:3
  28 Goto             0   15    0               00 
  15 Yield            4   29    0               00 
REG[4] =  i:11
REG[4] =  i:15
  12 EndCoroutine     4    0    0               00 
REG[4] =  i:15
  29 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fa17a0a9859 in __GI_abort () at abort.c:79
#2  0x00007fa17a0a9729 in __assert_fail_base (fmt=0x7fa17a23f588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=<optimized out>) at assert.c:92
#3  0x00007fa17a0bafd6 in __GI___assert_fail (assertion=0x2122b4 "pIn->nSdst==1 || pParse->nErr>0", file=0x22873d "sqlite3.c", line=127594, 
    function=0x213784 "int generateOutputSubroutine(Parse *, Select *, SelectDest *, SelectDest *, int, int, KeyInfo *, int)") at assert.c:101
#4  0x00000000003b5d8b in generateOutputSubroutine (pParse=0x7fff9b4bdfe0, p=0xda76f0, pIn=0x7fff9b4bc660, pDest=0x7fff9b4bcbb8, regReturn=15, regPrev=9, pKeyInfo=0xdb57f0, iBreak=-7) at sqlite3.c:127594
#5  0x00000000003b4e37 in multiSelectOrderBy (pParse=0x7fff9b4bdfe0, p=0xda76f0, pDest=0x7fff9b4bcbb8) at sqlite3.c:127921
#6  0x00000000003a3d1c in multiSelect (pParse=0x7fff9b4bdfe0, p=0xda76f0, pDest=0x7fff9b4bcbb8) at sqlite3.c:127207
#7  0x00000000002fccf5 in sqlite3Select (pParse=0x7fff9b4bdfe0, p=0xda76f0, pDest=0x7fff9b4bcbb8) at sqlite3.c:130384
#8  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7fff9b4bdfe0, pExpr=0xdb6600) at sqlite3.c:99820
#9  0x0000000000350b1c in exprCodeVector (pParse=0x7fff9b4bdfe0, p=0xdb6600, piFreeable=0x7fff9b4bcc7c) at sqlite3.c:100296
#10 0x000000000034fbdb in sqlite3ExprCodeIN (pParse=0x7fff9b4bdfe0, pExpr=0xda5ad0, destIfFalse=-3, destIfNull=-4) at sqlite3.c:99952
#11 0x000000000034be9e in sqlite3ExprCodeTarget (pParse=0x7fff9b4bdfe0, pExpr=0xda5ad0, target=1) at sqlite3.c:100792
#12 0x000000000034e9ee in sqlite3ExprCodeExprList (pParse=0x7fff9b4bdfe0, pList=0xdb0840, target=1, srcReg=0, flags=1 '\001') at sqlite3.c:101202
#13 0x00000000003addca in innerLoopLoadRow (pParse=0x7fff9b4bdfe0, pSelect=0xdaa5d0, pInfo=0x7fff9b4bd020) at sqlite3.c:125172
#14 0x00000000003a92ea in selectInnerLoop (pParse=0x7fff9b4bdfe0, p=0xdaa5d0, srcTab=-1, pSort=0x0, pDistinct=0x7fff9b4bd2c0, pDest=0x7fff9b4bd3d0, iContinue=-2, iBreak=-2) at sqlite3.c:125624
#15 0x00000000002fe191 in sqlite3Select (pParse=0x7fff9b4bdfe0, p=0xdaa5d0, pDest=0x7fff9b4bd3d0) at sqlite3.c:130743
#16 0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff9b4bd600, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff9b4bdfe0) at sqlite3.c:151581
#17 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff9b4bd600, yymajor=1, yyminor=...) at sqlite3.c:152877
#18 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff9b4bdfe0, 
    zSql=0xdaaf72 ";;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1 DESC) IN (SELECT 3,4)"..., pzErrMsg=0x7fff9b4be1c0) at sqlite3.c:154013
#19 0x00000000002a1683 in sqlite3Prepare (db=0xd942b0, 
    zSql=0xd9bcee ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SE"..., nBytes=927, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff9b4be2f8, pzTail=0x7fff9b4be2e0) at sqlite3.c:124303
#20 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0xd942b0, 
    zSql=0xd9bcee ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SE"..., nBytes=927, prepFlags=128, pOld=0x0, ppStmt=0x7fff9b4be2f8, pzTail=0x7fff9b4be2e0) at sqlite3.c:124403
#21 0x000000000029247f in sqlite3_prepare_v2 (db=0xd942b0, 
    zSql=0xd9bcee ";\n;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 3,4);;SELECT (SELECT 3,4 UNION SELECT 5,6 ORDER BY 1) IN (SELECT 5,6);;SELECT (SELECT 5,6 UNION SELECT 3,4 ORDER BY 1) IN (SELECT 5,6);;SE"..., nBytes=927, ppStmt=0x7fff9b4be2f8, pzTail=0x7fff9b4be2e0) at sqlite3.c:124487
#22 0x0000000000256bd0 in main (argc=1, argv=0x7fff9b4be4a8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54407] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
