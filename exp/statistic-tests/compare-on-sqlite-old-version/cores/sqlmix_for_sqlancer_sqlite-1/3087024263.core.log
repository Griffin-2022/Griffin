GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000398,sig:11,src:021290+018419,time:11538262,execs:3063915,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(x INTEGER);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  20 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t1(x INTEGER) 00 r[10]='CREATE TABLE t1(x INTEGER)'
REG[10] =   t26[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[0617111101417461626C657431743102.....Atablet1t1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[0617111101417461626C657431743102.....Atablet1t1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s26[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [PRAGMA table_info='t5'
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(1), (2), (3);]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    1    1 0             01 usesStmtJournal=0
  18 Goto             0    1    0               00 
   1 InitCoroutine    3   10    2               00 
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
  11 Yield            3   16    0               00 
REG[3] =  i:1
REG[3] =  i:11
   2 Explain          2    0    0 SCAN 3 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Yield            3    0    0               00 
REG[3] =  i:11
REG[3] =  i:4
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  13 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s2[0209..]
  14 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s2[0209..]
REG[1] =  i:1
  15 Goto             0   11    0               00 
  11 Yield            3   16    0               00 
REG[3] =  i:4
REG[3] =  i:11
   5 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   6 Yield            3    0    0               00 
REG[3] =  i:11
REG[3] =  i:6
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  13 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s3[020102...]
  14 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[020102...]
REG[1] =  i:2
  15 Goto             0   11    0               00 
  11 Yield            3   16    0               00 
REG[3] =  i:6
REG[3] =  i:11
   7 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
   8 Yield            3    0    0               00 
REG[3] =  i:11
REG[3] =  i:8
  12 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  13 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s3[020103...]
  14 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[020103...]
REG[1] =  i:3
  15 Goto             0   11    0               00 
  11 Yield            3   16    0               00 
REG[3] =  i:8
REG[3] =  i:11
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:11
  16 Halt             0    0    0               00 
SQL: [;
;SELECT randomblob(0) - 1;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
   7 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Function0        1    3    2 randomblob(1) 01 r[2]=func(r[3])
REG[3] =  i:0
REG[2] =  z1[62b]
   3 Subtract         4    2    1               00 r[1]=r[2]-r[4]
REG[4] =  i:1
REG[2] =  z1[62b]
REG[1] =  i:-1
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:-1
   5 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(4), (5);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    1 0             01 usesStmtJournal=0
  16 Goto             0    1    0               00 
   1 InitCoroutine    3    8    2               00 
   8 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   9 Yield            3   14    0               00 
REG[3] =  i:1
REG[3] =  i:9
   2 Explain          2    0    0 SCAN 2 CONSTANT ROWS 00 
   3 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
   4 Yield            3    0    0               00 
REG[3] =  i:9
REG[3] =  i:4
  10 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  11 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s3[020104...]
  12 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[020104...]
REG[1] =  i:4
  13 Goto             0    9    0               00 
   9 Yield            3   14    0               00 
REG[3] =  i:4
REG[3] =  i:9
   5 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   6 Yield            3    0    0               00 
REG[3] =  i:9
REG[3] =  i:6
  10 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  11 MakeRecord       2    1    4 D             00 r[4]=mkrec(r[2])
REG[4] =  s3[020105...]
  12 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[020105...]
REG[1] =  i:5
  13 Goto             0    9    0               00 
   9 Yield            3   14    0               00 
REG[3] =  i:6
REG[3] =  i:9
   7 EndCoroutine     3    0    0               00 
REG[3] =  i:9
  14 Halt             0    0    0               00 
SQL: [;SELECT (SELECT group_concat(x,'x') FROM t1) FROM t1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    1 0             01 usesStmtJournal=0
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   24    0               00 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             0   20    0               00 
   6 Explain          6    0    0 SCALAR SUBQUERY 1 00 
   7 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   8 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   9 Null             0    5    6               00 r[5..6]=NULL
REG[5] =  NULL
  10 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  11 Explain         11    6    0 SCAN TABLE t1 00 
  12 Rewind           1   17    0               00 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:1
  14 String8          0    8    0 x             00 r[8]='x'
REG[8] =   t1[x](8)
  15 AggStep          0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:1
REG[8] =   t1[x](8)
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:2
  14 String           1    8    0 x             00 r[8]='x' (len=1)
REG[8] =   t1[x](8)
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:2
REG[8] =   t1[x](8)
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:3
  14 String           1    8    0 x             00 r[8]='x' (len=1)
REG[8] =   t1[x](8)
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:3
REG[8] =   t1[x](8)
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:4
  14 String           1    8    0 x             00 r[8]='x' (len=1)
REG[8] =   t1[x](8)
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:4
REG[8] =   t1[x](8)
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:5
  14 String           1    8    0 x             00 r[8]='x' (len=1)
REG[8] =   t1[x](8)
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:5
REG[8] =   t1[x](8)
  16 Next             1   13    0               01 
  17 AggFinal         5    2    0 group_concat(2) 00 accum=r[5] N=2
  18 Copy             5    3    0               00 r[3]=r[5]
REG[3] =   s9[1x2x3x4x5](8)
  19 DecrJumpZero     4   20    0               00 if (--r[4])==0 goto 20
REG[4] =  i:1
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[1x2x3x4x5](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[1x2x3x4x5](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[1x2x3x4x5](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[1x2x3x4x5](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[1x2x3x4x5](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[1x2x3x4x5](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[1x2x3x4x5](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[1x2x3x4x5](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[1x2x3x4x5](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[1x2x3x4x5](8)
  23 Next             0    4    0               01 
  24 Halt             0    0    0               00 
SQL: [;
;SELECT
     (SELECT group_concat(x,'x') || '-' || group_concat(x,'y') FROM t1)
    FROM t1;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    0    1 0             01 usesStmtJournal=0
  31 String8          0   12    0 -             00 r[12]='-'
REG[12] =   t1[-](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   29    0               00 
   4 Integer         25    2    0               00 r[2]=25; return address
REG[2] =  i:25
   5 Once             0   25    0               00 
   6 Explain          6    0    0 SCALAR SUBQUERY 1 00 
   7 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   8 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   9 Null             0    5    7               00 r[5..7]=NULL
REG[5] =  NULL
  10 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  11 Explain         11    6    0 SCAN TABLE t1 00 
  12 Rewind           1   20    0               00 
  13 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:1
  14 String8          0    9    0 x             00 r[9]='x'
REG[9] =   t1[x](8)
  15 AggStep          0    8    5 group_concat(2) 02 accum=r[5] step(r[8..9])
REG[8] =  i:1
REG[9] =   t1[x](8)
  16 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:1
  17 String8          0    9    0 y             00 r[9]='y'
REG[9] =   t1[y](8)
  18 AggStep          0    8    6 group_concat(2) 02 accum=r[6] step(r[8..9])
REG[8] =  i:1
REG[9] =   t1[y](8)
  19 Next             1   13    0               01 
  13 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:2
  14 String           1    9    0 x             00 r[9]='x' (len=1)
REG[9] =   t1[x](8)
  15 AggStep1         0    8    5 group_concat(2) 02 accum=r[5] step(r[8..9])
REG[8] =  i:2
REG[9] =   t1[x](8)
  16 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:2
  17 String           1    9    0 y             00 r[9]='y' (len=1)
REG[9] =   t1[y](8)
  18 AggStep1         0    8    6 group_concat(2) 02 accum=r[6] step(r[8..9])
REG[8] =  i:2
REG[9] =   t1[y](8)
  19 Next             1   13    0               01 
  13 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:3
  14 String           1    9    0 x             00 r[9]='x' (len=1)
REG[9] =   t1[x](8)
  15 AggStep1         0    8    5 group_concat(2) 02 accum=r[5] step(r[8..9])
REG[8] =  i:3
REG[9] =   t1[x](8)
  16 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:3
  17 String           1    9    0 y             00 r[9]='y' (len=1)
REG[9] =   t1[y](8)
  18 AggStep1         0    8    6 group_concat(2) 02 accum=r[6] step(r[8..9])
REG[8] =  i:3
REG[9] =   t1[y](8)
  19 Next             1   13    0               01 
  13 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:4
  14 String           1    9    0 x             00 r[9]='x' (len=1)
REG[9] =   t1[x](8)
  15 AggStep1         0    8    5 group_concat(2) 02 accum=r[5] step(r[8..9])
REG[8] =  i:4
REG[9] =   t1[x](8)
  16 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:4
  17 String           1    9    0 y             00 r[9]='y' (len=1)
REG[9] =   t1[y](8)
  18 AggStep1         0    8    6 group_concat(2) 02 accum=r[6] step(r[8..9])
REG[8] =  i:4
REG[9] =   t1[y](8)
  19 Next             1   13    0               01 
  13 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:5
  14 String           1    9    0 x             00 r[9]='x' (len=1)
REG[9] =   t1[x](8)
  15 AggStep1         0    8    5 group_concat(2) 02 accum=r[5] step(r[8..9])
REG[8] =  i:5
REG[9] =   t1[x](8)
  16 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:5
  17 String           1    9    0 y             00 r[9]='y' (len=1)
REG[9] =   t1[y](8)
  18 AggStep1         0    8    6 group_concat(2) 02 accum=r[6] step(r[8..9])
REG[8] =  i:5
REG[9] =   t1[y](8)
  19 Next             1   13    0               01 
  20 AggFinal         5    2    0 group_concat(2) 00 accum=r[5] N=2
  21 AggFinal         6    2    0 group_concat(2) 00 accum=r[6] N=2
  22 Concat          12    5   10               00 r[10]=r[5]+r[12]
REG[12] =   t1[-](8)
REG[5] =   z9[1x2x3x4x5](8)
REG[10] =   s10[1x2x3x4x5-](8)
  23 Concat           6   10    3               00 r[3]=r[10]+r[6]
REG[6] =   z9[1y2y3y4y5](8)
REG[10] =   s10[1x2x3x4x5-](8)
REG[3] =   s19[1x2x3x4x5-1y2y3](8)
  24 DecrJumpZero     4   25    0               00 if (--r[4])==0 goto 25
REG[4] =  i:1
  25 Return           2    0    0               00 
REG[2] =  i:25
  26 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  27 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  28 Next             0    4    0               01 
   4 Integer         25    2    0               00 r[2]=25; return address
REG[2] =  i:25
   5 Once             1   25    0               00 
  25 Return           2    0    0               00 
REG[2] =  i:25
  26 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  27 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  28 Next             0    4    0               01 
   4 Integer         25    2    0               00 r[2]=25; return address
REG[2] =  i:25
   5 Once             1   25    0               00 
  25 Return           2    0    0               00 
REG[2] =  i:25
  26 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  27 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  28 Next             0    4    0               01 
   4 Integer         25    2    0               00 r[2]=25; return address
REG[2] =  i:25
   5 Once             1   25    0               00 
  25 Return           2    0    0               00 
REG[2] =  i:25
  26 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  27 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  28 Next             0    4    0               01 
   4 Integer         25    2    0               00 r[2]=25; return address
REG[2] =  i:25
   5 Once             1   25    0               00 
  25 Return           2    0    0               00 
REG[2] =  i:25
  26 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  27 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[1x2x3x4x5-1y2y3](8)
  28 Next             0    4    0               01 
  29 Halt             0    0    0               00 
SQL: [;
;SELECT (SELECT group_concat(x,x) FROM t1) FROM t1;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      0    0    1 0             01 usesStmtJournal=0
  26 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0   24    0               00 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             0   20    0               00 
   6 Explain          6    0    0 SCALAR SUBQUERY 1 00 
   7 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   8 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   9 Null             0    5    6               00 r[5..6]=NULL
REG[5] =  NULL
  10 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  11 Explain         11    6    0 SCAN TABLE t1 00 
  12 Rewind           1   17    0               00 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:1
  14 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:1
  15 AggStep          0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:1
REG[8] =  i:1
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:2
  14 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:2
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:2
REG[8] =  i:2
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:3
  14 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:3
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:3
REG[8] =  i:3
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:4
  14 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:4
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:4
REG[8] =  i:4
  16 Next             1   13    0               01 
  13 Column           1    0    7               00 r[7]=t1.x
REG[7] =  i:5
  14 Column           1    0    8               00 r[8]=t1.x
REG[8] =  i:5
  15 AggStep1         0    7    5 group_concat(2) 02 accum=r[5] step(r[7..8])
REG[7] =  i:5
REG[8] =  i:5
  16 Next             1   13    0               01 
  17 AggFinal         5    2    0 group_concat(2) 00 accum=r[5] N=2
  18 Copy             5    3    0               00 r[3]=r[5]
REG[3] =   s9[122334455](8)
  19 DecrJumpZero     4   20    0               00 if (--r[4])==0 goto 20
REG[4] =  i:1
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[122334455](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[122334455](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[122334455](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[122334455](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[122334455](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[122334455](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[122334455](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[122334455](8)
  23 Next             0    4    0               01 
   4 Integer         20    2    0               00 r[2]=20; return address
REG[2] =  i:20
   5 Once             1   20    0               00 
  20 Return           2    0    0               00 
REG[2] =  i:20
  21 Copy             3    1    0               00 r[1]=r[3]
REG[1] =   s9[122334455](8)
  22 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[122334455](8)
  23 Next             0    4    0               01 
  24 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE t2 (
      a       INTEGER PRIMARY KEY AUTOINCREMENT
    );]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    1 0             01 usesStmtJournal=0
  55 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t2 (
      a       INTEGER PRIMARY KEY AUTOINCREMENT
    ) 00 r[10]='CREATE TABLE t2 (
      a       INTEGER PRIMARY KEY AUTOINCREMENT
    )'
REG[10] =   t71[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s88[0717111101811B7461626C6574327432.......tablet2t2]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s88[0717111101811B7461626C6574327432.......tablet2t2]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ReadCookie       0   14    2               00 
REG[14] =  i:4
  27 If              14   30    0               00 
REG[14] =  i:4
  30 CreateBtree      0   13    1               00 r[13]=root iDb=0 flags=1
REG[13] =  i:4
  31 OpenWrite        0    1    0 5             00 root=1 iDb=0
  32 NewRowid         0   12    0               00 r[12]=rowid
REG[12] =  i:3
  33 Blob             6   14    0              00 r[14]= (len=6)
REG[14] =  t6[060000000000......]
  34 Insert           0   14   12               08 intkey=r[12] data=r[14]
REG[14] =  t6[060000000000......]
REG[12] =  i:3
  35 Close            0    0    0               00 
  36 Close            0    0    0               00 
  37 Null             0   15   16               00 r[15..16]=NULL
REG[15] =  NULL
  38 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  39 Explain         39    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  40 SeekRowid        2   42   12               00 intkey=r[12]
REG[12] =  i:3
  41 Rowid            2   16    0               00 r[16]=rowid
REG[16] =  i:3
  42 IsNull          16   50    0               00 if r[16]==NULL goto 50
REG[16] =  i:3
  43 String8          0   17    0 table         00 r[17]='table'
REG[17] =   t5[table](8)
  44 String8          0   18    0 sqlite_sequence 00 r[18]='sqlite_sequence'
REG[18] =   t15[sqlite_sequence](8)
  45 String8          0   19    0 sqlite_sequence 00 r[19]='sqlite_sequence'
REG[19] =   t15[sqlite_sequence](8)
  46 Copy            13   20    0               00 r[20]=r[13]
REG[20] =  i:4
  47 String8          0   21    0 CREATE TABLE sqlite_sequence(name,seq) 00 r[21]='CREATE TABLE sqlite_sequence(name,seq)'
REG[21] =   t38[CREATE TABLE sq](8)
  48 MakeRecord      17    5   22 BBBDB         00 r[22]=mkrec(r[17..21])
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit]
  49 Insert           2   22   16               00 intkey=r[16] data=r[22]
REG[22] =  s80[06172B2B01597461626C6573716C6974..++.Ytablesqlit]
REG[16] =  i:3
  50 SetCookie        0    1    2               00 
  51 ParseSchema      0    0    0 tbl_name='sqlite_sequence' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s15[sqlite_sequence](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s15[sqlite_sequence](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s38[CREATE TABLE sq](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s15[sqlite_sequence](8)
REG[5] =  i:4
REG[6] =   s38[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  52 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s71[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t2](8)
REG[5] =  i:3
REG[6] =   s71[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  53 Halt             0    0    0               00 
SQL: [;CREATE TABLE b (
      t1i1      INTEGER     PRIMARY KEY AUTOINCREMENT,
      t2i1    INTEGER     NOT NULL,
      c     INTEGER
    );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE b (
      t1i1      INTEGER     PRIMARY KEY AUTOINCREMENT,
      t2i1    INTEGER     NOT NULL,
      c     INTEGER
    ) 00 r[10]='CREATE TABLE b (
      t1i1      INTEGER     PRIMARY KEY AUTOINCREMENT,
      t2i1    INTEGE
REG[10] =   t133[CREATE TABLE b ](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s148[07170F0F0182177461626C6562620543.......tablebb.C]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s148[07170F0F0182177461626C6562620543.......tablebb.C]
REG[5] =  i:4
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s133[CREATE TABLE b ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:5
REG[6] =   s133[CREATE TABLE b ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE temptable (
      key      INTEGER PRIMARY KEY AUTOINCREMENT,
      value  INTEGER NOT NULL,
      donotread  INTEGER NOT NULL
    );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 temptable     00 r[7]='temptable'
REG[7] =   t9[temptable](8)
  20 String8          0    8    0 temptable     00 r[8]='temptable'
REG[8] =   t9[temptable](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE temptable (
      key      INTEGER PRIMARY KEY AUTOINCREMENT,
      value  INTEGER NOT NULL,
      donotread  INTEGER NOT NULL
    ) 00 r[10]='CREATE TABLE temptable (
      key      INTEGER PRIMARY KEY AUTOINCREMENT,
      value  INTE
REG[10] =   t145[CREATE TABLE te](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s176[07171F1F01822F7461626C6574656D70....../tabletemp]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s176[07171F1F01822F7461626C6574656D70....../tabletemp]
REG[5] =  i:5
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='temptable' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 temptable     00 r[2]='temptable'
REG[2] =   t9[temptable](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[temptable](8)
REG[1] =   s9[temptable](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[temptable](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s145[CREATE TABLE te](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[temptable](8)
REG[5] =  i:6
REG[6] =   s145[CREATE TABLE te](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;insert into b (t1i1, t1i1, t1i1)
    values (4469, 2, 2);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    4 0             01 usesStmtJournal=0
  24 OpenRead         0    4    0 2             00 root=4 iDb=0; sqlite_sequence
  25 String8          0    1    0 b             00 r[1]='b'
REG[1] =   t1[b](8)
  26 Null             0    2    4               00 r[2..4]=NULL
REG[2] =  NULL
  27 Rewind           0   36    0               00 
  36 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
  37 Close            0    0    0               00 
  38 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  39 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  40 Goto             0    1    0               00 
   1 OpenWrite        0    5    0 3             00 root=5 iDb=0; b
   2 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
   3 NotNull          5    5    0               00 if r[5]!=NULL goto 5
REG[5] =  i:2
   5 MustBeInt        5    0    0               00 
REG[5] =  i:2
   6 MemMax           2    5    0               00 r[2]=max(r[2],r[5])
REG[5] =  i:2
   7 SoftNull         6    0    0               00 r[6]=NULL
   8 HaltIfNull    1299    2    7 b.t2i1        01 if r[7]=null halt
REG[7] =  NULL
SQL: [;insert into t1 (x, x, x)
    values (0, 0, NULL);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    4 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   3 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   4 MakeRecord       2    1    3 D             00 r[3]=mkrec(r[2])
REG[3] =  s2[0208..]
   5 Insert           0    3    1 t1            39 intkey=r[1] data=r[3]
REG[3] =  s2[0208..]
REG[1] =  i:6
   6 Halt             0    0    0               00 
SQL: [;SELECT i.t2i1,
      (SELECT sum(CASE WHEN (t.x == i.t2i1) THEN 1 ELSE 0 END)
         FROM t1 t
      ) AS segfault
    FROM
     (SELECT curr.a as t2i1
        FROM t2 curr
          -- you also can comment out the next line
          -- it causes segfault to happen after one row is outputted
          INNER JOIN b a ON (curr.a = t2i1)
          LEFT JOIN t2 r ON (r.a <> 0 AND r.a < curr.a)
       GROUP BY curr.a
      HAVING r.a IS NULL
    ) i;]
VDBE Trace:
   0 Init             0   91    0               00 Start at 91
  91 Transaction      0    0    4 0             01 usesStmtJournal=0
  92 Goto             0    1    0               00 
   1 InitCoroutine    1   65    2               00 i
  65 Explain         65    0    0 SCAN SUBQUERY 2 AS i 00 
  66 InitCoroutine    1    0    2               00 
  67 Yield            1   90    0               00 next row of i
REG[1] =  i:1
REG[1] =  i:67
   2 Explain          2    0    0 CO-ROUTINE 2  00 
   3 Noop             5    2    0               00 
   4 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   61    0               00 
REG[7] =  i:6
  61 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  62 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  63 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         1    3    0 0             00 root=3 iDb=0; t2
   8 OpenRead         2    5    0 2             00 root=5 iDb=0; b
   9 OpenRead         3    3    0 0             00 root=3 iDb=0; t2
  10 Explain         10    2    0 SCAN TABLE t2 AS curr 00 
  11 Rewind           1   51    0               00 
  51 Gosub            6   55    0               00 output final row
REG[6] =  i:51
  55 IfPos            4   57    0               00 if r[4]>0 then r[4]-=0, goto 57; Groupby result generator entry point
REG[4] =  i:0
  56 Return           6    0    0               00 
REG[6] =  i:51
  52 Goto             0   64    0               00 
  64 EndCoroutine     1    0    0               00 
REG[1] =  i:67
  90 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t2;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    1    4 0             01 usesStmtJournal=1
  49 String8          0    3    0 t2            00 r[3]='t2'
REG[3] =   t2[t2](8)
  50 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  51 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   3 Explain          3    0    0 SCAN TABLE sqlite_sequence 00 
   4 Rewind           0   11    0               00 
  11 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t2](8)
REG[2] =   s2[t1](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t2](8)
REG[2] =   s2[t2](8)
  17 Column           1    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
REG[6] =   t7[trigger](8)
REG[2] =   s5[table](8)
  19 Rowid            1    7    0               00 r[7]=rowid
REG[7] =  i:2
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t2](8)
REG[2] =   s15[sqlite_sequence](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t2](8)
REG[2] =   s1[b](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[temptable](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t2](8)
REG[2] =   s9[temptable](8)
  22 Next             1   15    0               01 
  23 Destroy          3    2    0               00 
REG[2] =  i:0
  24 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  25 IfNot            2   34    1               00 
REG[2] =  i:0
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  45 DropTable        0    0    0 t2            00 
  46 SetCookie        0    1    5               00 
  47 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS b;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    1    5 0             01 usesStmtJournal=1
  49 String8          0    3    0 b             00 r[3]='b'
REG[3] =   t1[b](8)
  50 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  51 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   3 Explain          3    0    0 SCAN TABLE sqlite_sequence 00 
   4 Rewind           0   11    0               00 
  11 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t1[b](8)
REG[2] =   s2[t1](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t1[b](8)
REG[2] =   s15[sqlite_sequence](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s1[b](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t1[b](8)
REG[2] =   s1[b](8)
  17 Column           1    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
REG[6] =   t7[trigger](8)
REG[2] =   s5[table](8)
  19 Rowid            1    7    0               00 r[7]=rowid
REG[7] =  i:4
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[temptable](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t1[b](8)
REG[2] =   s9[temptable](8)
  22 Next             1   15    0               01 
  23 Destroy          5    2    0               00 
REG[2] =  i:0
  24 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  25 IfNot            2   34    1               00 
REG[2] =  i:0
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  45 DropTable        0    0    0 b             00 
  46 SetCookie        0    1    6               00 
  47 Halt             0    0    0               00 
SQL: [;CREATE TABLE t4 (
      t1b INTEGER PRIMARY KEY AUTOINCREMENT,
      name INTEGER
    );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    6 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  20 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t4 (
      t1b INTEGER PRIMARY KEY AUTOINCREMENT,
      name INTEGER
    ) 00 r[10]='CREATE TABLE t4 (
      t1b INTEGER PRIMARY KEY AUTOINCREMENT,
      name INTEGER
    )'
REG[10] =   t87[CREATE TABLE t4](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s104[0717111101813B7461626C6574347434......;tablet4t4]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s104[0717111101813B7461626C6574347434......;tablet4t4]
REG[5] =  i:6
  25 SetCookie        0    1    7               00 
  26 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    7 0             00 usesStmtJournal=0
  16 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[temptable](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s9[temptable](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t4](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s87[CREATE TABLE t4](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t4](8)
REG[5] =  i:5
REG[6] =   s87[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS t4;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    1    7 0             01 usesStmtJournal=1
  49 String8          0    3    0 t4            00 r[3]='t4'
REG[3] =   t2[t4](8)
  50 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  51 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   3 Explain          3    0    0 SCAN TABLE sqlite_sequence 00 
   4 Rewind           0   11    0               00 
  11 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t4](8)
REG[2] =   s2[t1](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t4](8)
REG[2] =   s15[sqlite_sequence](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[temptable](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t4](8)
REG[2] =   s9[temptable](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t4](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t2[t4](8)
REG[2] =   s2[t4](8)
  17 Column           1    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
REG[6] =   t7[trigger](8)
REG[2] =   s5[table](8)
  19 Rowid            1    7    0               00 r[7]=rowid
REG[7] =  i:6
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          5    2    0               00 
REG[2] =  i:0
  24 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  25 IfNot            2   34    1               00 
REG[2] =  i:0
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  45 DropTable        0    0    0 t4            00 
  46 SetCookie        0    1    8               00 
  47 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS temptable;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
  48 Transaction      0    1    8 0             01 usesStmtJournal=1
  49 String8          0    3    0 temptable     00 r[3]='temptable'
REG[3] =   t9[temptable](8)
  50 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  51 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   3 Explain          3    0    0 SCAN TABLE sqlite_sequence 00 
   4 Rewind           0   11    0               00 
  11 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  12 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  13 Explain         13    0    0 SCAN TABLE sqlite_master 00 
  14 Rewind           1   23    0               00 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t9[temptable](8)
REG[2] =   s2[t1](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t9[temptable](8)
REG[2] =   s15[sqlite_sequence](8)
  22 Next             1   15    0               01 
  15 Column           1    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s9[temptable](8)
  16 Ne               3   22    2 (BINARY)      52 if r[2]!=r[3] goto 22
REG[3] =   t9[temptable](8)
REG[2] =   s9[temptable](8)
  17 Column           1    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
  18 Eq               6   22    2 (BINARY)      52 if r[2]==r[6] goto 22
REG[6] =   t7[trigger](8)
REG[2] =   s5[table](8)
  19 Rowid            1    7    0               00 r[7]=rowid
REG[7] =  i:5
  20 Once             0   21    0               00 
  21 Delete           1    0    0               02 
  22 Next             1   15    0               01 
  23 Destroy          6    2    0               00 
REG[2] =  i:0
  24 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  25 IfNot            2   34    1               00 
REG[2] =  i:0
  34 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  35 RowSetRead       8   45    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  45 DropTable        0    0    0 temptable     00 
  46 SetCookie        0    1    9               00 
  47 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2 (
      b INTEGER,
      t1i1 INTEGER,
      a INTEGER
    );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t2[t2](8)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t2[t2](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  22 String8          0   10    0 CREATE TABLE t2 (
      b INTEGER,
      t1i1 INTEGER,
      a INTEGER
    ) 00 r[10]='CREATE TABLE t2 (
      b INTEGER,
      t1i1 INTEGER,
      a INTEGER
    )'
REG[10] =   t76[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s93[071711110181257461626C6574327432......%tablet2t2]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s93[071711110181257461626C6574327432......%tablet2t2]
REG[5] =  i:4
  25 SetCookie        0    1   10               00 
  26 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   10 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t2](8)
REG[1] =   s2[t2](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t2](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s76[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t2](8)
REG[5] =  i:5
REG[6] =   s76[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2 VALUES(4469,2,98),(4469,1,99),(4469,3,97);]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1   10 0             01 usesStmtJournal=0
  24 Goto             0    1    0               00 
   1 InitCoroutine    5   16    2               00 
  16 OpenWrite        0    5    0 3             00 root=5 iDb=0; t2
  17 Yield            5   22    0               00 
REG[5] =  i:1
REG[5] =  i:17
   2 Explain          2    0    0 SCAN 3 CONSTANT ROWS 00 
   3 Integer       4469    2    0               00 r[2]=4469
REG[2] =  i:4469
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 Integer         98    4    0               00 r[4]=98
REG[4] =  i:98
   6 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:6
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  19 MakeRecord       2    3    6 DDD           00 r[6]=mkrec(r[2..4])
REG[6] =  s8[0402010111750262.....u.b]
  20 Insert           0    6    1 t2            39 intkey=r[1] data=r[6]
REG[6] =  s8[0402010111750262.....u.b]
REG[1] =  i:1
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:6
REG[5] =  i:17
   7 Integer       4469    2    0               00 r[2]=4469
REG[2] =  i:4469
   8 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   9 Integer         99    4    0               00 r[4]=99
REG[4] =  i:99
  10 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:10
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  19 MakeRecord       2    3    6 DDD           00 r[6]=mkrec(r[2..4])
REG[6] =  s7[04020901117563.....uc]
  20 Insert           0    6    1 t2            39 intkey=r[1] data=r[6]
REG[6] =  s7[04020901117563.....uc]
REG[1] =  i:2
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:10
REG[5] =  i:17
  11 Integer       4469    2    0               00 r[2]=4469
REG[2] =  i:4469
  12 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  13 Integer         97    4    0               00 r[4]=97
REG[4] =  i:97
  14 Yield            5    0    0               00 
REG[5] =  i:17
REG[5] =  i:14
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  19 MakeRecord       2    3    6 DDD           00 r[6]=mkrec(r[2..4])
REG[6] =  s8[0402010111750361.....u.a]
  20 Insert           0    6    1 t2            39 intkey=r[1] data=r[6]
REG[6] =  s8[0402010111750361.....u.a]
REG[1] =  i:3
  21 Goto             0   17    0               00 
  17 Yield            5   22    0               00 
REG[5] =  i:14
REG[5] =  i:17
  15 EndCoroutine     5    0    0               00 
REG[5] =  i:17
  22 Halt             0    0    0               00 
SQL: [;SELECT
     (SELECT sum(x==xyz) FROM t1)
    FROM
     (SELECT x as xyz, max(x) AS pqr
        FROM t1
       GROUP BY x);]
VDBE Trace:
   0 Init             0   68    0               00 Start at 68
  68 Transaction      0    0   10 0             01 usesStmtJournal=0
  69 Goto             0    1    0               00 
   1 InitCoroutine    1   46    2               00 subquery_2
  46 Explain         46    0    0 SCAN SUBQUERY 2 00 
  47 InitCoroutine    1    0    2               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:1
REG[1] =  i:48
   2 Explain          2    0    0 CO-ROUTINE 2  00 
   3 SorterOpen       3    1    0 k(1,B)        00 
   4 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   42    0               00 
REG[7] =  i:6
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   8 Explain          8    2    0 SCAN TABLE t1 00 
   9 Rewind           1   15    0               00 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:1
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s2[0209..]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s2[0209..]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:2
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020102...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020102...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:3
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020103...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020103...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:4
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020104...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020104...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:5
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020105...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020105...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:0
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s2[0208..]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s2[0208..]
  14 Next             1   10    0               01 
  15 OpenPseudo       4   10    1               00 1 columns in r[10]
  16 SorterSort       3   45    0               00 GROUP BY sort
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:0
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:0
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:0
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:0
  37 Return           6    0    0               00 
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:0
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep          0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:0
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:0
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:1
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:0
REG[9] =  i:1
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:1
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:0
REG[14] =  i:0
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:0
REG[21] =  i:1
REG[20] =  i:0
  59 AggStep          0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:0
REG[21] =  i:2
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:0
REG[21] =  i:3
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:0
REG[21] =  i:4
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:0
REG[21] =  i:5
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:0
REG[21] =  i:0
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:1
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:1
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:1
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:1
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:1
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:2
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:1
REG[9] =  i:2
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:2
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:1
REG[14] =  i:1
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:1
REG[21] =  i:1
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:1
REG[21] =  i:2
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:1
REG[21] =  i:3
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:1
REG[21] =  i:4
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:1
REG[21] =  i:5
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:1
REG[21] =  i:0
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:1
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:1
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:2
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:2
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:2
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:3
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:2
REG[9] =  i:3
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:3
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:2
REG[14] =  i:2
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:2
REG[21] =  i:1
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:2
REG[21] =  i:2
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:2
REG[21] =  i:3
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:2
REG[21] =  i:4
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:2
REG[21] =  i:5
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:2
REG[21] =  i:0
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:1
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:1
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:3
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:3
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:3
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:4
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:3
REG[9] =  i:4
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:4
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:3
REG[14] =  i:3
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:3
REG[21] =  i:1
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:3
REG[21] =  i:2
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:3
REG[21] =  i:3
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:3
REG[21] =  i:4
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:3
REG[21] =  i:5
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:3
REG[21] =  i:0
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:1
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:1
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:4
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:4
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:4
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:5
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:5
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:4
REG[14] =  i:4
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:4
REG[21] =  i:1
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:4
REG[21] =  i:2
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:4
REG[21] =  i:3
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:4
REG[21] =  i:4
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:4
REG[21] =  i:5
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:4
REG[21] =  i:0
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:1
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:1
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:5
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:5
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:5
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  32 Gosub            6   36    0               00 output final row
REG[6] =  i:32
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:5
REG[14] =  i:5
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:5
REG[21] =  i:1
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:5
REG[21] =  i:2
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:5
REG[21] =  i:3
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:5
REG[21] =  i:4
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:5
REG[21] =  i:5
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Eq              22   20   21 (BINARY)      63 r[20] = (r[21]==r[22])
REG[22] =  i:5
REG[21] =  i:0
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:1
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:1
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:1
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:32
  33 Goto             0   45    0               00 
  45 EndCoroutine     1    0    0               00 
REG[1] =  i:48
  67 Halt             0    0    0               00 
SQL: [;SELECT
     (SELECT sum(x<>xyz) FROM t1)
    FROM
     (SELECT x as xyz, max(x) AS pqr
        FROM t1
       GROUP BY x);]
VDBE Trace:
   0 Init             0   68    0               00 Start at 68
  68 Transaction      0    0   10 0             01 usesStmtJournal=0
  69 Goto             0    1    0               00 
   1 InitCoroutine    1   46    2               00 subquery_2
  46 Explain         46    0    0 SCAN SUBQUERY 2 00 
  47 InitCoroutine    1    0    2               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:1
REG[1] =  i:48
   2 Explain          2    0    0 CO-ROUTINE 2  00 
   3 SorterOpen       3    1    0 k(1,B)        00 
   4 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   42    0               00 
REG[7] =  i:6
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
   8 Explain          8    2    0 SCAN TABLE t1 00 
   9 Rewind           1   15    0               00 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:1
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s2[0209..]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s2[0209..]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:2
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020102...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020102...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:3
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020103...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020103...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:4
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020104...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020104...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:5
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020105...]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s3[020105...]
  14 Next             1   10    0               01 
  10 Explain         10    2    0 USE TEMP B-TREE FOR GROUP BY 00 
  11 Column           1    0   10               00 r[10]=t1.x
REG[10] =  i:0
  12 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s2[0208..]
  13 SorterInsert     3   11    0               00 key=r[11]
REG[11] =  s2[0208..]
  14 Next             1   10    0               01 
  15 OpenPseudo       4   10    1               00 1 columns in r[10]
  16 SorterSort       3   45    0               00 GROUP BY sort
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:0
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:0
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:0
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:0
  37 Return           6    0    0               00 
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:0
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep          0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:0
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:0
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:1
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:0
REG[9] =  i:1
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:1
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:0
REG[14] =  i:0
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:0
REG[21] =  i:1
REG[20] =  i:1
  59 AggStep          0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:0
REG[21] =  i:2
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:0
REG[21] =  i:3
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:0
REG[21] =  i:4
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:0
REG[21] =  i:5
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:0
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:0
REG[21] =  i:0
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:5
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:5
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:1
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:1
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:1
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:2
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:1
REG[9] =  i:2
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:2
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:1
REG[14] =  i:1
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:1
REG[21] =  i:1
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:1
REG[21] =  i:2
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:1
REG[21] =  i:3
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:1
REG[21] =  i:4
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:1
REG[21] =  i:5
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:1
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:1
REG[21] =  i:0
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:5
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:5
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:2
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:2
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:2
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:3
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:2
REG[9] =  i:3
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:3
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:2
REG[14] =  i:2
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:2
REG[21] =  i:1
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:2
REG[21] =  i:2
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:2
REG[21] =  i:3
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:2
REG[21] =  i:4
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:2
REG[21] =  i:5
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:2
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:2
REG[21] =  i:0
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:5
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:5
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:3
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:3
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:3
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:4
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:3
REG[9] =  i:4
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:4
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:3
REG[14] =  i:3
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:3
REG[21] =  i:1
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:3
REG[21] =  i:2
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:3
REG[21] =  i:3
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:3
REG[21] =  i:4
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:3
REG[21] =  i:5
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:3
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:3
REG[21] =  i:0
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:5
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:5
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:4
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:4
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:4
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  17 SorterData       3   10    4               00 r[10]=data
  18 Column           4    0    9               00 r[9]=
REG[9] =  i:5
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:4
REG[9] =  i:5
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  22 Gosub            6   36    0               00 output one row
REG[6] =  i:22
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:4
REG[14] =  i:4
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:4
REG[21] =  i:1
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:4
REG[21] =  i:2
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:4
REG[21] =  i:3
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:4
REG[21] =  i:4
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:4
REG[21] =  i:5
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:4
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:4
REG[21] =  i:0
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:5
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:5
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   45    0               00 if r[5]>0 then r[5]-=0, goto 45; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  43 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
  44 Return           7    0    0               00 
REG[7] =  i:24
  25 Column           4    0   11               00 r[11]=
REG[11] =  i:5
  26 CollSeq         12    0    0 (BINARY)      00 
  27 AggStep1         0   11    3 max(1)        01 accum=r[3] step(r[11])
REG[11] =  i:5
  28 If              12   30    0               00 
REG[12] =  i:0
  29 Column           4    0    2               00 r[2]=
REG[2] =  i:5
  30 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  31 SorterNext       3   17    0               00 
  32 Gosub            6   36    0               00 output final row
REG[6] =  i:32
  36 IfPos            4   38    0               00 if r[4]>0 then r[4]-=0, goto 38; Groupby result generator entry point
REG[4] =  i:1
  38 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  39 Copy             2   13    1               00 r[13..14]=r[2..3]
REG[13] =  i:5
REG[14] =  i:5
  40 Yield            1    0    0               00 
REG[1] =  i:48
REG[1] =  i:40
  49 Explain         49    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  50 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  51 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  52 Null             0   18   19               00 r[18..19]=NULL
REG[18] =  NULL
  53 OpenRead         2    2    0 1             00 root=2 iDb=0; t1
  54 Explain         54   49    0 SCAN TABLE t1 00 
  55 Rewind           2   61    0               00 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:1
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:5
REG[21] =  i:1
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:2
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:5
REG[21] =  i:2
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:3
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:5
REG[21] =  i:3
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:4
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:5
REG[21] =  i:4
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:5
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:5
REG[21] =  i:5
REG[20] =  i:0
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:0
  60 Next             2   56    0               01 
  56 Column           2    0   21               00 r[21]=t1.x
REG[21] =  i:0
  57 Copy            13   22    0               00 r[22]=r[13]; subquery_2.xyz
REG[22] =  i:5
  58 Ne              22   20   21 (BINARY)      63 r[20] = (r[21]!=r[22])
REG[22] =  i:5
REG[21] =  i:0
REG[20] =  i:1
  59 AggStep1         0   20   18 sum(1)        01 accum=r[18] step(r[20])
REG[20] =  i:1
  60 Next             2   56    0               01 
  61 AggFinal        18    1    0 sum(1)        00 accum=r[18] N=1
  62 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:5
  63 DecrJumpZero    17   64    0               00 if (--r[17])==0 goto 64
REG[17] =  i:1
  64 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:5
  65 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:5
  66 Goto             0   48    0               00 
  48 Yield            1   67    0               00 next row of subquery_2
REG[1] =  i:40
REG[1] =  i:48
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:32
  33 Goto             0   45    0               00 
  45 EndCoroutine     1    0    0               00 
REG[1] =  i:48
  67 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS t1;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1   10 0             01 usesStmtJournal=1
  39 String8          0    3    0 t1            00 r[3]='t1'
REG[3] =   t2[t1](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t1](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t2[t1](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
  13 Destroy          2    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t1            00 
  36 SetCookie        0    1   11               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2i1(c, temptable);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   11 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2i1          00 r[7]='t2i1'
REG[7] =   t4[t2i1](8)
  20 String8          0    8    0 t2i1          00 r[8]='t2i1'
REG[8] =   t4[t2i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t2i1(c, temptable) 00 r[10]='CREATE TABLE t2i1(c, temptable)'
REG[10] =   t31[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s51[06171515014B7461626C657432693174.....Ktablet2i1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s51[06171515014B7461626C657432693174.....Ktablet2i1t]
REG[5] =  i:5
  25 SetCookie        0    1   12               00 
  26 ParseSchema      0    0    0 tbl_name='t2i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   12 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s31[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2i1](8)
REG[5] =  i:2
REG[6] =   s31[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE key (value);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   12 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  20 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE key (value) 00 r[10]='CREATE TABLE key (value)'
REG[10] =   t24[CREATE TABLE ke](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[06171313013D7461626C656B65796B65.....=tablekeyke]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[06171313013D7461626C656B65796B65.....=tablekeyke]
REG[5] =  i:6
  25 SetCookie        0    1   13               00 
  26 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   13 0             00 usesStmtJournal=0
  16 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[key](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s24[CREATE TABLE ke](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[key](8)
REG[5] =  i:6
REG[6] =   s24[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO key VALUES(1);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1   13 0             01 usesStmtJournal=0
   8 Goto             0    1    0               00 
   1 OpenWrite        0    6    0 1             00 root=6 iDb=0; key
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s2[0209..]
   5 Insert           0    3    1 key           39 intkey=r[1] data=r[3]
REG[3] =  s2[0209..]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;
;DROP TABLE IF EXISTS key;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1   13 0             01 usesStmtJournal=1
  39 String8          0    3    0 key           00 r[3]='key'
REG[3] =   t3[key](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[t2i1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s4[t2i1](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s3[key](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t3[key](8)
REG[2] =   s3[key](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:6
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          6    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 key           00 
  36 SetCookie        0    1   14               00 
  37 Halt             0    0    0               00 
SQL: [;DROP TABLE IF EXISTS t2i1;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1   14 0             01 usesStmtJournal=1
  39 String8          0    3    0 t2i1          00 r[3]='t2i1'
REG[3] =   t4[t2i1](8)
  40 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  41 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   13    0               00 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s15[sqlite_sequence](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t4[t2i1](8)
REG[2] =   s15[sqlite_sequence](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s2[t2](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t4[t2i1](8)
REG[2] =   s2[t2](8)
  12 Next             0    5    0               01 
   5 Column           0    2    2               00 r[2]=sqlite_master.tbl_name
REG[2] =   s4[t2i1](8)
   6 Ne               3   12    2 (BINARY)      52 if r[2]!=r[3] goto 12
REG[3] =   t4[t2i1](8)
REG[2] =   s4[t2i1](8)
   7 Column           0    0    2               00 r[2]=sqlite_master.type
REG[2] =   s5[table](8)
   8 Eq               4   12    2 (BINARY)      52 if r[2]==r[4] goto 12
REG[4] =   t7[trigger](8)
REG[2] =   s5[table](8)
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:5
  10 Once             0   11    0               00 
  11 Delete           0    0    0               02 
  12 Next             0    5    0               01 
  13 Destroy          2    2    0               00 
REG[2] =  i:0
  14 Null             0    6    7               00 r[6..7]=NULL
REG[6] =  NULL
  15 IfNot            2   24    1               00 
REG[2] =  i:0
  24 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  25 RowSetRead       6   35    7               00 r[7]=rowset(6)
REG[6] =  NULL
REG[7] =  NULL
  35 DropTable        0    0    0 t2i1          00 
  36 SetCookie        0    1   15               00 
  37 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2i1(c, temptable);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   15 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:5
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:5
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t2i1          00 r[7]='t2i1'
REG[7] =   t4[t2i1](8)
  20 String8          0    8    0 t2i1          00 r[8]='t2i1'
REG[8] =   t4[t2i1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t2i1(c, temptable) 00 r[10]='CREATE TABLE t2i1(c, temptable)'
REG[10] =   t31[CREATE TABLE t2](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s51[06171515014B7461626C657432693174.....Ktablet2i1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s51[06171515014B7461626C657432693174.....Ktablet2i1t]
REG[5] =  i:5
  25 SetCookie        0    1   16               00 
  26 ParseSchema      0    0    0 tbl_name='t2i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   16 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t2i1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s31[CREATE TABLE t2](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t2i1](8)
REG[5] =  i:2
REG[6] =   s31[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE key (value);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   16 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:6
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:6
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:6
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 key           00 r[7]='key'
REG[7] =   t3[key](8)
  20 String8          0    8    0 key           00 r[8]='key'
REG[8] =   t3[key](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:6
  22 String8          0   10    0 CREATE TABLE key (value) 00 r[10]='CREATE TABLE key (value)'
REG[10] =   t24[CREATE TABLE ke](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[06171313013D7461626C656B65796B65.....=tablekeyke]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[06171313013D7461626C656B65796B65.....=tablekeyke]
REG[5] =  i:6
  25 SetCookie        0    1   17               00 
  26 ParseSchema      0    0    0 tbl_name='key' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   17 0             00 usesStmtJournal=0
  16 String8          0    2    0 key           00 r[2]='key'
REG[2] =   t3[key](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[key](8)
REG[1] =   s3[key](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[key](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:6
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s24[CREATE TABLE ke](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[key](8)
REG[5] =  i:6
REG[6] =   s24[CREATE TABLE ke](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;
;SELECT max(a), (SELECT count(*) FROM t2i1 WHERE c=a)
      FROM t2
     GROUP BY b;]
VDBE Trace:
   0 Init             0   60    0               00 Start at 60
  60 Transaction      0    0   17 0             01 usesStmtJournal=0
  61 Goto             0    1    0               00 
   1 SorterOpen       2    2    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   4 Gosub            6   56    0               00 
REG[6] =  i:4
  56 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  57 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  58 Return           6    0    0               00 
REG[6] =  i:4
   5 OpenRead         0    5    0 3             00 root=5 iDb=0; t2
   6 Explain          6    0    0 SCAN TABLE t2 00 
   7 Rewind           0   14    0               00 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    0    9               00 r[9]=t2.b
REG[9] =  i:4469
  10 Column           0    2   10               00 r[10]=t2.a
REG[10] =  i:98
  11 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s6[030201117562....ub]
  12 SorterInsert     2   11    0               00 key=r[11]
REG[11] =  s6[030201117562....ub]
  13 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    0    9               00 r[9]=t2.b
REG[9] =  i:4469
  10 Column           0    2   10               00 r[10]=t2.a
REG[10] =  i:99
  11 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s6[030201117563....uc]
  12 SorterInsert     2   11    0               00 key=r[11]
REG[11] =  s6[030201117563....uc]
  13 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    0    9               00 r[9]=t2.b
REG[9] =  i:4469
  10 Column           0    2   10               00 r[10]=t2.a
REG[10] =  i:97
  11 MakeRecord       9    2   11               00 r[11]=mkrec(r[9..10])
REG[11] =  s6[030201117561....ua]
  12 SorterInsert     2   11    0               00 key=r[11]
REG[11] =  s6[030201117561....ua]
  13 Next             0    8    0               01 
  14 OpenPseudo       3   11    2               00 2 columns in r[11]
  15 SorterSort       2   59    0               00 GROUP BY sort
  16 SorterData       2   11    3               00 r[11]=data
  17 Column           3    0    8               00 r[8]=
REG[8] =  i:4469
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:4469
  19 Jump            20   24   20               00 
  20 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:4469
  21 Gosub            5   35    0               00 output one row
REG[5] =  i:21
  35 IfPos            3   37    0               00 if r[3]>0 then r[3]-=0, goto 37; Groupby result generator entry point
REG[3] =  i:0
  36 Return           5    0    0               00 
REG[5] =  i:21
  22 IfPos            4   59    0               00 if r[4]>0 then r[4]-=0, goto 59; check abort flag
REG[4] =  i:0
  23 Gosub            6   56    0               00 reset accumulator
REG[6] =  i:23
  56 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  57 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  58 Return           6    0    0               00 
REG[6] =  i:23
  24 Column           3    1   12               00 r[12]=
REG[12] =  i:98
  25 CollSeq         13    0    0 (BINARY)      00 
  26 AggStep          0   12    1 max(1)        01 accum=r[1] step(r[12])
REG[12] =  i:98
  27 If              13   29    0               00 
REG[13] =  i:0
  28 Column           3    1    2               00 r[2]=
REG[2] =  i:98
  29 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  30 SorterNext       2   16    0               00 
  16 SorterData       2   11    3               00 r[11]=data
  17 Column           3    0    8               00 r[8]=
REG[8] =  i:4469
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:4469
REG[8] =  i:4469
  19 Jump            20   24   20               00 
  24 Column           3    1   12               00 r[12]=
REG[12] =  i:99
  25 CollSeq         13    0    0 (BINARY)      00 
  26 AggStep1         0   12    1 max(1)        01 accum=r[1] step(r[12])
REG[12] =  i:99
  27 If              13   29    0               00 
REG[13] =  i:0
  28 Column           3    1    2               00 r[2]=
REG[2] =  i:99
  29 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  30 SorterNext       2   16    0               00 
  16 SorterData       2   11    3               00 r[11]=data
  17 Column           3    0    8               00 r[8]=
REG[8] =  i:4469
  18 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  i:4469
REG[8] =  i:4469
  19 Jump            20   24   20               00 
  24 Column           3    1   12               00 r[12]=
REG[12] =  i:97
  25 CollSeq         13    0    0 (BINARY)      00 
  26 AggStep1         0   12    1 max(1)        01 accum=r[1] step(r[12])
REG[12] =  i:97
  27 If              13   29    0               00 
REG[13] =  i:1
  29 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  30 SorterNext       2   16    0               00 
  31 Gosub            5   35    0               00 output final row
REG[5] =  i:31
  35 IfPos            3   37    0               00 if r[3]>0 then r[3]-=0, goto 37; Groupby result generator entry point
REG[3] =  i:1
  37 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  38 Copy             1   14    0               00 r[14]=r[1]
REG[14] =  i:99
  39 Explain         39    0    0 CORRELATED SCALAR SUBQUERY 1 00 
  40 Null             0   16   16               00 r[16..16]=NULL; Init subquery result
REG[16] =  NULL
  41 Integer          1   17    0               00 r[17]=1; LIMIT counter
REG[17] =  i:1
  42 Null             0   18   18               00 r[18..18]=NULL
REG[18] =  NULL
  43 OpenRead         1    2    0 1             00 root=2 iDb=0; t2i1
  44 Explain         44   39    0 SCAN TABLE t2i1 00 
  45 Rewind           1   50    0               00 
  50 AggFinal        18    0    0 count(0)      00 accum=r[18] N=0
  51 Copy            18   16    0               00 r[16]=r[18]
REG[16] =  i:0
  52 DecrJumpZero    17   53    0               00 if (--r[17])==0 goto 53
REG[17] =  i:1
  53 Copy            16   15    0               00 r[15]=r[16]
REG[15] =  i:0
  54 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  i:99
REG[15] =  i:0
  55 Return           5    0    0               00 end groupby result generator
REG[5] =  i:31
  32 Goto             0   59    0               00 
  59 Halt             0    0    0               00 
SQL: [;
;SELECT temptable, (SELECT sum(temptable=temptable) FROM t2i1)
      FROM t2i1
     WHERE temptable IN (SELECT max(temptable) FROM t2i1 GROUP BY temptable);]
VDBE Trace:
   0 Init             0   78    0               00 Start at 78
  78 Transaction      0    0   17 0             01 usesStmtJournal=0
  79 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t2i1
   2 Explain          2    0    0 SCAN TABLE t2i1 00 
   3 Rewind           0   77    0               00 
  77 Halt             0    0    0               00 
SQL: [;CREATE TABLE donotread(t4 INT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   17 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 donotread     00 r[7]='donotread'
REG[7] =   t9[donotread](8)
  20 String8          0    8    0 donotread     00 r[8]='donotread'
REG[8] =   t9[donotread](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE donotread(t4 INT) 00 r[10]='CREATE TABLE donotread(t4 INT)'
REG[10] =   t30[CREATE TABLE do](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s60[06171F1F01497461626C65646F6E6F74.....Itabledonot]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s60[06171F1F01497461626C65646F6E6F74.....Itabledonot]
REG[5] =  i:7
  25 SetCookie        0    1   18               00 
  26 ParseSchema      0    0    0 tbl_name='donotread' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   18 0             00 usesStmtJournal=0
  16 String8          0    2    0 donotread     00 r[2]='donotread'
REG[2] =   t9[donotread](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s3[key](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t9[donotread](8)
REG[1] =   s9[donotread](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s9[donotread](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s30[CREATE TABLE do](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s9[donotread](8)
REG[5] =  i:3
REG[6] =   s30[CREATE TABLE do](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1b(name INT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1   18 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t1b           00 r[7]='t1b'
REG[7] =   t3[t1b](8)
  20 String8          0    8    0 t1b           00 r[8]='t1b'
REG[8] =   t3[t1b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE t1b(name INT) 00 r[10]='CREATE TABLE t1b(name INT)'
REG[10] =   t26[CREATE TABLE t1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[0617131301417461626C657431627431.....Atablet1bt1]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[0617131301417461626C657431627431.....Atablet1bt1]
REG[5] =  i:8
  25 SetCookie        0    1   19               00 
  26 ParseSchema      0    0    0 tbl_name='t1b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0   19 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1b           00 r[2]='t1b'
REG[2] =   t3[t1b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s4[t2i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[key](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s3[key](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s9[donotread](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s9[donotread](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[t1b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t3[t1b](8)
REG[1] =   s3[t1b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s3[t1b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:7
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s3[t1b](8)
REG[5] =  i:7
REG[6] =   s26[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t2i1(temptable) VALUES(456);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1   19 0             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t2i1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer        456    3    0               00 r[3]=456
REG[3] =  i:456
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[03000201C8.....]
   5 Insert           0    4    1 t2i1          39 intkey=r[1] data=r[4]
REG[4] =  s5[03000201C8.....]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;SELECT (SELECT sum(b+(SELECT c)) FROM t2i1) FROM t2;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0   19 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    5    0 1             00 root=5 iDb=0; t2
   3 Explain          3    0    0 SCAN TABLE t2 00 
   4 Rewind           0   15    0               00 
   5 Column           0    0    4               00 r[4]=t2.b
REG[4] =  i:4469
   6 Explain          6    0    0 CORRELATED SCALAR SUBQUERY 1 00 
   7 Null             0    6    6               00 r[6..6]=NULL; Init subquery result
REG[6] =  NULL
   8 Integer          1    7    0               00 r[7]=1; LIMIT counter
REG[7] =  i:1
   9 Explain          9    6    0 SCAN CONSTANT ROW 00 
  10 Column           1    0    6               00 r[6]=t2i1.c

Program received signal SIGSEGV, Segmentation fault.
0x00000000003e1e8f in sqlite3VdbeCursorMoveto (pp=0x7ffcbf54e058, piCol=0x7ffcbf54dfe8) at sqlite3.c:79680
79680	  assert( p->eCurType==CURTYPE_BTREE || p->eCurType==CURTYPE_PSEUDO );
(gdb) #0  0x00000000003e1e8f in sqlite3VdbeCursorMoveto (pp=0x7ffcbf54e058, piCol=0x7ffcbf54dfe8) at sqlite3.c:79680
#1  0x00000000003c7ccb in sqlite3VdbeExec (p=0x13314d0) at sqlite3.c:86079
#2  0x0000000000411104 in sqlite3Step (p=0x13314d0) at sqlite3.c:81930
#3  0x000000000029128d in sqlite3_step (pStmt=0x13314d0) at sqlite3.c:81995
#4  0x00000000002570b9 in main (argc=1, argv=0x7ffcbf54e348) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54561] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
