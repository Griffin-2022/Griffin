GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000308,sig:06,src:021220+009390,time:7648698,execs:1704445,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES(12),(123),(1234),(NULL),('abc');]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    1    1 0             01 usesStmtJournal=0
  22 Goto             0    1    0               00 
   1 InitCoroutine    3   14    2               00 
  14 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
  15 Yield            3   20    0               00 
REG[3] =  i:1
REG[3] =  i:15
   2 Explain          2    0    0 SCAN 5 CONSTANT ROWS 00 
   3 Integer         12    2    0               00 r[2]=12
REG[2] =  i:12
   4 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:4
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[02010C...]
  18 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[02010C...]
REG[1] =  i:1
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:4
REG[3] =  i:15
   5 Integer        123    2    0               00 r[2]=123
REG[2] =  i:123
   6 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:6
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s3[02017B..{]
  18 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s3[02017B..{]
REG[1] =  i:2
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:6
REG[3] =  i:15
   7 Integer       1234    2    0               00 r[2]=1234
REG[2] =  i:1234
   8 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:8
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s4[020204D2....]
  18 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s4[020204D2....]
REG[1] =  i:3
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:8
REG[3] =  i:15
   9 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  10 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:10
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s2[0200..]
  18 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s2[0200..]
REG[1] =  i:4
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:10
REG[3] =  i:15
  11 String8          0    2    0 abc           00 r[2]='abc'
REG[2] =   t6[a.b.c.](16LE)
  12 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:12
  16 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  17 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  s8[0219610062006300..a.b.c.]
  18 Insert           0    4    1 t1            39 intkey=r[1] data=r[4]
REG[4] =  s8[0219610062006300..a.b.c.]
REG[1] =  i:5
  19 Goto             0   15    0               00 
  15 Yield            3   20    0               00 
REG[3] =  i:12
REG[3] =  i:15
  13 EndCoroutine     3    0    0               00 
REG[3] =  i:15
  20 Halt             0    0    0               00 
SQL: [SELECT '€'=CAST(x'80' AS text) AS x
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    2    0 €             00 r[2]='€'
REG[2] =   t2[..](16LE)
   6 Blob             1    3    0 €             00 r[3]=€ (len=1)
REG[3] =  t1[80.]
   7 Cast             3   66    0               00 affinity(r[3])
REG[3] =  t1[80.]
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Eq               3    1    2               62 r[1] = (r[2]==r[3])
REG[3] =   t1[.](16LE)
REG[2] =   t2[..](16LE)
REG[1] =  i:0
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 
SQL: [;CREATE TABLE t2(a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t10[t.a.b.l.e.](16LE)
  19 String8          0    7    0 t2            00 r[7]='t2'
REG[7] =   t4[t.2.](16LE)
  20 String8          0    8    0 t2            00 r[8]='t2'
REG[8] =   t4[t.2.](16LE)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t2(a) 00 r[10]='CREATE TABLE t2(a)'
REG[10] =   t36[C.R.E.A.T.E. .T](16LE)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s61[0621151501557400610062006C006500.!...Ut.a.b.l.e.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s61[0621151501557400610062006C006500.!...Ut.a.b.l.e.]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='t2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t4[t.2.](16LE)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t14[t.r.i.g.g.e.r.](16LE)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t.2.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.2.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t.2.](16LE)
REG[1] =   s4[t.2.](16LE)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[t.a.b.l.e.](16LE)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s10[t.a.b.l.e.](16LE)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t.2.](16LE)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s36[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t.2.](16LE)
REG[5] =  i:3
REG[6] =   s36[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE b(t1i1,t2i1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t10[t.a.b.l.e.](16LE)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t2[b.](16LE)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t2[b.](16LE)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE b(t1i1,t2i1) 00 r[10]='CREATE TABLE b(t1i1,t2i1)'
REG[10] =   t50[C.R.E.A.T.E. .T](16LE)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s71[0621111101717400610062006C006500.!...qt.a.b.l.e.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s71[0621111101717400610062006C006500.!...qt.a.b.l.e.]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t2[b.](16LE)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t14[t.r.i.g.g.e.r.](16LE)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.2.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b.](16LE)
REG[1] =   s4[t.2.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[b.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[b.](16LE)
REG[1] =   s2[b.](16LE)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s10[t.a.b.l.e.](16LE)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s10[t.a.b.l.e.](16LE)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[b.](16LE)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s50[C.R.E.A.T.E. .T](16LE)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[b.](16LE)
REG[5] =  i:4
REG[6] =   s50[C.R.E.A.T.E. .T](16LE)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE VIEW c AS SELECT a FROM t2 ORDER BY a;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    3 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:4
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:4
  18 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t8[v.i.e.w.](16LE)
  19 String8          0    7    0 c             00 r[7]='c'
REG[7] =   t2[c.](16LE)
  20 String8          0    8    0 c             00 r[8]='c'
REG[8] =   t2[c.](16LE)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIEW c AS SELECT a FROM t2 ORDER BY a 00 r[10]='CREATE VIEW c AS SELECT a FROM t2 ORDER BY a'
REG[10] =   t88[C.R.E.A.T.E. .V](16LE)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s107[071D111108813D760069006500770063......=v.i.e.w.c]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s107[071D111108813D760069006500770063......=v.i.e.w.c]
REG[5] =  i:4
  25 SetCookie        0    1    4               00 
  26 ParseSchema      0    0    0 tbl_name='c' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    4 0             00 usesStmtJournal=0
  16 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t2[c.](16LE)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t14[t.r.i.g.g.e.r.](16LE)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.1.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s4[t.1.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t.2.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s4[t.2.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[b.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s2[b.](16LE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c.](16LE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c.](16LE)
REG[1] =   s2[c.](16LE)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s8[v.i.e.w.](16LE)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t14[t.r.i.g.g.e.r.](16LE)
REG[1] =   s8[v.i.e.w.](16LE)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c.](16LE)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s88[C.R.E.A.T.E. .V](16LE)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c.](16LE)
REG[5] =  i:0
REG[6] =   s88[C.R.E.A.T.E. .V](16LE)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f0682e23859 in __GI_abort () at abort.c:79
#2  0x00007f0682e23729 in __assert_fail_base (fmt=0x7f0682fb9588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x22d2a4 "pItem->u.x.iOrderByCol>0", file=0x22873d "sqlite3.c", line=127795, function=<optimized out>)
    at assert.c:92
#3  0x00007f0682e34fd6 in __GI___assert_fail (assertion=0x22d2a4 "pItem->u.x.iOrderByCol>0", file=0x22873d "sqlite3.c", line=127795, function=0x214d7e "int multiSelectOrderBy(Parse *, Select *, SelectDest *)")
    at assert.c:101
#4  0x00000000003b4353 in multiSelectOrderBy (pParse=0x7fff01eec610, p=0x2666c50, pDest=0x7fff01eeaea8) at sqlite3.c:127795
#5  0x00000000003a3d1c in multiSelect (pParse=0x7fff01eec610, p=0x2666c50, pDest=0x7fff01eeaea8) at sqlite3.c:127207
#6  0x00000000002fccf5 in sqlite3Select (pParse=0x7fff01eec610, p=0x2666c50, pDest=0x7fff01eeaea8) at sqlite3.c:130384
#7  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7fff01eec610, pExpr=0x2661ca0) at sqlite3.c:99820
#8  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7fff01eec610, pExpr=0x2661ca0, target=10) at sqlite3.c:100770
#9  0x00000000003790ab in codeEqualityTerm (pParse=0x7fff01eec610, pTerm=0x2662690, pLevel=0x26629f0, iEq=0, bRev=0, iTarget=10) at sqlite3.c:136648
#10 0x000000000037a706 in codeAllEqualityTerms (pParse=0x7fff01eec610, pLevel=0x26629f0, bRev=0, nExtraReg=0, pzAff=0x7fff01eeb428) at sqlite3.c:136869
#11 0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7fff01eec610, v=0x26638c0, pWInfo=0x2662600, iLevel=1, pLevel=0x26629f0, notReady=18446744073709551613) at sqlite3.c:137776
#12 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7fff01eec610, pTabList=0x26646d0, pWhere=0x26609e0, pOrderBy=0x0, pResultSet=0x265e910, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#13 0x00000000002fdcea in sqlite3Select (pParse=0x7fff01eec610, p=0x265ccf0, pDest=0x7fff01eeba00) at sqlite3.c:130695
#14 0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff01eebc30, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff01eec610) at sqlite3.c:151581
#15 0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff01eebc30, yymajor=1, yyminor=...) at sqlite3.c:152877
#16 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff01eec610, 
    zSql=0x265fc20 ";;\n;CREATE TABLE temptable(key);;CREATE VIEW value(d) AS SELECT x FROM t1 ORDER BY x;;SELECT sum(d) OVER( PARTITION BY(SELECT 0 FROM value JOIN t2 WHERE a =(SELECT a INTERSECT SELECT d FROM value) AND"..., pzErrMsg=0x7fff01eec7f0) at sqlite3.c:154013
#17 0x00000000002a1683 in sqlite3Prepare (db=0x264ace0, 
    zSql=0x264aa06 ";\n;SELECT * FROM t2, t1 WHERE a=(SELECT 123 INTERSECT SELECT x FROM c) AND a=123;;\n;CREATE TABLE temptable(key);;CREATE VIEW value(d) AS SELECT x FROM t1 ORDER BY x;;SELECT sum(d) OVER( PARTITION BY(S"..., nBytes=302, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff01eec928, pzTail=0x7fff01eec910) at sqlite3.c:124303
#18 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x264ace0, 
    zSql=0x264aa06 ";\n;SELECT * FROM t2, t1 WHERE a=(SELECT 123 INTERSECT SELECT x FROM c) AND a=123;;\n;CREATE TABLE temptable(key);;CREATE VIEW value(d) AS SELECT x FROM t1 ORDER BY x;;SELECT sum(d) OVER( PARTITION BY(S"..., nBytes=302, prepFlags=128, pOld=0x0, ppStmt=0x7fff01eec928, pzTail=0x7fff01eec910) at sqlite3.c:124403
#19 0x000000000029247f in sqlite3_prepare_v2 (db=0x264ace0, 
    zSql=0x264aa06 ";\n;SELECT * FROM t2, t1 WHERE a=(SELECT 123 INTERSECT SELECT x FROM c) AND a=123;;\n;CREATE TABLE temptable(key);;CREATE VIEW value(d) AS SELECT x FROM t1 ORDER BY x;;SELECT sum(d) OVER( PARTITION BY(S"..., nBytes=302, ppStmt=0x7fff01eec928, pzTail=0x7fff01eec910) at sqlite3.c:124487
#20 0x0000000000256bd0 in main (argc=1, argv=0x7fff01eecad8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53864] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
