GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000131,sig:06,src:017296+014606,time:37750633,execs:8609044,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [CREATE VIRTUAL TABLE b USING fts4;]
VDBE Program Listing:
   0 Init             0   31    0               00 Start at 31
   1 VBegin           0    0    0               00 
   2 ReadCookie       0    3    2               00 
   3 If               3    6    0               00 
   4 SetCookie        0    2    4               00 
   5 SetCookie        0    5    1               00 
   6 Integer          0    2    0               00 r[2]=0
   7 OpenWrite        0    1    0 5             00 root=1 iDb=0
   8 NewRowid         0    1    0               00 r[1]=rowid
   9 Blob             6    3    0              00 r[3]= (len=6)
  10 Insert           0    3    1               08 intkey=r[1] data=r[3]
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
  16 Rowid            1    5    0               00 r[5]=rowid
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
  18 String8          0    6    0 table         00 r[6]='table'
  19 String8          0    7    0 b             00 r[7]='b'
  20 String8          0    8    0 b             00 r[8]='b'
  21 Integer          0    9    0               00 r[9]=0
  22 String8          0   10    0 CREATE VIRTUAL TABLE b USING fts4 00 r[10]='CREATE VIRTUAL TABLE b USING fts4'
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
  25 SetCookie        0    1    2               00 
  26 Expire           0    0    0               00 
  27 ParseSchema      0    0    0 name='b' AND type='table' 00 
  28 String8          0   12    0 b             00 r[12]='b'
  29 VCreate          0   12    0               00 
  30 Halt             0    0    0               00 
  31 Transaction      0    1    1 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
  17 String8          0    3    0 table         00 r[3]='table'
  18 Goto             0    1    0               00 
SQL: [;
PRAGMA page_size = 1024;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [ATTACH 'test.db' as db2;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test.db       00 r[1]='test.db'
   2 String8          0    2    0 db2           00 r[2]='db2'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      0    0    1 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      2    0    5 0             00 usesStmtJournal=0
  12 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  13 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   10    0               00 Start at 10
   1 OpenRead         0    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
   7 ResultRow        1    3    0               00 output=r[1..3]
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
  10 Transaction      2    0    5 0             00 usesStmtJournal=0
  11 TableLock        2    2    0 sqlite_stat1  00 iDb=2 root=2 write=0
  12 Goto             0    1    0               00 
SQL: [PRAGMA auto_vacuum = 0;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [;
ATTACH ':memory:' as aux3;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 :memory:      00 r[1]=':memory:'
   2 String8          0    2    0 aux3          00 r[2]='aux3'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   11    0               00 Start at 11
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
  11 Transaction      3    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
SQL: [SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='b' AND type!='trigger' ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    1 1             01 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
   7 Column           0    0    1               00 r[1]=sqlite_master.type
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
   9 Column           0    1    4               00 r[4]=sqlite_master.name
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
  12 ResultRow        4    3    0               00 output=r[4..6]
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  15 Transaction      0    0    1 1             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
  17 String8          0    3    0 trigger       00 r[3]='trigger'
  18 Goto             0    1    0               00 
SQL: [PRAGMA journal_mode = off ;]
VDBE Program Listing:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      3    1    2               00 
   2 JournalMode      2    1    2               00 
   3 JournalMode      0    1    2               00 
   4 ResultRow        1    1    0               00 output=r[1]
   5 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f282c0c6859 in __GI_abort () at abort.c:79
#2  0x00007f282c0c6729 in __assert_fail_base (fmt=0x7f282c25c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b03a "p->journalMode!=PAGER_JOURNALMODE_OFF || !isOpen(p->jfd)", file=0x22873d "sqlite3.c", 
    line=51476, function=<optimized out>) at assert.c:92
#3  0x00007f282c0d7fd6 in __GI___assert_fail (assertion=0x21b03a "p->journalMode!=PAGER_JOURNALMODE_OFF || !isOpen(p->jfd)", file=0x22873d "sqlite3.c", line=51476, function=0x20d272 "int assert_pager_state(Pager *)")
    at assert.c:101
#4  0x00000000002b12ea in assert_pager_state (p=0x23ffad0) at sqlite3.c:51476
#5  0x00000000002bf529 in pager_end_transaction (pPager=0x23ffad0, hasMaster=0, bCommit=0) at sqlite3.c:52631
#6  0x00000000002c2f59 in pager_playback (pPager=0x23ffad0, isHot=1) at sqlite3.c:53572
#7  0x00000000002e4caf in sqlite3PagerSharedLock (pPager=0x23ffad0) at sqlite3.c:55863
#8  0x00000000002e2708 in lockBtree (pBt=0x23fa940) at sqlite3.c:66249
#9  0x00000000002e10e9 in sqlite3BtreeBeginTrans (p=0x23d79c0, wrflag=0, pSchemaVersion=0x0) at sqlite3.c:66624
#10 0x00000000003ed0bc in sqlite3BtreeSetVersion (pBtree=0x23d79c0, iVersion=1) at sqlite3.c:73559
#11 0x00000000003dc86f in sqlite3VdbeExec (p=0x23f50a0) at sqlite3.c:90272
#12 0x0000000000411104 in sqlite3Step (p=0x23f50a0) at sqlite3.c:81930
#13 0x000000000029128d in sqlite3_step (pStmt=0x23f50a0) at sqlite3.c:81995
#14 0x00000000002570b9 in main (argc=1, argv=0x7fff110a7b58) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 5488] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
