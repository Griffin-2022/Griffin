GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000135,sig:06,src:020172+016020,time:40892570,execs:9409339,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA main.locking_mode;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 exclusive     00 r[1]='exclusive'
REG[1] =   t9[exclusive](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t9[exclusive](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a UNIQUE);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    0 0             01 usesStmtJournal=0
  40 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Noop             0   22    0               00 
  12 CreateBtree      0    4    2               00 r[4]=root iDb=0 flags=2
REG[4] =  i:3
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:2
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_t1_1 00 r[7]='sqlite_autoindex_t1_1'
REG[7] =   t21[sqlite_autoinde](8)
  17 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:3
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s35[061737110100696E64657873716C6974..7...indexsqlit]
REG[5] =  i:2
  22 Close            0    0    0               00 
  23 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  24 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  25 Explain         25    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  26 SeekRowid        2   28    1               00 intkey=r[1]
REG[1] =  i:1
  27 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  28 IsNull          13   36    0               00 if r[13]==NULL goto 36
REG[13] =  i:1
  29 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  30 String8          0   15    0 t1            00 r[15]='t1'
REG[15] =   t2[t1](8)
  31 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  32 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  33 String8          0   18    0 CREATE TABLE t1(a UNIQUE) 00 r[18]='CREATE TABLE t1(a UNIQUE)'
REG[18] =   t25[CREATE TABLE t1](8)
  34 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s41[06171111013F7461626C657431743102.....?tablet1t1.]
  35 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s41[06171111013F7461626C657431743102.....?tablet1t1.]
REG[13] =  i:1
  36 SetCookie        0    1    1               00 
  37 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s25[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:3
REG[6] =  NULL
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [pragma page_count;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    1 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Pagecount        0    3    0               00 
REG[3] =  i:3
   2 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:3
   3 Halt             0    0    0               00 
SQL: [;
SELECT a>a FROM t1;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   2 Explain          2    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
SQL: [;
VACUUM main INTO (SELECT a FROM t1);]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 Goto             0    1    0               00 
   1 Integer         12    2    0               00 r[2]=12; return address
REG[2] =  i:12
   2 Once             0   12    0               00 
   3 Explain          3    0    0 SCALAR SUBQUERY 1 00 
   4 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   5 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   6 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   7 Explain          7    3    0 SCAN TABLE t1 00 
   8 Rewind           0   12    0               00 
  12 Return           2    0    0               00 
REG[2] =  i:12
  13 SCopy            3    1    0               00 r[1]=r[3]
REG[1] =  NULL
  14 Vacuum           0    1    0               00 
SQL: [PRAGMA page_count;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    1 0             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Pagecount        0    3    0               00 
REG[3] =  i:3
   2 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:3
   3 Halt             0    0    0               00 
SQL: [;
CREATE TABLE b(x,t0st);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE b(x,t0st) 00 r[10]='CREATE TABLE b(x,t0st)'
REG[10] =   t22[CREATE TABLE b(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[06170F0F01397461626C656262044352.....9tablebb.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[06170F0F01397461626C656262044352.....9tablebb.CR]
REG[5] =  i:3
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:4
REG[6] =   s22[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX t0st_content ON t1(a, a) ;]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    2 0             01 usesStmtJournal=1
  39 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:5
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t0st_content  00 r[4]='t0st_content'
REG[4] =   t12[t0st_content](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
   9 String8          0    7    0 CREATE UNIQUE INDEX t0st_content ON t1(a, a)  00 r[7]='CREATE UNIQUE INDEX t0st_content ON t1(a, a) '
REG[7] =   t45[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s71[061725110167696E646578743073745F..%..gindext0st_]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s71[061725110167696E646578743073745F..%..gindext0st_]
REG[2] =  i:4
  12 SorterOpen       3    0    2 k(3,,,)       00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; t1
  14 Rewind           1   21    0               00 
  21 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  22 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        0    1    3               00 
  35 ParseSchema      0    0    0 name='t0st_content' AND type='index' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0st_content  00 r[2]='t0st_content'
REG[2] =   t12[t0st_content](8)
  17 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s21[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[t0st_content](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[t0st_content](8)
REG[1] =   s12[t0st_content](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s12[t0st_content](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s45[CREATE UNIQUE I](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s12[t0st_content](8)
REG[5] =  i:5
REG[6] =   s45[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  36 Expire           0    1    0               00 
  37 Halt             0    0    0               00 
SQL: [INSERT INTO t1 VALUES(randomblob(400));]
VDBE Trace:
   0 Init             0   26    0               00 Start at 26
  26 Transaction      0    1    3 0             01 usesStmtJournal=0
  27 Integer        400   10    0               00 r[10]=400
REG[10] =  i:400
  28 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
   2 OpenWrite        1    5    0 k(3,,,)       00 root=5 iDb=0; t0st_content
   3 OpenWrite        2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Function0        1   10    2 randomblob(1) 01 r[2]=func(r[10])
REG[10] =  i:400
REG[2] =  z400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
   6 Noop             0    0    0               00 uniqueness check for t0st_content
   7 SCopy            2    4    0               00 r[4]=r[2]; a
REG[4] =  e400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
   8 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  e400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
   9 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:1
  10 MakeRecord       4    3    3               00 r[3]=mkrec(r[4..6]); for t0st_content
REG[3] =  s806[06862C862C0983DD58103ABF934AB062..,.,...X.:..J.b]
  11 Abortable        0    0    0               00 
  12 NoConflict       1   14    4 2             00 key=r[4..5]
REG[4] =  e400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
REG[5] =  e400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
  14 Noop             0    0    0               00 uniqueness check for sqlite_autoindex_t1_1
  15 SCopy            2    8    0               00 r[8]=r[2]; a
REG[8] =  e400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
  16 IntCopy          1    9    0               00 r[9]=r[1]; rowid
REG[9] =  i:1
  17 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t1_1
REG[7] =  s404[04862C0983DD58103ABF934AB062DFBF..,...X.:..J.b..]
  18 Abortable        0    0    0               00 
  19 NoConflict       2   21    8 1             00 key=r[8]
REG[8] =  e400[83DD58103ABF934AB062DFBF42A2FE56..X.:..J.b..B..V]
  21 IdxInsert        1    3    4 3             10 key=r[3]
REG[3] =  s806[06862C862C0983DD58103ABF934AB062..,.,...X.:..J.b]
  22 IdxInsert        2    7    8 2             10 key=r[7]
REG[7] =  s404[04862C0983DD58103ABF934AB062DFBF..,...X.:..J.b..]
  23 MakeRecord       2    1   11               00 r[11]=mkrec(r[2])
REG[11] =  s403[03862C83DD58103ABF934AB062DFBF42..,..X.:..J.b..B]
  24 Insert           0   11    1 t1            39 intkey=r[1] data=r[11]
REG[11] =  s403[03862C83DD58103ABF934AB062DFBF42..,..X.:..J.b..B]
REG[1] =  i:1
  25 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='b' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:4
REG[6] =   s22[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT a, (SELECT a FROM t1 WHERE a=a) FROM t1 WHERE a<8
  ;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    3 0             01 usesStmtJournal=0
  28 Goto             0    1    0               00 
   1 OpenRead         2    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
   2 Explain          2    0    0 SEARCH TABLE t1 USING COVERING INDEX sqlite_autoindex_t1_1 (a<?) 00 
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 SeekGT           2   26    1 1             00 key=r[1]
REG[1] =  NULL
   5 Integer          8    1    0               00 r[1]=8
REG[1] =  i:8
   6 IdxGE            2   26    1 1             00 key=r[1]
REG[1] =  i:8
  26 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s25[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s25[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE b(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  i:4
REG[3] =   s22[CREATE TABLE b(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[t0st_content](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s45[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[t0st_content](8)
REG[2] =  i:5
REG[3] =   s45[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='b' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:4
REG[6] =   s22[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s25[CREATE TABLE t1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t1](8)
REG[5] =  i:2
REG[6] =   s25[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s21[sqlite_autoinde](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =  NULL
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s21[sqlite_autoinde](8)
REG[5] =  i:3
REG[6] =  NULL
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[index](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s12[t0st_content](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:5
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s45[CREATE UNIQUE I](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s12[t0st_content](8)
REG[5] =  i:5
REG[6] =   s45[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='b' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s22[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:4
REG[6] =   s22[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
SQL: [SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    0 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
SQL: [;;
INSERT INTO b VALUES(15, '2002-1');]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    1    3 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; b
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer         15    2    0               00 r[2]=15
REG[2] =  i:15
   4 String8          0    3    0 2002-1        00 r[3]='2002-1'
REG[3] =   t6[2002-1](8)
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s10[0301190F323030322D31....2002-1]
   6 Insert           0    4    1 b             39 intkey=r[1] data=r[4]
REG[4] =  s10[0301190F323030322D31....2002-1]
REG[1] =  i:1
   7 Halt             0    0    0               00 
SQL: [;
SELECT (SELECT 10);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Integer         10    2    0               00 r[2]=10; return address
REG[2] =  i:10
   3 Once             0   10    0               00 
   4 Explain          4    0    0 SCALAR SUBQUERY 1 00 
   5 Null             0    3    3               00 r[3..3]=NULL; Init subquery result
REG[3] =  NULL
   6 Integer          1    4    0               00 r[4]=1; LIMIT counter
REG[4] =  i:1
   7 Explain          7    4    0 SCAN CONSTANT ROW 00 
   8 Integer         10    3    0               00 r[3]=10
REG[3] =  i:10
   9 DecrJumpZero     4   10    0               00 if (--r[4])==0 goto 10
REG[4] =  i:1
  10 Return           2    0    0               00 
REG[2] =  i:10
  11 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:10
  12 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:10
  13 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='x' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             01 usesStmtJournal=0
  16 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
SQL: [;
SELECT max((SELECT count() FROM b)) FROM b;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    3 0             01 usesStmtJournal=0
  25 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; b
   3 Explain          3    0    0 SEARCH TABLE b 00 
   4 Rewind           0   20    0               00 
   5 Integer         15    3    0               00 r[3]=15; return address
REG[3] =  i:15
   6 Once             0   15    0               00 
   7 Explain          7    0    0 SCALAR SUBQUERY 1 00 
   8 Null             0    4    4               00 r[4..4]=NULL; Init subquery result
REG[4] =  NULL
   9 Integer          1    5    0               00 r[5]=1; LIMIT counter
REG[5] =  i:1
  10 OpenRead         2    4    0 1             00 root=4 iDb=0
  11 Count            2    6    0               00 r[6]=count()
REG[6] =  i:1
  12 Close            2    0    0               00 
  13 Copy             6    4    0               00 r[4]=r[6]
REG[4] =  i:1
  14 DecrJumpZero     5   15    0               00 if (--r[5])==0 goto 15
REG[5] =  i:1
  15 Return           3    0    0               00 
REG[3] =  i:15
  16 Copy             4    2    0               00 r[2]=r[4]
REG[2] =  i:1
  17 CollSeq          0    0    0 (BINARY)      00 
  18 AggStep          0    2    1 max(1)        01 accum=r[1] step(r[2])
REG[2] =  i:1
  19 Next             0    5    0               01 
  20 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  21 Copy             1    7    0               00 r[7]=r[1]
REG[7] =  i:1
  22 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:1
  23 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f113faa0859 in __GI_abort () at abort.c:79
#2  0x00007f113faa0729 in __assert_fail_base (fmt=0x7f113fc36588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007f113fab1fd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffed43ec390, p=0xbdd210, pDest=0x7ffed43eac28) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffed43ec390, pExpr=0xbdcd60) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffed43ec390, pExpr=0xbdcd60, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffed43ec390, pTerm=0xbd66d0, pLevel=0xbd6a30, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffed43ec390, pLevel=0xbd6a30, bRev=0, nExtraReg=0, pzAff=0x7ffed43eb1a8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffed43ec390, v=0xbdbf50, pWInfo=0xbd6640, iLevel=1, pLevel=0xbd6a30, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffed43ec390, pTabList=0xbe1d10, pWhere=0xbdc8b0, pOrderBy=0x0, pResultSet=0xbee6a0, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffed43ec390, p=0xbdc400, pDest=0x7ffed43eb780) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffed43eb9b0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffed43ec390) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffed43eb9b0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffed43ec390, 
    zSql=0xbf6fbf ";;\nCREATE TABLE t0st_segments (t0st_segdir INTEGER PRIMARY KEY, k00000d TEXT);SELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;;\nINSERT INTO b VALUES(5,6);;\nSELECT name, rootpage, s"..., pzErrMsg=0x7ffed43ec570) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0xbce2b0, 
    zSql=0xbd19d2 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3613, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffed43ec6a8, pzTail=0x7ffed43ec690) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0xbce2b0, 
    zSql=0xbd19d2 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3613, prepFlags=128, pOld=0x0, ppStmt=0x7ffed43ec6a8, pzTail=0x7ffed43ec690) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0xbce2b0, 
    zSql=0xbd19d2 ";\nSELECT\n    SrcWord, t1.a\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.a= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=3613, ppStmt=0x7ffed43ec6a8, pzTail=0x7ffed43ec690) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffed43ec858) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 5516] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
