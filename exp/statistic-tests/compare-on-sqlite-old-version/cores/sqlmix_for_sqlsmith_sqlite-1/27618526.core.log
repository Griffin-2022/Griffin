GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000323,sig:06,src:021226+019121,time:13598789,execs:3730100,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT datetime('now', 'localtime') 
;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 now           00 r[2]='now'
REG[2] =   t3[now](8)
   5 String8          0    3    0 localtime     00 r[3]='localtime'
REG[3] =   t9[localtime](8)
   6 Goto             0    1    0               00 
   1 Function0        3    2    1 datetime(-1)  02 r[1]=func(r[2..3])
REG[2] =   t3[now](8)
REG[3] =   t9[localtime](8)
REG[1] =   s19[2022-08-08 01:2](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[2022-08-08 01:2](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a, b);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    0 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:1
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  21 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  23 String8          0   10    0 CREATE TABLE t1(a, b) 00 r[10]='CREATE TABLE t1(a, b)'
REG[10] =   t21[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C657431743102.....7tablet1t1.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C657431743102.....7tablet1t1.](8)
REG[5] =  i:1
  26 Close            1    0    0               00 
  27 SetCookie        0    1    1               00 
  28 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s21[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s21[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;PRAGMA wal_autocheckpoint=50;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Int64            0    1    0 50            00 r[1]=50
REG[1] =  i:50
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:50
   3 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES('a', 'two');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    1 0             01 usesStmtJournal=0
  10 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
   4 String8          0    3    0 two           00 r[3]='two'
REG[3] =   t3[two](8)
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s7[030F136174776F...atwo](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s7[030F136174776F...atwo](8)
REG[1] =  i:1
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [CREATE TABLE x(t2 INTEGER PRIMARY KEY, t3);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 x             00 r[7]='x'
REG[7] =   t1[x](8)
  21 String8          0    8    0 x             00 r[8]='x'
REG[8] =   t1[x](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE x(t2 INTEGER PRIMARY KEY, t3) 00 r[10]='CREATE TABLE x(t2 INTEGER PRIMARY KEY, t3)'
REG[10] =   t42[CREATE TABLE x(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s56[06170F0F01617461626C657878034352.....atablexx.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s56[06170F0F01617461626C657878034352.....atablexx.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='x' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[CREATE TABLE x(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:3
REG[7] =   s42[CREATE TABLE x(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO x VALUES($i, $i);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    2 0             01 usesStmtJournal=0
  15 TableLock        0    3    1 x             00 iDb=0 root=3 write=1
  16 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; x
   2 Variable         1    1    0 $i            00 r[1]=parameter(1,$i)
REG[1] =  NULL
   3 NotNull          1    5    0               00 if r[1]!=NULL goto 5
REG[1] =  NULL
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 MustBeInt        1    0    0               00 
REG[1] =  i:1
   6 SoftNull         2    0    0               00 r[2]=NULL
   7 Variable         1    3    0 $i            00 r[3]=parameter(1,$i)
REG[3] =  NULL
   8 NotExists        0   10    1               00 intkey=r[1]
REG[1] =  i:1
  10 MakeRecord       2    2    4 D             00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030000...](8)
  11 Insert           0    4    1 x             13 intkey=r[1] data=r[4]
REG[4] =  s3[030000...](8)
REG[1] =  i:1
  12 Noop             0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;INSERT INTO t1 VALUES('a', 2);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    2 0             01 usesStmtJournal=0
  10 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s5[030F016102...a.](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s5[030F016102...a.](8)
REG[1] =  i:2
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t1 CROSS JOIN t1 USING (b)

;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    2 0             01 usesStmtJournal=0
  28 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  29 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           0   22    0               00 
   6 Once             0   14    0               00 
   7 OpenAutoindex    2    2    0 k(2,B,)       00 nColumn=2; for t1
   8 Rewind           1   14    0               00 
   9 Column           1    1    3               00 r[3]=t1.b
REG[3] =   s3[two](8)
  10 Rowid            1    4    0               00 r[4]=rowid
REG[4] =  i:1
  11 MakeRecord       3    2    2               00 r[2]=mkrec(r[3..4])
REG[2] =  s6[03130974776F...two](8)
  12 IdxInsert        2    2    0               10 key=r[2]
REG[2] =  s6[03130974776F...two](8)
  13 Next             1    9    0               03 
   9 Column           1    1    3               00 r[3]=t1.b
REG[3] =  i:2
  10 Rowid            1    4    0               00 r[4]=rowid
REG[4] =  i:2
  11 MakeRecord       3    2    2               00 r[2]=mkrec(r[3..4])
REG[2] =  s5[0301010202.....](8)
  12 IdxInsert        2    2    0               10 key=r[2]
REG[2] =  s5[0301010202.....](8)
  13 Next             1    9    0               03 
  14 Explain          0    1    1 SEARCH TABLE t1 USING AUTOMATIC COVERING INDEX (b=?) 00 
  15 Column           0    1    5               00 r[5]=t1.b
REG[5] =   s3[two](8)
  16 IsNull           5   21    0               00 if r[5]==NULL goto 21
REG[5] =   s3[two](8)
  17 SeekGE           2   21    5 1             00 key=r[5]
REG[5] =   s3[two](8)
  18 IdxGT            2   21    5 1             00 key=r[5]
  19 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  20 Next             2   18    0               00 
  21 Next             0    6    0               01 
   6 Once             0   14    0               00 
  14 Explain          0    1    1 SEARCH TABLE t1 USING AUTOMATIC COVERING INDEX (b=?) 00 
  15 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:2
  16 IsNull           5   21    0               00 if r[5]==NULL goto 21
REG[5] =  i:2
  17 SeekGE           2   21    5 1             00 key=r[5]
REG[5] =  i:2
  18 IdxGT            2   21    5 1             00 key=r[5]
  19 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
  20 Next             2   18    0               00 
  18 IdxGT            2   21    5 1             00 key=r[5]
  21 Next             0    6    0               01 
  22 Close            0    0    0               00 
  23 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  24 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:2
  25 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  26 Halt             0    0    0               00 
SQL: [;SELECT 1, 2, 3 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   2 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   3 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   4 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:1
REG[2] =  i:2
REG[3] =  i:3
   5 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   2 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   3 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   4 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:1
REG[2] =  i:2
REG[3] =  i:3
   5 Halt             0    0    0               00 
SQL: [SELECT DISTINCT b, b, b||b FROM t1 
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(3,B,B,B)    08 nColumn=0
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   13    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =   s3[two](8)
   6 Copy             1    2    0               00 r[2]=r[1]
REG[2] =   s3[two](8)
   7 Concat           1    1    3               00 r[3]=r[1]+r[1]
REG[1] =   s3[two](8)
REG[1] =   s3[two](8)
REG[3] =   s6[twotwo](8)
   8 Found            1   12    1 3             00 key=r[1..3]
REG[1] =   s3[two](8)
REG[2] =   s3[two](8)
REG[3] =   s6[twotwo](8)
   9 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s16[0413131974776F74776F74776F74776F....twotwotwotwo](8)
  10 IdxInsert        1    4    0               00 key=r[4]
REG[4] =  s16[0413131974776F74776F74776F74776F....twotwotwotwo](8)
  11 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s3[two](8)
REG[2] =   s3[two](8)
REG[3] =   s6[twotwo](8)
  12 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:2
   6 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:2
   7 Concat           1    1    3               00 r[3]=r[1]+r[1]
REG[1] =  i:2
REG[1] =  i:2
REG[3] =   s2[22](8)
   8 Found            1   12    1 3             00 key=r[1..3]
REG[1] =  si:2
REG[2] =  i:2
REG[3] =   s2[22](8)
   9 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s8[0401011102023232......22](8)
  10 IdxInsert        1    4    0               00 key=r[4]
REG[4] =  s8[0401011102023232......22](8)
  11 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  si:2
REG[2] =  i:2
REG[3] =   s2[22](8)
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Halt             0    0    0               00 
SQL: [SELECT 1, 2, 3 WHERE 1 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   2 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   3 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   4 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:1
REG[2] =  i:2
REG[3] =  i:3
   5 Halt             0    0    0               00 
SQL: [SELECT DISTINCT 1, 2, 3 WHERE 1 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Null             1    4    0               08 r[4]=NULL
REG[4] =  NULL
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   4 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   5 Ne               1    8    4               80 if r[1]!=r[4] goto 8
REG[1] =  i:1
REG[4] =  NULL
   8 Copy             1    4    2               00 r[4..6]=r[1..3]
REG[4] =  i:1
REG[5] =  i:2
REG[6] =  i:3
   9 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:1
REG[2] =  i:2
REG[3] =  i:3
  10 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 WHERE 1 
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   2 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   3 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
   4 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:1
REG[2] =  i:2
REG[3] =  i:3
   5 Halt             0    0    0               00 
SQL: [SELECT DISTINCT b, b, b||b FROM t1 WHERE b!='t1' 
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    2 0             01 usesStmtJournal=0
  18 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  19 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  20 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(3,B,B,B)    08 nColumn=0
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   15    0               00 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =   s3[two](8)
   6 Eq               2   14    1 (BINARY)      51 if r[2]==r[1] goto 14
REG[2] =   t2[t1](8)
REG[1] =   s3[two](8)
   7 Copy             1    3    0               00 r[3]=r[1]
REG[3] =   s3[two](8)
   8 Copy             1    4    0               00 r[4]=r[1]
REG[4] =   s3[two](8)
   9 Concat           1    1    5               00 r[5]=r[1]+r[1]
REG[1] =   s3[two](8)
REG[1] =   s3[two](8)
REG[5] =   s6[twotwo](8)
  10 Found            1   14    3 3             00 key=r[3..5]
REG[3] =   s3[two](8)
REG[4] =   s3[two](8)
REG[5] =   s6[twotwo](8)
  11 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s16[0413131974776F74776F74776F74776F....twotwotwotwo](8)
  12 IdxInsert        1    6    0               00 key=r[6]
REG[6] =  s16[0413131974776F74776F74776F74776F....twotwotwotwo](8)
  13 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s3[two](8)
REG[4] =   s3[two](8)
REG[5] =   s6[twotwo](8)
  14 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:2
   6 Eq               2   14    1 (BINARY)      51 if r[2]==r[1] goto 14
REG[2] =   t2[t1](8)
REG[1] =  i:2
   7 Copy             1    3    0               00 r[3]=r[1]
REG[3] =  i:2
   8 Copy             1    4    0               00 r[4]=r[1]
REG[4] =  i:2
   9 Concat           1    1    5               00 r[5]=r[1]+r[1]
REG[1] =  i:2
REG[1] =  i:2
REG[5] =   s2[22](8)
  10 Found            1   14    3 3             00 key=r[3..5]
REG[3] =  i:2
REG[4] =  i:2
REG[5] =   s2[22](8)
  11 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s8[0401011102023232......22](8)
  12 IdxInsert        1    6    0               00 key=r[6]
REG[6] =  s8[0401011102023232......22](8)
  13 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =  i:2
REG[4] =  i:2
REG[5] =   s2[22](8)
  14 Next             0    5    0               01 
  15 Close            0    0    0               00 
  16 Halt             0    0    0               00 
SQL: [SELECT 1, 2, 3 GROUP BY 2
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Noop             0    1    0               00 
   2 Integer          0    2    0               00 r[2]=0; clear abort flag
REG[2] =  i:0
   3 Integer          0    1    0               00 r[1]=0; indicate accumulator empty
REG[1] =  i:0
   4 Null             0    5    5               00 r[5..5]=NULL
REG[5] =  NULL
   5 Gosub            4   25    0               00 
REG[4] =  i:5
  25 Return           4    0    0               00 
REG[4] =  i:5
   6 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   7 Compare          5    6    1 k(1,B)        00 r[5] <-> r[6]
REG[5] =  NULL
REG[6] =  i:2
   8 Jump             9   13    9               00 
   9 Move             6    5    1               00 r[5]=r[6]
REG[5] =  i:2
  10 Gosub            3   18    0               00 output one row
REG[3] =  i:10
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20; Groupby result generator entry point
REG[1] =  i:0
  19 Return           3    0    0               00 
REG[3] =  i:10
  11 IfPos            2   26    0               00 if r[2]>0 then r[2]-=0, goto 26; check abort flag
REG[2] =  i:0
  12 Gosub            4   25    0               00 reset accumulator
REG[4] =  i:12
  25 Return           4    0    0               00 
REG[4] =  i:12
  13 Integer          1    1    0               00 r[1]=1; indicate data in accumulator
REG[1] =  i:1
  14 Gosub            3   18    0               00 output final row
REG[3] =  i:14
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20; Groupby result generator entry point
REG[1] =  i:1
  20 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  21 Integer          2    8    0               00 r[8]=2
REG[8] =  i:2
  22 Integer          3    9    0               00 r[9]=3
REG[9] =  i:3
  23 ResultRow        7    3    0               00 output=r[7..9]
REG[7] =  i:1
REG[8] =  i:2
REG[9] =  i:3
  24 Return           3    0    0               00 end groupby result generator
REG[3] =  i:14
  15 Goto             0   26    0               00 
  26 Halt             0    0    0               00 
SQL: [SELECT DISTINCT 1, 2, 3 GROUP BY 2 HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  36 Goto             0    1    0               00 
   1 OpenEphemeral    0    0    0 k(3,B,B,B)    08 nColumn=0
   2 Noop             1    1    0               00 
   3 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   4 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   5 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   6 Gosub            5   32    0               00 
REG[5] =  i:6
  32 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  33 Return           5    0    0               00 
REG[5] =  i:6
   7 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
   8 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:2
   9 Jump            10   14   10               00 
  10 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:2
  11 Gosub            4   20    0               00 output one row
REG[4] =  i:11
  20 IfPos            2   22    0               00 if r[2]>0 then r[2]-=0, goto 22; Groupby result generator entry point
REG[2] =  i:0
  21 Return           4    0    0               00 
REG[4] =  i:11
  12 IfPos            3   34    0               00 if r[3]>0 then r[3]-=0, goto 34; check abort flag
REG[3] =  i:0
  13 Gosub            5   32    0               00 reset accumulator
REG[5] =  i:13
  32 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  33 Return           5    0    0               00 
REG[5] =  i:13
  14 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  15 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  16 Gosub            4   20    0               00 output final row
REG[4] =  i:16
  20 IfPos            2   22    0               00 if r[2]>0 then r[2]-=0, goto 22; Groupby result generator entry point
REG[2] =  i:1
  22 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  23 Ne               9   21    1               51 if r[9]!=r[1] goto 21
REG[9] =  i:1
REG[1] =  i:1
  24 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  25 Integer          2   11    0               00 r[11]=2
REG[11] =  i:2
  26 Integer          3   12    0               00 r[12]=3
REG[12] =  i:3
  27 Found            0   21   10 3             00 key=r[10..12]
REG[10] =  i:1
REG[11] =  i:2
REG[12] =  i:3
  28 MakeRecord      10    3    8               00 r[8]=mkrec(r[10..12])
REG[8] =  s6[040901010203......](8)
  29 IdxInsert        0    8    0               00 key=r[8]
REG[8] =  s6[040901010203......](8)
  30 ResultRow       10    3    0               00 output=r[10..12]
REG[10] =  i:1
REG[11] =  i:2
REG[12] =  i:3
  31 Return           4    0    0               00 end groupby result generator
REG[4] =  i:16
  17 Goto             0   34    0               00 
  34 Halt             0    0    0               00 
SQL: [SELECT count(*), max(a) FROM t1 GROUP BY b
;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    2 0             01 usesStmtJournal=0
  46 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  47 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   3 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   42    0               00 
REG[7] =  i:5
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:5
   6 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   7 Explain          0    0    0 SCAN TABLE t1 00 
   8 Rewind           0   14    0               00 
   9 Column           0    1   10               00 r[10]=t1.b
REG[10] =   s3[two](8)
  10 Column           0    0   11               00 r[11]=t1.a
REG[11] =   s1[a](8)
  11 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s7[03130F74776F61...twoa](8)
  12 SorterInsert     1   12    0               00 
REG[12] =  s7[03130F74776F61...twoa](8)
  13 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:2
  10 Column           0    0   11               00 r[11]=t1.a
REG[11] =   s1[a](8)
  11 MakeRecord      10    2   12               00 r[12]=mkrec(r[10..11])
REG[12] =  s5[03010F0261....a](8)
  12 SorterInsert     1   12    0               00 
REG[12] =  s5[03010F0261....a](8)
  13 Next             0    9    0               01 
  14 Close            0    0    0               00 
  15 OpenPseudo       2   12    2               00 2 columns in r[12]
  16 SorterSort       1   44    0               00 GROUP BY sort
  17 SorterData       1   12    2               00 r[12]=data
  18 Column           2    0    9               00 r[9]=
REG[9] =  i:2
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:2
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:2
  22 Gosub            6   35    0               00 output one row
REG[6] =  i:22
  35 IfPos            4   37    0               00 if r[4]>0 then r[4]-=0, goto 37; Groupby result generator entry point
REG[4] =  i:0
  36 Return           6    0    0               00 
REG[6] =  i:22
  23 IfPos            5   44    0               00 if r[5]>0 then r[5]-=0, goto 44; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:24
  25 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  26 Column           2    1   10               00 r[10]=
REG[10] =   s1[a](8)
  27 CollSeq          0    0    0 (BINARY)      00 
  28 AggStep0         0   10    2 max(1)        01 accum=r[2] step(r[10])
REG[10] =   s1[a](8)
  29 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  30 SorterNext       1   17    0               00 
  17 SorterData       1   12    2               00 r[12]=data
  18 Column           2    0    9               00 r[9]=
REG[9] =   s3[two](8)
  19 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:2
REG[9] =   s3[two](8)
  20 Jump            21   25   21               00 
  21 Move             9    8    1               00 r[8]=r[9]
REG[8] =   s3[two](8)
  22 Gosub            6   35    0               00 output one row
REG[6] =  i:22
  35 IfPos            4   37    0               00 if r[4]>0 then r[4]-=0, goto 37; Groupby result generator entry point
REG[4] =  i:1
  37 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  38 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  39 Copy             1   13    1               00 r[13..14]=r[1..2]
REG[13] =  i:1
REG[14] =   s1[a](8)
  40 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:1
REG[14] =   s1[a](8)
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:22
  23 IfPos            5   44    0               00 if r[5]>0 then r[5]-=0, goto 44; check abort flag
REG[5] =  i:0
  24 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:24
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:24
  25 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
  26 Column           2    1   10               00 r[10]=
REG[10] =   s1[a](8)
  27 CollSeq          0    0    0 (BINARY)      00 
  28 AggStep          0   10    2 max(1)        01 accum=r[2] step(r[10])
REG[10] =   s1[a](8)
  29 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  30 SorterNext       1   17    0               00 
  31 Gosub            6   35    0               00 output final row
REG[6] =  i:31
  35 IfPos            4   37    0               00 if r[4]>0 then r[4]-=0, goto 37; Groupby result generator entry point
REG[4] =  i:1
  37 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  38 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  39 Copy             1   13    1               00 r[13..14]=r[1..2]
REG[13] =  i:1
REG[14] =   s1[a](8)
  40 ResultRow       13    2    0               00 output=r[13..14]
REG[13] =  i:1
REG[14] =   s1[a](8)
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:31
  32 Goto             0   44    0               00 
  44 Halt             0    0    0               00 
SQL: [SELECT count(*), max(b) FROM t1 GROUP BY b HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    2 0             01 usesStmtJournal=0
  46 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  47 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  48 Goto             0    1    0               00 
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   3 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   42    0               00 
REG[7] =  i:5
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:5
   6 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   7 Explain          0    0    0 SCAN TABLE t1 00 
   8 Rewind           0   13    0               00 
   9 Column           0    1   10               00 r[10]=t1.b
REG[10] =   s3[two](8)
  10 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s5[021374776F..two](8)
  11 SorterInsert     1   11    0               00 
REG[11] =  s5[021374776F..two](8)
  12 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:2
  10 MakeRecord      10    1   11               00 r[11]=mkrec(r[10])
REG[11] =  s3[020102...](8)
  11 SorterInsert     1   11    0               00 
REG[11] =  s3[020102...](8)
  12 Next             0    9    0               01 
  13 Close            0    0    0               00 
  14 OpenPseudo       2   11    1               00 1 columns in r[11]
  15 SorterSort       1   44    0               00 GROUP BY sort
  16 SorterData       1   11    2               00 r[11]=data
  17 Column           2    0    9               00 r[9]=
REG[9] =  i:2
  18 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:2
  19 Jump            20   24   20               00 
  20 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:2
  21 Gosub            6   34    0               00 output one row
REG[6] =  i:21
  34 IfPos            4   36    0               00 if r[4]>0 then r[4]-=0, goto 36; Groupby result generator entry point
REG[4] =  i:0
  35 Return           6    0    0               00 
REG[6] =  i:21
  22 IfPos            5   44    0               00 if r[5]>0 then r[5]-=0, goto 44; check abort flag
REG[5] =  i:0
  23 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:23
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:23
  24 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  25 Column           2    0   10               00 r[10]=
REG[10] =  i:2
  26 CollSeq          0    0    0 (BINARY)      00 
  27 AggStep0         0   10    2 max(1)        01 accum=r[2] step(r[10])
REG[10] =  i:2
  28 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  29 SorterNext       1   16    0               00 
  16 SorterData       1   11    2               00 r[11]=data
  17 Column           2    0    9               00 r[9]=
REG[9] =   s3[two](8)
  18 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:2
REG[9] =   s3[two](8)
  19 Jump            20   24   20               00 
  20 Move             9    8    1               00 r[8]=r[9]
REG[8] =   s3[two](8)
  21 Gosub            6   34    0               00 output one row
REG[6] =  i:21
  34 IfPos            4   36    0               00 if r[4]>0 then r[4]-=0, goto 36; Groupby result generator entry point
REG[4] =  i:1
  36 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  37 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  38 Ne              13   35    1               51 if r[13]!=r[1] goto 35
REG[13] =  i:1
REG[1] =  i:1
  39 Copy             1   14    1               00 r[14..15]=r[1..2]
REG[14] =  i:1
REG[15] =  i:2
  40 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  i:1
REG[15] =  i:2
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:21
  22 IfPos            5   44    0               00 if r[5]>0 then r[5]-=0, goto 44; check abort flag
REG[5] =  i:0
  23 Gosub            7   42    0               00 reset accumulator
REG[7] =  i:23
  42 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  43 Return           7    0    0               00 
REG[7] =  i:23
  24 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
  25 Column           2    0   10               00 r[10]=
REG[10] =   s3[two](8)
  26 CollSeq          0    0    0 (BINARY)      00 
  27 AggStep          0   10    2 max(1)        01 accum=r[2] step(r[10])
REG[10] =   s3[two](8)
  28 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  29 SorterNext       1   16    0               00 
  30 Gosub            6   34    0               00 output final row
REG[6] =  i:30
  34 IfPos            4   36    0               00 if r[4]>0 then r[4]-=0, goto 36; Groupby result generator entry point
REG[4] =  i:1
  36 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  37 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  38 Ne              13   35    1               51 if r[13]!=r[1] goto 35
REG[13] =  i:1
REG[1] =  i:1
  39 Copy             1   14    1               00 r[14..15]=r[1..2]
REG[14] =  i:1
REG[15] =   s3[two](8)
  40 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  i:1
REG[15] =   s3[two](8)
  41 Return           6    0    0               00 end groupby result generator
REG[6] =  i:30
  31 Goto             0   44    0               00 
  44 Halt             0    0    0               00 
SQL: [SELECT 1, 2, 3 WHERE 1 GROUP BY 2
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Noop             0    1    0               00 
   2 Integer          0    2    0               00 r[2]=0; clear abort flag
REG[2] =  i:0
   3 Integer          0    1    0               00 r[1]=0; indicate accumulator empty
REG[1] =  i:0
   4 Null             0    5    5               00 r[5..5]=NULL
REG[5] =  NULL
   5 Gosub            4   25    0               00 
REG[4] =  i:5
  25 Return           4    0    0               00 
REG[4] =  i:5
   6 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   7 Compare          5    6    1 k(1,B)        00 r[5] <-> r[6]
REG[5] =  NULL
REG[6] =  i:2
   8 Jump             9   13    9               00 
   9 Move             6    5    1               00 r[5]=r[6]
REG[5] =  i:2
  10 Gosub            3   18    0               00 output one row
REG[3] =  i:10
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20; Groupby result generator entry point
REG[1] =  i:0
  19 Return           3    0    0               00 
REG[3] =  i:10
  11 IfPos            2   26    0               00 if r[2]>0 then r[2]-=0, goto 26; check abort flag
REG[2] =  i:0
  12 Gosub            4   25    0               00 reset accumulator
REG[4] =  i:12
  25 Return           4    0    0               00 
REG[4] =  i:12
  13 Integer          1    1    0               00 r[1]=1; indicate data in accumulator
REG[1] =  i:1
  14 Gosub            3   18    0               00 output final row
REG[3] =  i:14
  18 IfPos            1   20    0               00 if r[1]>0 then r[1]-=0, goto 20; Groupby result generator entry point
REG[1] =  i:1
  20 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  21 Integer          2    8    0               00 r[8]=2
REG[8] =  i:2
  22 Integer          3    9    0               00 r[9]=3
REG[9] =  i:3
  23 ResultRow        7    3    0               00 output=r[7..9]
REG[7] =  i:1
REG[8] =  i:2
REG[9] =  i:3
  24 Return           3    0    0               00 end groupby result generator
REG[3] =  i:14
  15 Goto             0   26    0               00 
  26 Halt             0    0    0               00 
SQL: [SELECT DISTINCT 1, 2, 3 WHERE 0 GROUP BY 2
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 OpenEphemeral    0    0    0 k(3,B,B,B)    08 nColumn=0
   2 Noop             1    1    0               00 
   3 Integer          0    2    0               00 r[2]=0; clear abort flag
REG[2] =  i:0
   4 Integer          0    1    0               00 r[1]=0; indicate accumulator empty
REG[1] =  i:0
   5 Null             0    5    5               00 r[5..5]=NULL
REG[5] =  NULL
   6 Gosub            4   30    0               00 
REG[4] =  i:6
  30 Return           4    0    0               00 
REG[4] =  i:6
   7 Goto             0   16    0               00 
  16 Gosub            3   20    0               00 output final row
REG[3] =  i:16
  20 IfPos            1   22    0               00 if r[1]>0 then r[1]-=0, goto 22; Groupby result generator entry point
REG[1] =  i:0
  21 Return           3    0    0               00 
REG[3] =  i:16
  17 Goto             0   31    0               00 
  31 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 WHERE 0 GROUP BY 2 HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  33 Goto             0    1    0               00 
   1 Noop             0    1    0               00 
   2 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   3 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   4 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   5 Gosub            5   29    0               00 
REG[5] =  i:5
  29 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  30 Return           5    0    0               00 
REG[5] =  i:5
   6 Goto             0   16    0               00 
  16 Gosub            4   20    0               00 output final row
REG[4] =  i:16
  20 IfPos            2   22    0               00 if r[2]>0 then r[2]-=0, goto 22; Groupby result generator entry point
REG[2] =  i:0
  21 Return           4    0    0               00 
REG[4] =  i:16
  17 Goto             0   31    0               00 
  31 Halt             0    0    0               00 
SQL: [SELECT DISTINCT count(*), max(b) FROM t1 WHERE b<'c' GROUP BY a
;]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
  51 Transaction      0    0    2 0             01 usesStmtJournal=0
  52 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  53 String8          0   11    0 c             00 r[11]='c'
REG[11] =   t1[c](8)
  54 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 SorterOpen       2    2    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   48    0               00 
REG[7] =  i:6
  48 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  49 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   17    0               00 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =   s3[two](8)
  11 Ge              11   16   10 (BINARY)      51 if r[11]>=r[10] goto 16
REG[11] =   t1[c](8)
REG[10] =   s3[two](8)
  16 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:2
  11 Ge              11   16   10 (BINARY)      51 if r[11]>=r[10] goto 16
REG[11] =   t1[c](8)
REG[10] =  i:2
  12 Column           0    0   12               00 r[12]=t1.a
REG[12] =   s1[a](8)
  13 Column           0    1   13               00 r[13]=t1.b
REG[13] =  i:2
  14 MakeRecord      12    2   10               00 r[10]=mkrec(r[12..13])
REG[10] =  s5[030F016102...a.](8)
  15 SorterInsert     2   10    0               00 
REG[10] =  s5[030F016102...a.](8)
  16 Next             0   10    0               01 
  17 Close            0    0    0               00 
  18 OpenPseudo       3   10    2               00 2 columns in r[10]
  19 SorterSort       2   50    0               00 GROUP BY sort
  20 SorterData       2   10    3               00 r[10]=data
  21 Column           3    0    9               00 r[9]=
REG[9] =   s1[a](8)
  22 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =   s1[a](8)
  23 Jump            24   28   24               00 
  24 Move             9    8    1               00 r[8]=r[9]
REG[8] =   s1[a](8)
  25 Gosub            6   38    0               00 output one row
REG[6] =  i:25
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:0
  39 Return           6    0    0               00 
REG[6] =  i:25
  26 IfPos            5   50    0               00 if r[5]>0 then r[5]-=0, goto 50; check abort flag
REG[5] =  i:0
  27 Gosub            7   48    0               00 reset accumulator
REG[7] =  i:27
  48 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  49 Return           7    0    0               00 
REG[7] =  i:27
  28 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  29 Column           3    1   12               00 r[12]=
REG[12] =  i:2
  30 CollSeq          0    0    0 (BINARY)      00 
  31 AggStep0         0   12    2 max(1)        01 accum=r[2] step(r[12])
REG[12] =  i:2
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       2   20    0               00 
  34 Gosub            6   38    0               00 output final row
REG[6] =  i:34
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:1
  40 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  41 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  42 Copy             1   14    1               00 r[14..15]=r[1..2]
REG[14] =  i:1
REG[15] =  i:2
  43 Found            1   39   14 2             00 key=r[14..15]
REG[14] =  i:1
REG[15] =  i:2
  44 MakeRecord      14    2   16               00 r[16]=mkrec(r[14..15])
REG[16] =  s4[03090102....](8)
  45 IdxInsert        1   16    0               00 key=r[16]
REG[16] =  s4[03090102....](8)
  46 ResultRow       14    2    0               00 output=r[14..15]
REG[14] =  i:1
REG[15] =  i:2
  47 Return           6    0    0               00 end groupby result generator
REG[6] =  i:34
  35 Goto             0   50    0               00 
  50 Halt             0    0    0               00 
SQL: [SELECT ALL count(*), max(a) FROM t1 
           WHERE 0 GROUP BY b HAVING count(*)=2
;]
VDBE Trace:
   0 Init             0   47    0               00 Start at 47
  47 Transaction      0    0    2 0             01 usesStmtJournal=0
  48 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  49 Integer          2   14    0               00 r[14]=2
REG[14] =  i:2
  50 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   3 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   44    0               00 
REG[7] =  i:5
  44 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  45 Return           7    0    0               00 
REG[7] =  i:5
   6 Goto             0   15    0               00 
  15 Close            0    0    0               00 
  16 OpenPseudo       2   12    2               00 2 columns in r[12]
  17 SorterSort       1   46    0               00 GROUP BY sort
  46 Halt             0    0    0               00 
SQL: [SELECT t1.* FROM t1
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    2 0             01 usesStmtJournal=0
  11 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    8    0               00 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =   s1[a](8)
   5 Column           0    1    2               00 r[2]=t1.b
REG[2] =   s3[two](8)
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   s1[a](8)
REG[2] =   s3[two](8)
   7 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =   s1[a](8)
   5 Column           0    1    2               00 r[2]=t1.b
REG[2] =  i:2
   6 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   s1[a](8)
REG[2] =  i:2
   7 Next             0    4    0               01 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [SELECT 'x'||b||'x' AS alias FROM t1
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  13 String8          0    3    0 x             00 r[3]='x'
REG[3] =   t1[x](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    1    4               00 r[4]=t1.b
REG[4] =   s3[two](8)
   5 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =   s3[two](8)
REG[3] =   t1[x](8)
REG[2] =   s4[xtwo](8)
   6 Concat           3    2    1               00 r[1]=r[2]+r[3]
REG[3] =   t1[x](8)
REG[2] =   s4[xtwo](8)
REG[1] =   s5[xtwox](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s5[xtwox](8)
   8 Next             0    4    0               01 
   4 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:2
   5 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =  i:2
REG[3] =   t1[x](8)
REG[2] =   s2[x2](8)
   6 Concat           3    2    1               00 r[1]=r[2]+r[3]
REG[3] =   t1[x](8)
REG[2] =   s2[x2](8)
REG[1] =   s3[x2x](8)
   7 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s3[x2x](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [SELECT x.rowid FROM x
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; x
   2 Explain          0    0    0 SCAN TABLE x  00 
   3 Rewind           0    7    0               00 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:1
   6 Next             0    4    0               01 
   7 Close            0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [SELECT b||a FROM t1 ORDER BY b||a
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    2 0             01 usesStmtJournal=0
  21 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  22 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   12    0               00 
   5 Column           0    1    3               00 r[3]=t1.b
REG[3] =   s3[two](8)
   6 Column           0    0    4               00 r[4]=t1.a
REG[4] =   s1[a](8)
   7 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =   s1[a](8)
REG[3] =   s3[two](8)
REG[2] =   s4[twoa](8)
   8 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s4[twoa](8)
   9 MakeRecord       1    2    5               00 r[5]=mkrec(r[1..2])
REG[5] =  s11[03151574776F6174776F61...twoatwoa](8)
  10 SorterInsert     1    5    0               00 
REG[5] =  s11[03151574776F6174776F61...twoatwoa](8)
  11 Next             0    5    0               01 
   5 Column           0    1    3               00 r[3]=t1.b
REG[3] =  i:2
   6 Column           0    0    4               00 r[4]=t1.a
REG[4] =   s1[a](8)
   7 Concat           4    3    2               00 r[2]=r[3]+r[4]
REG[4] =   s1[a](8)
REG[3] =  i:2
REG[2] =   s2[2a](8)
   8 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[2a](8)
   9 MakeRecord       1    2    5               00 r[5]=mkrec(r[1..2])
REG[5] =  s7[03111132613261...2a2a](8)
  10 SorterInsert     1    5    0               00 
REG[5] =  s7[03111132613261...2a2a](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 OpenPseudo       2    6    3               00 3 columns in r[6]
  14 SorterSort       1   19    0               00 
  15 SorterData       1    6    2               00 r[6]=data
  16 Column           2    1    2               00 r[2]=b||a
REG[2] =   s2[2a](8)
  17 ResultRow        2    1    0               00 output=r[2]
REG[2] =   s2[2a](8)
  18 SorterNext       1   15    0               00 
  15 SorterData       1    6    2               00 r[6]=data
  16 Column           2    1    2               00 r[2]=b||a
REG[2] =   s4[twoa](8)
  17 ResultRow        2    1    0               00 output=r[2]
REG[2] =   s4[twoa](8)
  18 SorterNext       1   15    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT a||a FROM t1 ORDER BY (a||a) DESC
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  21 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,-B)       00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    3               00 r[3]=t1.a
REG[3] =   s1[a](8)
   6 Concat           3    3    2               00 r[2]=r[3]+r[3]
REG[3] =   s1[a](8)
REG[3] =   s1[a](8)
REG[2] =   s2[aa](8)
   7 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[aa](8)
   8 MakeRecord       1    2    5               00 r[5]=mkrec(r[1..2])
REG[5] =  s7[03111161616161...aaaa](8)
   9 SorterInsert     1    5    0               00 
REG[5] =  s7[03111161616161...aaaa](8)
  10 Next             0    5    0               01 
   5 Column           0    0    3               00 r[3]=t1.a
REG[3] =   s1[a](8)
   6 Concat           3    3    2               00 r[2]=r[3]+r[3]
REG[3] =   s1[a](8)
REG[3] =   s1[a](8)
REG[2] =   s2[aa](8)
   7 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s2[aa](8)
   8 MakeRecord       1    2    5               00 r[5]=mkrec(r[1..2])
REG[5] =  s7[03111161616161...aaaa](8)
   9 SorterInsert     1    5    0               00 
REG[5] =  s7[03111161616161...aaaa](8)
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 OpenPseudo       2    6    3               00 3 columns in r[6]
  13 SorterSort       1   18    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    1    2               00 r[2]=a||a
REG[2] =   s2[aa](8)
  16 ResultRow        2    1    0               00 output=r[2]
REG[2] =   s2[aa](8)
  17 SorterNext       1   14    0               00 
  14 SorterData       1    6    2               00 r[6]=data
  15 Column           2    1    2               00 r[2]=a||a
REG[2] =   s2[aa](8)
  16 ResultRow        2    1    0               00 output=r[2]
REG[2] =   s2[aa](8)
  17 SorterNext       1   14    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 ORDER BY a LIMIT 10
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    2 0             01 usesStmtJournal=0
  24 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  25 Goto             0    1    0               00 
   1 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   2 Integer         10    1    0               00 r[1]=10; LIMIT counter
REG[1] =  i:10
   3 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           0   16    0               00 
   6 Column           0    0    4               00 r[4]=t1.a
REG[4] =   s1[a](8)
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =   s3[two](8)
   8 Copy             4    2    0               00 r[2]=r[4]
REG[2] =   s1[a](8)
   9 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:0
  10 MakeRecord       2    4    6               00 r[6]=mkrec(r[2..5])
REG[6] =  s10[050F080F13616174776F.....aatwo](8)
  11 IdxInsert        1    6    0               00 key=r[6]
REG[6] =  s10[050F080F13616174776F.....aatwo](8)
  12 IfNotZero        1   15    1               00 if r[1]!=0 then r[1]-=1, goto 15
REG[1] =  i:10
  15 Next             0    6    0               01 
   6 Column           0    0    4               00 r[4]=t1.a
REG[4] =   s1[a](8)
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:2
   8 Copy             4    2    0               00 r[2]=r[4]
REG[2] =   s1[a](8)
   9 Sequence         1    3    0               00 r[3]=cursor[1].ctr++
REG[3] =  i:1
  10 MakeRecord       2    4    6               00 r[6]=mkrec(r[2..5])
REG[6] =  s8[050F090F01616102.....aa.](8)
  11 IdxInsert        1    6    0               00 key=r[6]
REG[6] =  s8[050F090F01616102.....aa.](8)
  12 IfNotZero        1   15    1               00 if r[1]!=0 then r[1]-=1, goto 15
REG[1] =  i:9
  15 Next             0    6    0               01 
  16 Close            0    0    0               00 
  17 Sort             1   22    0               00 
  18 Column           1    2    4               00 r[4]=a
REG[4] =   s1[a](8)
  19 Column           1    3    5               00 r[5]=b
REG[5] =   s3[two](8)
  20 ResultRow        4    2    0               00 output=r[4..5]
REG[4] =   s1[a](8)
REG[5] =   s3[two](8)
  21 Next             1   18    0               00 
  18 Column           1    2    4               00 r[4]=a
REG[4] =   s1[a](8)
  19 Column           1    3    5               00 r[5]=b
REG[5] =  i:2
  20 ResultRow        4    2    0               00 output=r[4..5]
REG[4] =   s1[a](8)
REG[5] =  i:2
  21 Next             1   18    0               00 
  22 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 ORDER BY b LIMIT 10 OFFSET 5
;]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    0    2 0             01 usesStmtJournal=0
  28 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  29 Goto             0    1    0               00 
   1 OpenEphemeral    1    4    0 k(1,B)        00 nColumn=4
   2 Integer         10    1    0               00 r[1]=10; LIMIT counter
REG[1] =  i:10
   3 Integer          5    2    0               00 r[2]=5
REG[2] =  i:5
   4 MustBeInt        2    0    0               00 OFFSET counter
REG[2] =  i:5
   5 OffsetLimit      1    3    2               00 if r[1]>0 then r[3]=r[1]+max(0,r[2]) else r[3]=(-1); LIMIT+OFFSET
REG[1] =  i:10
REG[2] =  i:5
REG[3] =  i:15
   6 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   7 Explain          0    0    0 SCAN TABLE t1 00 
   8 Rewind           0   19    0               00 
   9 Column           0    0    6               00 r[6]=t1.a
REG[6] =   s1[a](8)
  10 Column           0    1    7               00 r[7]=t1.b
REG[7] =   s3[two](8)
  11 Copy             7    4    0               00 r[4]=r[7]
REG[4] =   s3[two](8)
  12 Sequence         1    5    0               00 r[5]=cursor[1].ctr++
REG[5] =  i:0
  13 MakeRecord       4    4    8               00 r[8]=mkrec(r[4..7])
REG[8] =  s12[0513080F1374776F6174776F.....twoatwo](8)
  14 IdxInsert        1    8    0               00 key=r[8]
REG[8] =  s12[0513080F1374776F6174776F.....twoatwo](8)
  15 IfNotZero        3   18    1               00 if r[3]!=0 then r[3]-=1, goto 18
REG[3] =  i:15
  18 Next             0    9    0               01 
   9 Column           0    0    6               00 r[6]=t1.a
REG[6] =   s1[a](8)
  10 Column           0    1    7               00 r[7]=t1.b
REG[7] =  i:2
  11 Copy             7    4    0               00 r[4]=r[7]
REG[4] =  i:2
  12 Sequence         1    5    0               00 r[5]=cursor[1].ctr++
REG[5] =  i:1
  13 MakeRecord       4    4    8               00 r[8]=mkrec(r[4..7])
REG[8] =  s8[0501090F01026102......a.](8)
  14 IdxInsert        1    8    0               00 key=r[8]
REG[8] =  s8[0501090F01026102......a.](8)
  15 IfNotZero        3   18    1               00 if r[3]!=0 then r[3]-=1, goto 18
REG[3] =  i:14
  18 Next             0    9    0               01 
  19 Close            0    0    0               00 
  20 Sort             1   26    0               00 
  21 IfPos            2   25    1               00 if r[2]>0 then r[2]-=1, goto 25; OFFSET
REG[2] =  i:5
  25 Next             1   21    0               00 
  21 IfPos            2   25    1               00 if r[2]>0 then r[2]-=1, goto 25; OFFSET
REG[2] =  i:4
  25 Next             1   21    0               00 
  26 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 UNION SELECT b, b FROM t1 LIMIT 10 OFFSET 5
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    2 0             01 usesStmtJournal=0
  34 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  35 Goto             0    1    0               00 
   1 OpenEphemeral    2    2    0 k(2,B,B)      00 nColumn=2
   2 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   3 Explain          1    0    0 SCAN TABLE t1 00 
   4 Rewind           1   10    0               00 
   5 Column           1    0    1               00 r[1]=t1.a
REG[1] =   s1[a](8)
   6 Column           1    1    2               00 r[2]=t1.b
REG[2] =   s3[two](8)
   7 MakeRecord       1    2    3               00 r[3]=mkrec(r[1..2])
REG[3] =  s7[030F136174776F...atwo](8)
   8 IdxInsert        2    3    0               00 key=r[3]
REG[3] =  s7[030F136174776F...atwo](8)
   9 Next             1    5    0               01 
   5 Column           1    0    1               00 r[1]=t1.a
REG[1] =   s1[a](8)
   6 Column           1    1    2               00 r[2]=t1.b
REG[2] =  i:2
   7 MakeRecord       1    2    3               00 r[3]=mkrec(r[1..2])
REG[3] =  s5[030F016102...a.](8)
   8 IdxInsert        2    3    0               00 key=r[3]
REG[3] =  s5[030F016102...a.](8)
   9 Next             1    5    0               01 
  10 Close            1    0    0               00 
  11 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
  12 Explain          2    0    0 SCAN TABLE t1 00 
  13 Rewind           0   19    0               00 
  14 Column           0    1    1               00 r[1]=t1.b
REG[1] =   s3[two](8)
  15 SCopy            1    2    0               00 r[2]=r[1]
REG[2] =   e3[two](8)
  16 MakeRecord       1    2    3               00 r[3]=mkrec(r[1..2])
REG[3] =  s9[03131374776F74776F...twotwo](8)
  17 IdxInsert        2    3    0               00 key=r[3]
REG[3] =  s9[03131374776F74776F...twotwo](8)
  18 Next             0   14    0               01 
  14 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:2
  15 SCopy            1    2    0               00 r[2]=r[1]
REG[2] =  i:2
  16 MakeRecord       1    2    3               00 r[3]=mkrec(r[1..2])
REG[3] =  s5[0301010202.....](8)
  17 IdxInsert        2    3    0               00 key=r[3]
REG[3] =  s5[0301010202.....](8)
  18 Next             0   14    0               01 
  19 Close            0    0    0               00 
  20 Integer         10    4    0               00 r[4]=10; LIMIT counter
REG[4] =  i:10
  21 Integer          5    5    0               00 r[5]=5
REG[5] =  i:5
  22 MustBeInt        5    0    0               00 OFFSET counter
REG[5] =  i:5
  23 OffsetLimit      4    6    5               00 if r[4]>0 then r[6]=r[4]+max(0,r[5]) else r[6]=(-1); LIMIT+OFFSET
REG[4] =  i:10
REG[5] =  i:5
REG[6] =  i:15
  24 Rewind           2   31    0               00 
  25 IfPos            5   30    1               00 if r[5]>0 then r[5]-=1, goto 30; OFFSET
REG[5] =  i:5
  30 Next             2   25    0               00 
  25 IfPos            5   30    1               00 if r[5]>0 then r[5]-=1, goto 30; OFFSET
REG[5] =  i:4
  30 Next             2   25    0               00 
  25 IfPos            5   30    1               00 if r[5]>0 then r[5]-=1, goto 30; OFFSET
REG[5] =  i:3
  30 Next             2   25    0               00 
  25 IfPos            5   30    1               00 if r[5]>0 then r[5]-=1, goto 30; OFFSET
REG[5] =  i:2
  30 Next             2   25    0               00 
  31 Noop             2    0    0               00 
  32 Halt             0    0    0               00 
SQL: [SELECT count(*) WHERE 1
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   3 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   6 Halt             0    0    0               00 
SQL: [CREATE TABLE t1i1(t2i1, temp3);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    2 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t1i1          00 r[7]='t1i1'
REG[7] =   t4[t1i1](8)
  21 String8          0    8    0 t1i1          00 r[8]='t1i1'
REG[8] =   t4[t1i1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE t1i1(t2i1, temp3) 00 r[10]='CREATE TABLE t1i1(t2i1, temp3)'
REG[10] =   t30[CREATE TABLE t1](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s50[0617151501497461626C657431693174.....Itablet1i1t](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s50[0617151501497461626C657431693174.....Itablet1i1t](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    3               00 
  28 ParseSchema      0    0    0 tbl_name='t1i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t1i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s30[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t1i1](8)
REG[6] =  i:4
REG[7] =   s30[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;INSERT INTO t1i1 VALUES(-17.89, 'linguistically');]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    3 0             01 usesStmtJournal=0
  10 TableLock        0    4    1 t1i1          00 iDb=0 root=4 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; t1i1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Real             0    2    0 -17.89        00 r[2]=-17.89
REG[2] =  r:-17.89
   4 String8          0    3    0 linguistically 00 r[3]='linguistically'
REG[3] =   t14[linguistically](8)
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s25[030729C031E3D70A3D70A46C696E6775..).1...=p.lingu](8)
   6 Insert           0    4    1 t1i1          1B intkey=r[1] data=r[4]
REG[4] =  s25[030729C031E3D70A3D70A46C696E6775..).1...=p.lingu](8)
REG[1] =  i:1
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;SELECT quote(t3), quote(t3) FROM x
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 0             01 usesStmtJournal=0
  13 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; x
   2 Explain          0    0    0 SCAN TABLE x  00 
   3 Rewind           0   10    0               00 
   4 Column           0    1    3               00 r[3]=x.t3
REG[3] =  NULL
   5 Function0        0    3    1 quote(1)      01 r[1]=func(r[3])
REG[3] =  NULL
REG[1] =   t4[NULL](8)
   6 Column           0    1    3               00 r[3]=x.t3
REG[3] =  NULL
   7 Function0        0    3    2 quote(1)      01 r[2]=func(r[3])
REG[3] =  NULL
REG[2] =   t4[NULL](8)
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   s4[NULL](8)
REG[2] =   s4[NULL](8)
   9 Next             0    4    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;CREATE TABLE t4(c, t5, temp5, temp4);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t4            00 r[7]='t4'
REG[7] =   t2[t4](8)
  21 String8          0    8    0 t4            00 r[8]='t4'
REG[8] =   t2[t4](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE t4(c, t5, temp5, temp4) 00 r[10]='CREATE TABLE t4(c, t5, temp5, temp4)'
REG[10] =   t36[CREATE TABLE t4](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s52[0617111101557461626C657434743405.....Utablet4t4.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s52[0617111101557461626C657434743405.....Utablet4t4.](8)
REG[5] =  i:4
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='t4' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t4            00 r[2]='t4'
REG[2] =   t2[t4](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t4](8)
REG[1] =   s2[t4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s36[CREATE TABLE t4](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t4](8)
REG[6] =  i:5
REG[7] =   s36[CREATE TABLE t4](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [SELECT * FROM t4 , x LIMIT 1

;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    4 0             01 usesStmtJournal=0
  22 TableLock        0    5    0 t4            00 iDb=0 root=5 write=0
  23 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  24 Goto             0    1    0               00 
   1 Integer          1    1    0               00 r[1]=1; LIMIT counter
REG[1] =  i:1
   2 OpenRead         0    5    0 4             00 root=5 iDb=0; t4
   3 OpenRead         1    3    0 2             00 root=3 iDb=0; x
   4 Explain          0    0    0 SCAN TABLE t4 00 
   5 Rewind           0   18    0               00 
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM t4 INNER JOIN t1 LIMIT 1

;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    4 0             01 usesStmtJournal=0
  22 TableLock        0    5    0 t4            00 iDb=0 root=5 write=0
  23 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  24 Goto             0    1    0               00 
   1 Integer          1    1    0               00 r[1]=1; LIMIT counter
REG[1] =  i:1
   2 OpenRead         0    5    0 4             00 root=5 iDb=0; t4
   3 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
   4 Explain          0    0    0 SCAN TABLE t4 00 
   5 Rewind           0   18    0               00 
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT * FROM x CROSS JOIN t1i1 LIMIT 1

;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    4 0             01 usesStmtJournal=0
  20 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  21 TableLock        0    4    0 t1i1          00 iDb=0 root=4 write=0
  22 Goto             0    1    0               00 
   1 Integer          1    1    0               00 r[1]=1; LIMIT counter
REG[1] =  i:1
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; x
   3 OpenRead         1    4    0 2             00 root=4 iDb=0; t1i1
   4 Explain          0    0    0 SCAN TABLE x  00 
   5 Rewind           0   16    0               00 
   6 Explain          0    1    1 SCAN TABLE t1i1 00 
   7 Rewind           1   15    0               00 
   8 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   9 Column           0    1    3               00 r[3]=x.t3
REG[3] =  NULL
  10 Column           1    0    4               00 r[4]=t1i1.t2i1
REG[4] =  r:-17.89
  11 Column           1    1    5               00 r[5]=t1i1.temp3
REG[5] =   s14[linguistically](8)
  12 ResultRow        2    4    0               00 output=r[2..5]
REG[2] =  i:1
REG[3] =  NULL
REG[4] =  r:-17.89
REG[5] =   s14[linguistically](8)
  13 DecrJumpZero     1   16    0               00 if (--r[1])==0 goto 16
REG[1] =  i:1
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM t1i1 CROSS JOIN t1i1 

;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             01 usesStmtJournal=0
  18 TableLock        0    4    0 t1i1          00 iDb=0 root=4 write=0
  19 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 0             00 root=4 iDb=0; t1i1
   3 OpenRead         1    4    0 0             00 root=4 iDb=0; t1i1
   4 Explain          0    0    0 SCAN TABLE t1i1 00 
   5 Rewind           0   11    0               00 
   6 Explain          0    1    1 SCAN TABLE t1i1 00 
   7 Rewind           1   10    0               00 
   8 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   9 Next             1    8    0               01 
  10 Next             0    6    0               01 
  11 Close            0    0    0               00 
  12 Close            1    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
  15 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
  16 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM x INNER JOIN x 

;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    4 0             01 usesStmtJournal=0
  18 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  19 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 0             00 root=3 iDb=0; x
   3 OpenRead         1    3    0 0             00 root=3 iDb=0; x
   4 Explain          0    0    0 SCAN TABLE x  00 
   5 Rewind           0   11    0               00 
   6 Explain          0    1    1 SCAN TABLE x  00 
   7 Rewind           1   10    0               00 
   8 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   9 Next             1    8    0               01 
  10 Next             0    6    0               01 
  11 Close            0    0    0               00 
  12 Close            1    0    0               00 
  13 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  14 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
  15 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
  16 Halt             0    0    0               00 
SQL: [SELECT * FROM x CROSS JOIN t1i1 ON (0) 
;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    4 0             01 usesStmtJournal=0
  19 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  20 TableLock        0    4    0 t1i1          00 iDb=0 root=4 write=0
  21 Goto             0    1    0               00 
   1 Goto             0   15    0               00 
  15 Close            0    0    0               00 
  16 Close            1    0    0               00 
  17 Halt             0    0    0               00 
SQL: [SELECT * FROM x , x USING (t3,t2) 
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    4 0             01 usesStmtJournal=0
  20 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  21 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; x
   2 OpenRead         1    3    0 2             00 root=3 iDb=0; x
   3 Explain          0    0    0 SCAN TABLE x  00 
   4 Rewind           0   16    0               00 
   5 Explain          0    1    1 SEARCH TABLE x USING INTEGER PRIMARY KEY (rowid=?) 00 
   6 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:1
   7 MustBeInt        1   15    0               00 
REG[1] =  i:1
   8 NotExists        1   15    1               00 intkey=r[1]; pk
REG[1] =  i:1
   9 Column           0    1    2               00 r[2]=x.t3
REG[2] =  NULL
  10 Column           1    1    3               00 r[3]=x.t3
REG[3] =  NULL
  11 Ne               3   15    2 (BINARY)      51 if r[3]!=r[2] goto 15
REG[3] =  NULL
REG[2] =  NULL
  15 Next             0    5    0               01 
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fc753aa0859 in __GI_abort () at abort.c:79
#2  0x00007fc753aa0729 in __assert_fail_base (fmt=0x7fc753c36588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007fc753ab1fd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x1fe6720, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x1ff2ca0, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x1ff2ca0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x1fd54c0, 
    zSql=0x1ff61f0 "SELECT * FROM (SELECT t2 COLLATE nocase, t2 FROM x) AS t1i1\n       CROSS JOIN x ON (t1i1.t2=x.t2) \n;CREATE TABLE t1_tr(t11, t11a, t0);;CREATE TABLE c0(c1, parent, p);SELECT * FROM x NATURAL LEFT JOIN "..., pzErrMsg=0x7fffdbf8fd98) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x1fd4c90, 
    zSql=0x1fd6a63 "SELECT * FROM (SELECT t2 COLLATE nocase, t2 FROM x) AS t1i1\n       CROSS JOIN x ON (t1i1.t2=x.t2) \n;CREATE TABLE t1_tr(t11, t11a, t0);;CREATE TABLE c0(c1, parent, p);SELECT * FROM x NATURAL LEFT JOIN "..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fffdbf8fec8, pzTail=0x7fffdbf8feb0) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1fd4c90, 
    zSql=0x1fd6a63 "SELECT * FROM (SELECT t2 COLLATE nocase, t2 FROM x) AS t1i1\n       CROSS JOIN x ON (t1i1.t2=x.t2) \n;CREATE TABLE t1_tr(t11, t11a, t0);;CREATE TABLE c0(c1, parent, p);SELECT * FROM x NATURAL LEFT JOIN "..., nBytes=5232, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fffdbf8feb0) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7fffdbf8f380 "", nBytes=0, ppStmt=0x7fffdbf8fec8, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7fffdbf90078) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 34613] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
