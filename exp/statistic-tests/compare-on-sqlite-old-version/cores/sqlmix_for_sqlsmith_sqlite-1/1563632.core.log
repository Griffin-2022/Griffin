GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000443,sig:06,src:022925+021403,time:26229545,execs:8625552,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT DISTINCT 1, 2, 3 GROUP BY 2
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 OpenEphemeral    0    0    0 k(3,B,B,B)    08 nColumn=0
   2 Noop             1    1    0               00 
   3 Integer          0    2    0               00 r[2]=0; clear abort flag
REG[2] =  i:0
   4 Integer          0    1    0               00 r[1]=0; indicate accumulator empty
REG[1] =  i:0
   5 Null             0    5    5               00 r[5..5]=NULL
REG[5] =  NULL
   6 Gosub            4   29    0               00 
REG[4] =  i:6
  29 Return           4    0    0               00 
REG[4] =  i:6
   7 Integer          2    6    0               00 r[6]=2
REG[6] =  i:2
   8 Compare          5    6    1 k(1,B)        00 r[5] <-> r[6]
REG[5] =  NULL
REG[6] =  i:2
   9 Jump            10   14   10               00 
  10 Move             6    5    1               00 r[5]=r[6]
REG[5] =  i:2
  11 Gosub            3   19    0               00 output one row
REG[3] =  i:11
  19 IfPos            1   21    0               00 if r[1]>0 then r[1]-=0, goto 21; Groupby result generator entry point
REG[1] =  i:0
  20 Return           3    0    0               00 
REG[3] =  i:11
  12 IfPos            2   30    0               00 if r[2]>0 then r[2]-=0, goto 30; check abort flag
REG[2] =  i:0
  13 Gosub            4   29    0               00 reset accumulator
REG[4] =  i:13
  29 Return           4    0    0               00 
REG[4] =  i:13
  14 Integer          1    1    0               00 r[1]=1; indicate data in accumulator
REG[1] =  i:1
  15 Gosub            3   19    0               00 output final row
REG[3] =  i:15
  19 IfPos            1   21    0               00 if r[1]>0 then r[1]-=0, goto 21; Groupby result generator entry point
REG[1] =  i:1
  21 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
  22 Integer          2    8    0               00 r[8]=2
REG[8] =  i:2
  23 Integer          3    9    0               00 r[9]=3
REG[9] =  i:3
  24 Found            0   20    7 3             00 key=r[7..9]
REG[7] =  i:1
REG[8] =  i:2
REG[9] =  i:3
  25 MakeRecord       7    3   10               00 r[10]=mkrec(r[7..9])
REG[10] =  s6[040901010203......](8)
  26 IdxInsert        0   10    0               00 key=r[10]
REG[10] =  s6[040901010203......](8)
  27 ResultRow        7    3    0               00 output=r[7..9]
REG[7] =  i:1
REG[8] =  i:2
REG[9] =  i:3
  28 Return           3    0    0               00 end groupby result generator
REG[3] =  i:15
  16 Goto             0   30    0               00 
  30 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 GROUP BY 2 HAVING count(*)>1
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  32 Goto             0    1    0               00 
   1 Noop             0    1    0               00 
   2 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   3 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   4 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   5 Gosub            5   28    0               00 
REG[5] =  i:5
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:5
   6 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
   7 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:2
   8 Jump             9   13    9               00 
   9 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:2
  10 Gosub            4   19    0               00 output one row
REG[4] =  i:10
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:0
  20 Return           4    0    0               00 
REG[4] =  i:10
  11 IfPos            3   30    0               00 if r[3]>0 then r[3]-=0, goto 30; check abort flag
REG[3] =  i:0
  12 Gosub            5   28    0               00 reset accumulator
REG[5] =  i:12
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:12
  13 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  14 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  15 Gosub            4   19    0               00 output final row
REG[4] =  i:15
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:1
  21 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  22 Le               9   20    1               51 if r[9]<=r[1] goto 20
REG[9] =  i:1
REG[1] =  i:1
  20 Return           4    0    0               00 
REG[4] =  i:15
  16 Goto             0   30    0               00 
  30 Halt             0    0    0               00 
SQL: [SELECT DISTINCT 1, 2, 3 WHERE NULL GROUP BY 2 HAVING count(*)>1
;]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  37 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  38 Goto             0    1    0               00 
   1 OpenEphemeral    0    0    0 k(3,B,B,B)    08 nColumn=0
   2 Noop             1    1    0               00 
   3 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   4 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   5 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   6 Gosub            5   33    0               00 
REG[5] =  i:6
  33 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  34 Return           5    0    0               00 
REG[5] =  i:6
   7 IfNot            8   17    1               00 
REG[8] =  NULL
  17 Gosub            4   21    0               00 output final row
REG[4] =  i:17
  21 IfPos            2   23    0               00 if r[2]>0 then r[2]-=0, goto 23; Groupby result generator entry point
REG[2] =  i:0
  22 Return           4    0    0               00 
REG[4] =  i:17
  18 Goto             0   35    0               00 
  35 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 WHERE 'abc' GROUP BY 2 HAVING count(*)>1
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 String8          0    8    0 abc           00 r[8]='abc'
REG[8] =   t6[.a.b.c](16BE)
  33 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  34 Goto             0    1    0               00 
   1 Noop             0    1    0               00 
   2 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   3 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   4 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   5 Gosub            5   29    0               00 
REG[5] =  i:5
  29 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  30 Return           5    0    0               00 
REG[5] =  i:5
   6 IfNot            8   16    1               00 
REG[8] =   t6[.a.b.c](16BE)
  16 Gosub            4   20    0               00 output final row
REG[4] =  i:16
  20 IfPos            2   22    0               00 if r[2]>0 then r[2]-=0, goto 22; Groupby result generator entry point
REG[2] =  i:0
  21 Return           4    0    0               00 
REG[4] =  i:16
  17 Goto             0   31    0               00 
  31 Halt             0    0    0               00 
SQL: [SELECT NULL
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   3 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f1e32a6a859 in __GI_abort () at abort.c:79
#2  0x00007f1e32a6a729 in __assert_fail_base (fmt=0x7f1e32c00588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007f1e32a7bfd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x204edd0, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x20d74d0, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x20d74d0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x204f460, 
    zSql=0x20d5380 "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) CROSS JOIN t1 USING (a) \n;PRAGMA foreign_keys\n;;CREATE TABLE b(t2, x, t3);SELECT a FROM t1 WHERE a \n;SELECT a FROM t1 LEFT JOIN t1 USING(a) WHERE t1."..., pzErrMsg=0x7ffc9aa4b0a8) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x203c850, 
    zSql=0x203d9de "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) CROSS JOIN t1 USING (a) \n;PRAGMA foreign_keys\n;;CREATE TABLE b(t2, x, t3);SELECT a FROM t1 WHERE a \n;SELECT a FROM t1 LEFT JOIN t1 USING(a) WHERE t1."..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffc9aa4b1d8, pzTail=0x7ffc9aa4b1c0) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x203c850, 
    zSql=0x203d9de "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) CROSS JOIN t1 USING (a) \n;PRAGMA foreign_keys\n;;CREATE TABLE b(t2, x, t3);SELECT a FROM t1 WHERE a \n;SELECT a FROM t1 LEFT JOIN t1 USING(a) WHERE t1."..., nBytes=1277, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffc9aa4b1c0) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffc9aa4a690 "", nBytes=0, ppStmt=0x7ffc9aa4b1d8, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffc9aa4b388) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 35587] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
