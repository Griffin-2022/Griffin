GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000114,sig:08,src:019657+020994,time:4041315,execs:698485,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT 1, 2, 3 GROUP BY 2 HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  32 Goto             0    1    0               00 
   1 Noop             0    1    0               00 
   2 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   3 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   4 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   5 Gosub            5   28    0               00 
REG[5] =  i:5
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:5
   6 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
   7 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:2
   8 Jump             9   13    9               00 
   9 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:2
  10 Gosub            4   19    0               00 output one row
REG[4] =  i:10
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:0
  20 Return           4    0    0               00 
REG[4] =  i:10
  11 IfPos            3   30    0               00 if r[3]>0 then r[3]-=0, goto 30; check abort flag
REG[3] =  i:0
  12 Gosub            5   28    0               00 reset accumulator
REG[5] =  i:12
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:12
  13 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  14 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  15 Gosub            4   19    0               00 output final row
REG[4] =  i:15
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:1
  21 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  22 Ne               9   20    1               51 if r[9]!=r[1] goto 20
REG[9] =  i:1
REG[1] =  i:1
  23 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  24 Integer          2   11    0               00 r[11]=2
REG[11] =  i:2
  25 Integer          3   12    0               00 r[12]=3
REG[12] =  i:3
  26 ResultRow       10    3    0               00 output=r[10..12]
REG[10] =  i:1
REG[11] =  i:2
REG[12] =  i:3
  27 Return           4    0    0               00 end groupby result generator
REG[4] =  i:15
  16 Goto             0   30    0               00 
  30 Halt             0    0    0               00 
SQL: [;INSERT INTO t1(b) VALUES(NULL);]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    1    3 0             01 usesStmtJournal=0
  16 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  17 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  18 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   2 OpenWrite        1    4    0 k(3,,,)       00 root=4 iDb=0; x
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   5 SCopy            3    5    0               00 r[5]=r[3]; b
REG[5] =  NULL
   6 SCopy            3    6    0               00 r[6]=r[3]; b
REG[6] =  NULL
   7 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
   8 MakeRecord       5    3    4               00 r[4]=mkrec(r[5..7]); for x
REG[4] =  s4[04000009....](8)
   9 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[04000009....](8)
  10 MakeRecord       2    2    8               00 r[8]=mkrec(r[2..3])
REG[8] =  s3[030000...](8)
  11 Insert           0    8    1 t1            1B intkey=r[1] data=r[8]
REG[8] =  s3[030000...](8)
REG[1] =  i:1
  12 Close            0    0    0               00 
  13 Noop             1    0    0               00 
  14 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 GROUP BY 2 HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  32 Goto             0    1    0               00 
   1 Noop             0    1    0               00 
   2 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   3 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   4 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   5 Gosub            5   28    0               00 
REG[5] =  i:5
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:5
   6 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
   7 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:2
   8 Jump             9   13    9               00 
   9 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:2
  10 Gosub            4   19    0               00 output one row
REG[4] =  i:10
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:0
  20 Return           4    0    0               00 
REG[4] =  i:10
  11 IfPos            3   30    0               00 if r[3]>0 then r[3]-=0, goto 30; check abort flag
REG[3] =  i:0
  12 Gosub            5   28    0               00 reset accumulator
REG[5] =  i:12
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:12
  13 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  14 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  15 Gosub            4   19    0               00 output final row
REG[4] =  i:15
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:1
  21 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  22 Ne               9   20    1               51 if r[9]!=r[1] goto 20
REG[9] =  i:1
REG[1] =  i:1
  23 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  24 Integer          2   11    0               00 r[11]=2
REG[11] =  i:2
  25 Integer          3   12    0               00 r[12]=3
REG[12] =  i:3
  26 ResultRow       10    3    0               00 output=r[10..12]
REG[10] =  i:1
REG[11] =  i:2
REG[12] =  i:3
  27 Return           4    0    0               00 end groupby result generator
REG[4] =  i:15
  16 Goto             0   30    0               00 
  30 Halt             0    0    0               00 
SQL: [SELECT ALL 1, 2, 3 GROUP BY 2 HAVING count(*)>1
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Integer          1    9    0               00 r[9]=1
REG[9] =  i:1
  32 Goto             0    1    0               00 
   1 Noop             0    1    0               00 
   2 Integer          0    3    0               00 r[3]=0; clear abort flag
REG[3] =  i:0
   3 Integer          0    2    0               00 r[2]=0; indicate accumulator empty
REG[2] =  i:0
   4 Null             0    6    6               00 r[6..6]=NULL
REG[6] =  NULL
   5 Gosub            5   28    0               00 
REG[5] =  i:5
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:5
   6 Integer          2    7    0               00 r[7]=2
REG[7] =  i:2
   7 Compare          6    7    1 k(1,B)        00 r[6] <-> r[7]
REG[6] =  NULL
REG[7] =  i:2
   8 Jump             9   13    9               00 
   9 Move             7    6    1               00 r[6]=r[7]
REG[6] =  i:2
  10 Gosub            4   19    0               00 output one row
REG[4] =  i:10
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:0
  20 Return           4    0    0               00 
REG[4] =  i:10
  11 IfPos            3   30    0               00 if r[3]>0 then r[3]-=0, goto 30; check abort flag
REG[3] =  i:0
  12 Gosub            5   28    0               00 reset accumulator
REG[5] =  i:12
  28 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
  29 Return           5    0    0               00 
REG[5] =  i:12
  13 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  14 Integer          1    2    0               00 r[2]=1; indicate data in accumulator
REG[2] =  i:1
  15 Gosub            4   19    0               00 output final row
REG[4] =  i:15
  19 IfPos            2   21    0               00 if r[2]>0 then r[2]-=0, goto 21; Groupby result generator entry point
REG[2] =  i:1
  21 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  22 Le               9   20    1               51 if r[9]<=r[1] goto 20
REG[9] =  i:1
REG[1] =  i:1
  20 Return           4    0    0               00 
REG[4] =  i:15
  16 Goto             0   30    0               00 
  30 Halt             0    0    0               00 

Program received signal SIGFPE, Arithmetic exception.
0x000000000039b265 in whereLoopAddBtree (pBuilder=<optimized out>, mPrereq=0) at sqlite3.c:128710
128710	        pNew->rRun = rSize + 1 + (15*pProbe->szIdxRow)/pTab->szTabRow;
(gdb) #0  0x000000000039b265 in whereLoopAddBtree (pBuilder=<optimized out>, mPrereq=0) at sqlite3.c:128710
#1  0x000000000038dbe4 in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x0, wctrlFlags=256, iAuxArg=0) at sqlite3.c:129185
#2  0x000000000032a319 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118186
#3  0x00000000003034ae in yy_reduce (yypParser=0x1dc4660, yyruleno=<optimized out>) at sqlite3.c:133175
#4  0x00000000002fef8e in sqlite3Parser (yyp=0x1dc4660, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#5  0x00000000002fc544 in sqlite3RunParser (pParse=0x1da4350, 
    zSql=0x1dc3b90 "SELECT DISTINCT count(*), max(b) FROM t1 \n", ' ' <repeats 11 times>, "GROUP BY b HAVING count(*)=2\n;SELECT 1, 2, 3 WHERE 1 GROUP BY 2\n;SELECT DISTINCT 1, 2, 3 WHERE NULL GROUP BY 2 HAVING count(*)>1\n;SELECT ALL 1, 2, "..., pzErrMsg=0x7fff434888f8) at sqlite3.c:135186
#6  0x00000000002fac4e in sqlite3Prepare (db=0x1da4ea0, 
    zSql=0x1da596b "SELECT DISTINCT count(*), max(b) FROM t1 \n", ' ' <repeats 11 times>, "GROUP BY b HAVING count(*)=2\n;SELECT 1, 2, 3 WHERE 1 GROUP BY 2\n;SELECT DISTINCT 1, 2, 3 WHERE NULL GROUP BY 2 HAVING count(*)>1\n;SELECT ALL 1, 2, "..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff43488a28, pzTail=0x7fff43488a10) at sqlite3.c:112589
#7  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1da4ea0, 
    zSql=0x1da596b "SELECT DISTINCT count(*), max(b) FROM t1 \n", ' ' <repeats 11 times>, "GROUP BY b HAVING count(*)=2\n;SELECT 1, 2, 3 WHERE 1 GROUP BY 2\n;SELECT DISTINCT 1, 2, 3 WHERE NULL GROUP BY 2 HAVING count(*)>1\n;SELECT ALL 1, 2, "..., nBytes=2752, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff43488a10) at sqlite3.c:112688
#8  0x000000000028f38c in sqlite3_prepare_v2 (db=0xfffffffffffffffd, zSql=0x0, nBytes=0, ppStmt=0x7fff43488a28, pzTail=<optimized out>) at sqlite3.c:112764
#9  0x000000000024b100 in main (argc=1, argv=0x7fff43488bd8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 32949] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
