GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000445,sig:08,src:020580+019670,time:26627597,execs:8797394,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT rowid, x FROM b WHERE 5.5<=rowid
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    4 3             01 usesStmtJournal=0
  11 TableLock        0    3    0 b             00 iDb=0 root=3 write=0
  12 Real             0    1    0 5.5           00 r[1]=5.5
REG[1] =  r:5.5
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   2 Explain          0    0    0 SEARCH TABLE b USING INTEGER PRIMARY KEY (rowid>?) 00 
   3 SeekGE           0    8    1               00 key=r[1]; pk
REG[1] =  r:5.5
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    4 3             01 usesStmtJournal=0
  34 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  35 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:4
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  21 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  25 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:4
  26 Close            3    0    0               00 
  27 SetCookie        0    1    5               00 
  28 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:4
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  30 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 3             01 usesStmtJournal=0
  12 TableLock        0    4    0 sqlite_stat1  00 iDb=0 root=4 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  31 Expire           0    0    0               00 
  32 Halt             0    0    0               00 
SQL: [;
;DELETE FROM sqlite_stat1;]
VDBE Trace:
   0 Init             0    3    0               00 Start at 3
   3 Transaction      0    1    5 3             01 usesStmtJournal=0
   4 TableLock        0    4    1 sqlite_stat1  00 iDb=0 root=4 write=1
   5 Goto             0    1    0               00 
   1 Clear            4    0   -1 sqlite_stat1  00 
   2 Halt             0    0    0               00 
SQL: [SELECT rowid, x FROM b WHERE rowid>=5.0 ORDER BY rowid DESC
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    5 3             01 usesStmtJournal=0
  15 TableLock        0    3    0 b             00 iDb=0 root=3 write=0
  16 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   3 Explain          0    0    0 SEARCH TABLE b USING INTEGER PRIMARY KEY (rowid>?) 00 
   4 Last             0   12    0               00 
   5 Real             0    1    0 5             00 r[1]=5
REG[1] =  r:5
   6 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   7 Lt               1   12    2               53 if r[1]<r[2] goto 12
REG[1] =  r:5
REG[2] =  i:1
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;INSERT INTO b(x) SELECT x||x||x||x FROM b;]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    1    5 3             01 usesStmtJournal=0
  30 TableLock        0    3    1 b             00 iDb=0 root=3 write=1
  31 Goto             0    1    0               00 
   1 InitCoroutine    3   13    2               00 
  13 OpenEphemeral    1    1    0               00 nColumn=1
  14 Yield            3   19    0               00 
REG[3] =  i:1
REG[3] =  i:14
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   3 Explain          0    0    0 SCAN TABLE b  00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    6               00 r[6]=b.x
REG[6] =  i:2
   6 Concat           6    6    5               00 r[5]=r[6]+r[6]
REG[6] =  i:2
REG[6] =  i:2
REG[5] =   s2[22](8)
   7 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =  si:2
REG[5] =   s2[22](8)
REG[4] =   s3[222](8)
   8 Concat           6    4    2               00 r[2]=r[4]+r[6]
REG[6] =  si:2
REG[4] =   s3[222](8)
REG[2] =   s4[2222](8)
   9 Yield            3    0    0               00 
REG[3] =  i:14
REG[3] =  i:9
  15 MakeRecord       2    1    8               00 r[8]=mkrec(r[2])
REG[8] =  s6[021532323232..2222](8)
  16 NewRowid         1    9    0               00 r[9]=rowid
REG[9] =  i:1
  17 Insert           1    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s6[021532323232..2222](8)
REG[9] =  i:1
  18 Goto             0   14    0               00 
  14 Yield            3   19    0               00 
REG[3] =  i:9
REG[3] =  i:14
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 EndCoroutine     3    0    0               00 
REG[3] =  i:14
  19 OpenWrite        2    3    0 1             00 root=3 iDb=0; b
  20 Rewind           1   26    0               00 
  21 NewRowid         2    1    0               00 r[1]=rowid
REG[1] =  i:2
  22 Column           1    0    2               00 r[2]=
REG[2] =   s4[2222](8)
  23 MakeRecord       2    1    9               00 r[9]=mkrec(r[2])
REG[9] =  s6[021532323232..2222](8)
  24 Insert           2    9    1 b             1B intkey=r[1] data=r[9]
REG[9] =  s6[021532323232..2222](8)
REG[1] =  i:2
  25 Next             1   21    0               00 
  26 Close            1    0    0               00 
  27 Noop             2    0    0               00 
  28 Halt             0    0    0               00 
SQL: [;PRAGMA sql_trace=off;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT rowid, x FROM b WHERE rowid<5.5 ORDER BY rowid DESC
;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 3             01 usesStmtJournal=0
  12 TableLock        0    3    0 b             00 iDb=0 root=3 write=0
  13 Real             0    1    0 5.5           00 r[1]=5.5
REG[1] =  r:5.5
  14 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; b
   3 Explain          0    0    0 SEARCH TABLE b USING INTEGER PRIMARY KEY (rowid<?) 00 
   4 SeekLT           0    9    1               00 key=r[1]; pk
REG[1] =  r:5.5
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 Column           0    0    3               00 r[3]=b.x
REG[3] =   s4[2222](8)
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:2
REG[3] =   s4[2222](8)
   8 Prev             0    5    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Column           0    0    3               00 r[3]=b.x
REG[3] =  i:2
   7 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:1
REG[3] =  i:2
   8 Prev             0    5    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;INSERT INTO sqlite_stat1 VALUES('b',null,'sz=0');]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    1    5 3             01 usesStmtJournal=0
  11 TableLock        0    4    1 sqlite_stat1  00 iDb=0 root=4 write=1
  12 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
   4 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   5 String8          0    4    0 sz=0          00 r[4]='sz=0'
REG[4] =   t4[sz=0](8)
   6 MakeRecord       2    3    5               00 r[5]=mkrec(r[2..4])
REG[5] =  s9[040F001562737A3D30....bsz=0](8)
   7 Insert           0    5    1 sqlite_stat1  1B intkey=r[1] data=r[5]
REG[5] =  s9[040F001562737A3D30....bsz=0](8)
REG[1] =  i:1
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [CREATE TABLE t2i1(temp3);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    5 3             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t2i1          00 r[7]='t2i1'
REG[7] =   t4[t2i1](8)
  21 String8          0    8    0 t2i1          00 r[8]='t2i1'
REG[8] =   t4[t2i1](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  23 String8          0   10    0 CREATE TABLE t2i1(temp3) 00 r[10]='CREATE TABLE t2i1(temp3)'
REG[10] =   t24[CREATE TABLE t2](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s44[06171515013D7461626C657432693174.....=tablet2i1t](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s44[06171515013D7461626C657432693174.....=tablet2i1t](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    6               00 
  28 ParseSchema      0    0    0 tbl_name='t2i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t2i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s24[CREATE TABLE t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t2i1](8)
REG[6] =  i:5
REG[7] =   s24[CREATE TABLE t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    6 3             01 usesStmtJournal=0
  17 TableLock        0    4    1 sqlite_stat1  00 iDb=0 root=4 write=1
  18 String8          0    3    0 sqlite_master 00 r[3]='sqlite_master'
REG[3] =   t13[sqlite_master](8)
  19 Goto             0    1    0               00 
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenWrite        3    4    0 3             00 root=4 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           3   11    0               00 
   5 Column           3    0    2               00 r[2]=sqlite_stat1.tbl
REG[2] =   s1[b](8)
   6 Ne               3   10    2 (BINARY)      51 if r[3]!=r[2] goto 10
REG[3] =   t13[sqlite_master](8)
REG[2] =   s1[b](8)
  10 Next             3    5    0               01 
  11 Close            3    0    0               00 
  12 OpenWrite        0    4    0 3             00 root=4 iDb=0; sqlite_stat1
  13 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 3             01 usesStmtJournal=0
  12 TableLock        0    4    0 sqlite_stat1  00 iDb=0 root=4 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    4    0 3             00 root=4 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s1[b](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s4[sz=0](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  NULL
REG[3] =   s4[sz=0](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  14 Expire           0    0    0               00 
  15 Halt             0    0    0               00 

Program received signal SIGFPE, Arithmetic exception.
0x00000000003abde8 in whereLoopAddBtreeIndex (pBuilder=<optimized out>, pSrc=<optimized out>, pProbe=<optimized out>, nInMul=<optimized out>) at sqlite3.c:128355
128355	    rCostIdx = pNew->nOut + 1 + (15*pProbe->szIdxRow)/pSrc->pTab->szTabRow;
(gdb) #0  0x00000000003abde8 in whereLoopAddBtreeIndex (pBuilder=<optimized out>, pSrc=<optimized out>, pProbe=<optimized out>, nInMul=<optimized out>) at sqlite3.c:128355
#1  0x000000000039b5ba in whereLoopAddBtree (pBuilder=<optimized out>, mPrereq=0) at sqlite3.c:128722
#2  0x000000000038dbe4 in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x25edd40, wctrlFlags=0, iAuxArg=320) at sqlite3.c:129185
#3  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#4  0x00000000003034ae in yy_reduce (yypParser=0x266ada0, yyruleno=<optimized out>) at sqlite3.c:133175
#5  0x00000000002fef8e in sqlite3Parser (yyp=0x266ada0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#6  0x00000000002fc544 in sqlite3RunParser (pParse=0x25ee450, 
    zSql=0x26caed0 "SELECT rowid, x FROM b WHERE rowid>'abc' ORDER BY 1 DESC\n;CREATE TABLE t4(c INTEGER PRIMARY KEY, temp4);;CREATE TABLE t5(temp5 INTEGER PRIMARY KEY);", pzErrMsg=0x7ffeb64df518) at sqlite3.c:135186
#7  0x00000000002fac4e in sqlite3Prepare (db=0x25db850, 
    zSql=0x25dcb2e "SELECT rowid, x FROM b WHERE rowid>'abc' ORDER BY 1 DESC\n;CREATE TABLE t4(c INTEGER PRIMARY KEY, temp4);;CREATE TABLE t5(temp5 INTEGER PRIMARY KEY);", nBytes=<optimized out>, saveSqlFlag=1, 
    pReprepare=<optimized out>, ppStmt=0x7ffeb64df648, pzTail=0x7ffeb64df630) at sqlite3.c:112589
#8  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x25db850, 
    zSql=0x25dcb2e "SELECT rowid, x FROM b WHERE rowid>'abc' ORDER BY 1 DESC\n;CREATE TABLE t4(c INTEGER PRIMARY KEY, temp4);;CREATE TABLE t5(temp5 INTEGER PRIMARY KEY);", nBytes=148, saveSqlFlag=1, pOld=0x0, 
    ppStmt=<optimized out>, pzTail=0x7ffeb64df630) at sqlite3.c:112688
#9  0x000000000028f38c in sqlite3_prepare_v2 (db=0x0, zSql=0xffff <error: Cannot access memory at address 0xffff>, nBytes=0, ppStmt=0x7ffeb64df648, pzTail=<optimized out>) at sqlite3.c:112764
#10 0x000000000024b100 in main (argc=1, argv=0x7ffeb64df7f8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 35601] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
