GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000123,sig:06,src:020521+018857,time:39828474,execs:8927990,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[;
UPDATE sqlite_master SET rootpage=5 WHERE tbl_name = 't1';;
INSERT INTO docid VALUES(4, '123.e+2');SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid;;
PRAGMA page_size;;
INSERT INTO blockid (block, block, block) VALUES (2, 'SWIMM', 18);;
WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(x) FROM x1), (SELECT max(x) FROM x1);;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'UPDATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[ecmd with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with UPDATE orconf ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'INTEGER' in state 84
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET nm EQ INTEGER]
parser: Input 'WHERE' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;
INSERT INTO docid VALUES(4, '123.e+2');SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid;;
PRAGMA page_size;;
INSERT INTO blockid (block, block, block) VALUES (2, 'SWIMM', 18);;
WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(x) FROM x1), (SELECT max(x) FROM x1);;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'INSERT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[ecmd with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[ecmd with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO ID]
parser: Input 'VALUES' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Reduce 158 [idlist_opt ::=].
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid;;
PRAGMA page_size;;
INSERT INTO blockid (block, block, block) VALUES (2, 'SWIMM', 18);;
WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(x) FROM x1), (SELECT max(x) FROM x1);;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;
PRAGMA page_size;;
INSERT INTO blockid (block, block, block) VALUES (2, 'SWIMM', 18);;
WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(x) FROM x1), (SELECT max(x) FROM x1);;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[ecmd PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd PRAGMA ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 392
parser: Reduce 233 [cmd ::= PRAGMA nm dbnm], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;
INSERT INTO blockid (block, block, block) VALUES (2, 'SWIMM', 18);;
WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(x) FROM x1), (SELECT max(x) FROM x1);;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'INSERT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'INSERT', go to state 311
parser: Return. Stack=[ecmd with INSERT]
parser: Input 'INTO' in state 311
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', pending reduce 156
parser: Reduce 156 [insert_cmd ::= INSERT orconf], go to state 219.
parser: ... then shift 'insert_cmd', go to state 427
parser: Shift 'INTO', go to state 164
parser: Return. Stack=[ecmd with insert_cmd INTO]
parser: Input 'ID' in state 164
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 164.
parser: ... then shift 'nm', go to state 393
parser: Reduce 112 [xfullname ::= nm], go to state 164.
parser: ... then shift 'xfullname', go to state 298
parser: Shift 'LP', go to state 173
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP]
parser: Input 'ID' in state 173
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 173.
parser: ... then shift 'nm', pending reduce 161
parser: Reduce 161 [idlist ::= nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'COMMA', go to state 241
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist COMMA]
parser: Input 'ID' in state 241
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 241.
parser: ... then shift 'nm', pending reduce 160
parser: Reduce 160 [idlist ::= idlist COMMA nm], go to state 173.
parser: ... then shift 'idlist', go to state 397
parser: Shift 'RP', pending reduce 159
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname LP idlist RP]
parser: Input 'VALUES' with pending reduce 159
parser: Reduce 159 [idlist_opt ::= LP idlist RP], go to state 298.
parser: ... then shift 'idlist_opt', go to state 35
parser: Shift 'VALUES', go to state 526
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES]
parser: Input 'LP' in state 526
parser: Shift 'LP', go to state 28
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP]
parser: Input 'INTEGER' in state 28
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 28.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 28.
parser: ... then shift 'nexprlist', go to state 410
parser: Shift 'RP', pending reduce 89
parser: Return. Stack=[ecmd with insert_cmd INTO xfullname idlist_opt VALUES LP nexprlist RP]
parser: Input 'SEMI' with pending reduce 89
parser: Reduce 89 [values ::= VALUES LP nexprlist RP], go to state 35.
parser: ... then shift 'values', go to state 532
parser: Reduce 348 [oneselect ::= values], go to state 35.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 35.
parser: ... then shift 'select', go to state 297
parser: Reduce 152 [upsert ::=].
parser: ... then shift 'upsert', pending reduce 150
parser: Reduce 150 [cmd ::= with insert_cmd INTO xfullname idlist_opt select upsert], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;
WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(x) FROM x1), (SELECT max(x) FROM x1);;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'WITH' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'WITH', go to state 154
parser: Return. Stack=[ecmd WITH]
parser: Input 'ID' in state 154
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd WITH ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 154.
parser: ... then shift 'nm', go to state 337
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 487
parser: Shift 'AS', go to state 486
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS]
parser: Input 'LP' in state 486
parser: Shift 'LP', go to state 39
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP]
parser: Input 'SELECT' in state 39
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP SELECT]
parser: Input 'STAR' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STAR', pending reduce 96
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP SELECT distinct sclp scanpt STAR]
parser: Input 'FROM' with pending reduce 96
parser: Reduce 96 [selcollist ::= sclp scanpt STAR], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 39.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 39.
parser: ... then shift 'select', go to state 485
parser: Shift 'RP', pending reduce 286
parser: Return. Stack=[ecmd WITH nm eidlist_opt AS LP select RP]
parser: Input 'SELECT' with pending reduce 286
parser: Reduce 286 [wqlist ::= nm eidlist_opt AS LP select RP], go to state 154.
parser: ... then shift 'wqlist', go to state 141
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd WITH wqlist SELECT]
parser: Input 'LP' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP]
parser: Input 'SELECT' in state 4
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'FROM' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 4.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 4.
parser: ... then shift 'select', go to state 483
parser: Shift 'RP', pending reduce 203
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP select RP]
parser: Input 'COMMA' with pending reduce 203
parser: Reduce 203 [expr ::= LP select RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct selcollist COMMA]
parser: Input 'LP' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP]
parser: Input 'SELECT' in state 4
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'FROM' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 4.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 4.
parser: ... then shift 'select', go to state 483
parser: Shift 'RP', pending reduce 203
parser: Return. Stack=[ecmd WITH wqlist SELECT distinct sclp scanpt LP select RP]
parser: Input 'SEMI' with pending reduce 203
parser: Reduce 203 [expr ::= LP select RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 141.
parser: ... then shift 'oneselect', go to state 265
parser: Reduce 80 [select ::= WITH wqlist selectnowith], go to state 1.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[;
SELECT
    SrcWord, t1.x
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.x= (
      SELECT BeginningId FROM (
        SELECT SrcWord, B.x as BeginningId, B.x || E.x As Connected
        FROM t1 B LEFT JOIN t1 E ON B.x=E.x
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
WITH x1 AS (SELECT * FROM docid)
  SELECT (SELECT sum(t1_segments) FROM x1), (SELECT max(t1_segments) FROM x1), t1_segments FROM x1;;
SELECT t1_segments, t1_segments FROM docid WHERE t1_segments = 4 AND t1_segments IN (2, 4, 5) ORDER BY t1_segments DESC, t1_segments DESC;;
SELECT x, x FROM t1 WHERE x = 2 AND x IN (2, 4, 5) ORDER BY x ASC, x DESC;;
PRAGMA secure_delete=ON;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;;
CREATE INDEX leaves_end_block ON blockid(block DESC, block DESC) ;DELETE FROM level ;;
DROP INDEX IF EXISTS leaves_end_block;;
CREATE INDEX leaves_end_block ON blockid(t1_segdir ASC,  t1_segdir ASC) ;;
DROP TABLE IF EXISTS blockid;;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
SELECT idx, idx FROM level WHERE idx = 2 AND idx IN (2, 4, 5) ORDER BY idx ASC, idx DESC;;
SELECT x, x FROM t1 WHERE x = 4 AND x IN (2, 4, 5) ORDER BY x DESC, x DESC;PRAGMA full_column_names=off;;
DROP INDEX IF EXISTS leaves_end_block;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;PRAGMA full_column_names=ON;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;;
CREATE UNIQUE INDEX leaves_end_block ON t1(x ASC);SELECT c0content FROM docid WHERE c0content IN (SELECT c0content FROM docid) ORDER BY c0content ASC;SELECT x FROM t1 WHERE x IN (SELECT leaves_end_block FROM block) ORDER BY x DESC;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE name='leaves_end_block' AND type='index' ORDER BY rowid;;
COMMIT;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;END;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='level' AND type!='trigger' ORDER BY rowid;;;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='docid' AND type!='trigger' ORDER BY rowid;;
CREATE TABLE end_block(root, t0, t0_content);;
SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;DELETE FROM level ;SAVEPOINT x ;SAVEPOINT _tcl_transaction;DELETE FROM level ;DELETE FROM end_block ;DELETE FROM docid ;DELETE FROM end_block ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM docid ;DELETE FROM level ;DELETE FROM end_block ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;DELETE FROM docid ;DELETE FROM docid ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM level ;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;DELETE FROM end_block ;]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SELECT' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'FROM' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM]
parser: Input 'LP' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'LP', go to state 5
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP]
parser: Input 'SELECT' in state 5
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP SELECT]
parser: Input 'STRING' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt term scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt term scanpt AS ID]
parser: Input 'UNION' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 5.
parser: ... then shift 'oneselect', go to state 264
parser: Shift 'UNION', go to state 533
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP oneselect UNION]
parser: Input 'SELECT' in state 533
parser: Reduce 84 [multiselect_op ::= UNION], go to state 264.
parser: ... then shift 'multiselect_op', go to state 195
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP oneselect multiselect_op SELECT]
parser: Input 'STRING' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP oneselect multiselect_op SELECT distinct sclp scanpt STRING]
parser: Input 'AS' in state 537
parser: Reduce 168 [term ::= STRING], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP oneselect multiselect_op SELECT distinct sclp scanpt term scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP oneselect multiselect_op SELECT distinct sclp scanpt term scanpt AS ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 195.
parser: ... then shift 'oneselect', pending reduce 83
parser: Reduce 83 [selectnowith ::= selectnowith multiselect_op oneselect], go to state 5.
parser: ... then shift 'selectnowith', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 5.
parser: ... then shift 'select', go to state 492
parser: Shift 'RP', go to state 260
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix LP select RP]
parser: Input 'JOIN_KW' in state 260
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 342
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 341
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 106
parser: Reduce 106 [seltablist ::= stl_prefix LP select RP as on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'JOIN_KW', go to state 208
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM seltablist JOIN_KW]
parser: Input 'JOIN' in state 208
parser: Shift 'JOIN', pending reduce 117
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM seltablist JOIN_KW JOIN]
parser: Input 'ID' with pending reduce 117
parser: Reduce 117 [joinop ::= JOIN_KW JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 93.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'LP' in state 117
parser: Shift 'LP', go to state 4
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP]
parser: Input 'SELECT' in state 4
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM]
parser: Input 'LP' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'LP', go to state 5
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP]
parser: Input 'SELECT' in state 5
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 77.
parser: ... then shift 'nm', go to state 491
parser: Shift 'DOT', go to state 205
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt nm DOT]
parser: Input 'ID' in state 205
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt nm DOT ID]
parser: Input 'CONCAT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 205.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr CONCAT ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 113.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr CONCAT nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr CONCAT nm DOT ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'FROM' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm ID]
parser: Input 'JOIN_KW' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 243.
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Shift 'JOIN_KW', go to state 208
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM seltablist JOIN_KW]
parser: Input 'JOIN' in state 208
parser: Shift 'JOIN', pending reduce 117
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM seltablist JOIN_KW JOIN]
parser: Input 'ID' with pending reduce 117
parser: Reduce 117 [joinop ::= JOIN_KW JOIN], go to state 263.
parser: ... then shift 'joinop', pending reduce 102
parser: Reduce 102 [stl_prefix ::= seltablist joinop], go to state 197.
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm ID]
parser: Input 'ON' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 243.
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Shift 'ON', go to state 92
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON]
parser: Input 'ID' in state 92
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 92.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON nm DOT ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ]
parser: Input 'ID' in state 117
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 117.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist FROM stl_prefix nm dbnm as indexed_opt ON expr EQ nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 92.
parser: ... then shift 'expr', go to state 62
parser: Reduce 120 [on_opt ::= ON expr], go to state 348.
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'ID' in state 117
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd SELECT distinct selcollist from WHERE expr EQ LP SELECT distinct selcollist FROM stl_prefix LP SELECT distinct selcollist from WHERE expr EQ ID]
parser: Input 'LIMIT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then 
Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f86aa90d859 in __GI_abort () at abort.c:79
#2  0x00007f86aa90d729 in __assert_fail_base (fmt=0x7f86aaaa3588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=<optimized out>)
    at assert.c:92
#3  0x00007f86aa91efd6 in __GI___assert_fail (assertion=0x21b92e "pItem->addrFillSub==0", file=0x22873d "sqlite3.c", line=130468, function=0x223e82 "int sqlite3Select(Parse *, Select *, SelectDest *)") at assert.c:101
#4  0x00000000002fcfa0 in sqlite3Select (pParse=0x7ffec64b6ac0, p=0x9dda20, pDest=0x7ffec64b5358) at sqlite3.c:130468
#5  0x000000000034f659 in sqlite3CodeSubselect (pParse=0x7ffec64b6ac0, pExpr=0x9d3ac0) at sqlite3.c:99820
#6  0x000000000034bbfd in sqlite3ExprCodeTarget (pParse=0x7ffec64b6ac0, pExpr=0x9d3ac0, target=7) at sqlite3.c:100770
#7  0x00000000003790ab in codeEqualityTerm (pParse=0x7ffec64b6ac0, pTerm=0x9c4790, pLevel=0x9c4af0, iEq=1, bRev=0, iTarget=7) at sqlite3.c:136648
#8  0x000000000037a706 in codeAllEqualityTerms (pParse=0x7ffec64b6ac0, pLevel=0x9c4af0, bRev=0, nExtraReg=0, pzAff=0x7ffec64b58d8) at sqlite3.c:136869
#9  0x0000000000375cb8 in sqlite3WhereCodeOneLoopStart (pParse=0x7ffec64b6ac0, v=0x9d3160, pWInfo=0x9c4700, iLevel=1, pLevel=0x9c4af0, notReady=18446744073709551614) at sqlite3.c:137776
#10 0x000000000036c3cc in sqlite3WhereBegin (pParse=0x7ffec64b6ac0, pTabList=0x9c7f40, pWhere=0x9d0280, pOrderBy=0x0, pResultSet=0x9dc760, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145128
#11 0x00000000002fdcea in sqlite3Select (pParse=0x7ffec64b6ac0, p=0x9ccef0, pDest=0x7ffec64b5eb0) at sqlite3.c:130695
#12 0x00000000002ecaa8 in yy_reduce (yypParser=0x7ffec64b60e0, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7ffec64b6ac0) at sqlite3.c:151581
#13 0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffec64b60e0, yymajor=1, yyminor=...) at sqlite3.c:152877
#14 0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffec64b6ac0, 
    zSql=0x9ed1cf ";;\nSELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;SELECT name, rootpage, sql FROM \"main\".sqlite_master ORDER BY rowid;;\nWITH x1 AS (SELECT * FROM docid)\n  SELECT (SELECT sum(t1_se"..., pzErrMsg=0x7ffec64b6ca0) at sqlite3.c:154013
#15 0x00000000002a1683 in sqlite3Prepare (db=0x9bc2b0, 
    zSql=0x9bf999 ";\nSELECT\n    SrcWord, t1.x\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.x= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=4031, prepFlags=128, pReprepare=0x0, ppStmt=0x7ffec64b6dd8, pzTail=0x7ffec64b6dc0) at sqlite3.c:124303
#16 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x9bc2b0, 
    zSql=0x9bf999 ";\nSELECT\n    SrcWord, t1.x\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.x= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=4031, prepFlags=128, pOld=0x0, ppStmt=0x7ffec64b6dd8, pzTail=0x7ffec64b6dc0) at sqlite3.c:124403
#17 0x000000000029247f in sqlite3_prepare_v2 (db=0x9bc2b0, 
    zSql=0x9bf999 ";\nSELECT\n    SrcWord, t1.x\n    FROM \n      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )\n    LEFT JOIN \n      t1\n    WHERE t1.x= (\n      SELECT BeginningId FROM (\n        SELECT "..., nBytes=4031, ppStmt=0x7ffec64b6dd8, pzTail=0x7ffec64b6dc0) at sqlite3.c:124487
#18 0x0000000000256bd0 in main (argc=1, argv=0x7ffec64b6f88) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 5307] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
