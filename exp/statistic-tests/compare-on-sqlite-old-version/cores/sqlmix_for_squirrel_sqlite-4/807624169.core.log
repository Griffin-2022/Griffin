GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000099,sig:06,src:021119+020908,time:2976454,execs:527367,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;PRAGMA count_changes=off;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT * FROM green ORDER BY t1,t1
;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 OpenRead         2    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex_green_1
   3 Explain          3    0    0 SCAN TABLE green USING COVERING INDEX sqlite_autoindex_green_1 00 
   4 Rewind           2   16    1 0             00 
   5 Column           2    0    1               00 r[1]=green.t1
REG[1] =  NULL
   6 Column           2    0    2               00 r[2]=green.t1
REG[2] =  NULL
   7 MakeRecord       2    1    4               00 r[4]=mkrec(r[2])
REG[4] =  sx2[0200|..]
   8 SequenceTest     1   13    0               00 if( cursor[1].ctr++ ) pc = 13
  13 Move             1    5    1               00 r[5]=r[1]
REG[5] =  NULL
  14 SorterInsert     1    4    2 1             00 key=r[4]
REG[4] =  sx2[0200|..]
  15 Next             2    5    0               01 
  16 Explain         16    0    0 USE TEMP B-TREE FOR RIGHT PART OF ORDER BY 00 
  17 Gosub            6   19    0               00 
REG[6] =  i:17
  19 Once             0   21    0               00 
  20 OpenPseudo       3    7    3               00 3 columns in r[7]
  21 SorterSort       1   27    0               00 
  22 SorterData       1    7    3               00 r[7]=data
  23 Column           3    0    3               00 r[3]=t1
REG[3] =  NULL
  24 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  25 SorterNext       1   22    0               00 
  26 Return           6    0    0               00 
REG[6] =  i:17
  18 Goto             0   27    0               00 
  27 Halt             0    0    0               00 
SQL: [UPDATE green SET t1=t1+1 WHERE t1==8
;]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
  34 Transaction      0    1    4 0             01 usesStmtJournal=1
  35 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  36 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenWrite        0    4    0 1             00 root=4 iDb=0; green
   3 OpenWrite        1    5    0 k(2,,)        02 root=5 iDb=0; sqlite_autoindex_green_1
   4 Explain          4    0    0 SEARCH TABLE green USING INDEX sqlite_autoindex_green_1 (t1=?) 00 
   5 Integer          8    9    0               00 r[9]=8
REG[9] =  i:8
   6 SeekGE           1   11    9 1             00 key=r[9]
REG[9] =  i:8
  11 IsNull           5   33    0               00 if r[5]==NULL goto 33
REG[5] =  NULL
  33 Halt             0    0    0               00 
SQL: [UPDATE blue SET red=red-1 WHERE red==8 and red<800
;]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    4 0             01 usesStmtJournal=0
  33 Integer        800   10    0               00 r[10]=800
REG[10] =  i:800
  34 Integer          1   11    0               00 r[11]=1
REG[11] =  i:1
  35 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenWrite        0    2    0 1             08 root=2 iDb=0; blue
   3 OpenWrite        1    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_blue_1
   4 Explain          4    0    0 SEARCH TABLE blue USING INDEX sqlite_autoindex_blue_1 (red=?) 00 
   5 Integer          8    7    0               00 r[7]=8
REG[7] =  i:8
   6 SeekGE           1   13    7 1             00 key=r[7]
REG[7] =  i:8
  13 IsNull           5   31    0               00 if r[5]==NULL goto 31
REG[5] =  NULL
  31 Halt             0    0    0               00 
SQL: [UPDATE blue SET red=red+1 WHERE red==128
;]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    4 0             01 usesStmtJournal=0
  31 Integer          1   10    0               00 r[10]=1
REG[10] =  i:1
  32 Goto             0    1    0               00 
   1 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
   2 OpenWrite        0    2    0 1             08 root=2 iDb=0; blue
   3 OpenWrite        1    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_blue_1
   4 Explain          4    0    0 SEARCH TABLE blue USING INDEX sqlite_autoindex_blue_1 (red=?) 00 
   5 Integer        128    7    0               00 r[7]=128
REG[7] =  i:128
   6 SeekGE           1   11    7 1             00 key=r[7]
REG[7] =  i:128
  11 IsNull           5   29    0               00 if r[5]==NULL goto 29
REG[5] =  NULL
  29 Halt             0    0    0               00 
SQL: [;
;SELECT t1 FROM green WHERE t1 NOT IN ();]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
   8 Transaction      0    0    4 0             01 usesStmtJournal=0
   9 Goto             0    1    0               00 
   1 OpenRead         0    4    0 1             00 root=4 iDb=0; green
   2 Explain          2    0    0 SCAN TABLE green 00 
   3 Rewind           0    7    0               00 
   4 Column           0    0    1               00 r[1]=green.t1
REG[1] =  NULL
   5 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   6 Next             0    4    0               01 
   7 Halt             0    0    0               00 
SQL: [;CREATE TABLE foo(
      t0 INTEGER,
      CHECK( t0 IN (111,222,333) )
    );]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    4 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:7
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:7
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:7
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 foo           00 r[7]='foo'
REG[7] =   t3[foo](8)
  20 String8          0    8    0 foo           00 r[8]='foo'
REG[8] =   t3[foo](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  22 String8          0   10    0 CREATE TABLE foo(
      t0 INTEGER,
      CHECK( t0 IN (111,222,333) )
    ) 00 r[10]='CREATE TABLE foo(
      t0 INTEGER,
      CHECK( t0 IN (111,222,333) )
    )'
REG[10] =   t76[CREATE TABLE foo(.      t](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t3[foo](8)
REG[8] =   t3[foo](8)
REG[9] =  i:7
REG[10] =   t76[CREATE TABLE foo(.      t](8)
REG[4] =  sx95[071713130181257461626C65666F6F666F6F07435245415445|......%tablefoofoo.CREATE]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx95[071713130181257461626C65666F6F666F6F07435245415445|......%tablefoofoo.CREATE]
REG[5] =  i:7
  25 SetCookie        0    1    5               00 
  26 ParseSchema      0    0    0 tbl_name='foo' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             00 usesStmtJournal=0
  18 String8          0    2    0 foo           00 r[2]='foo'
REG[2] =   t3[foo](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s1[x](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[foo](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[foo](8)
REG[1] =   s3[foo](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[foo](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s3[foo](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:7
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s76[CREATE TABLE foo(.      t](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s3[foo](8)
REG[6] =   s3[foo](8)
REG[7] =  i:7
REG[8] =   s76[CREATE TABLE foo(.      t](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;CREATE TABLE c0(v0,a NUMERIC);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    5 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:8
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:8
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 c0            00 r[7]='c0'
REG[7] =   t2[c0](8)
  20 String8          0    8    0 c0            00 r[8]='c0'
REG[8] =   t2[c0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  22 String8          0   10    0 CREATE TABLE c0(v0,a NUMERIC) 00 r[10]='CREATE TABLE c0(v0,a NUMERIC)'
REG[10] =   t29[CREATE TABLE c0(v0,a NUME](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t2[c0](8)
REG[8] =   t2[c0](8)
REG[9] =  i:8
REG[10] =   t29[CREATE TABLE c0(v0,a NUME](8)
REG[4] =  sx45[0617111101477461626C656330633008435245415445205441|.....Gtablec0c0.CREATE TA]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx45[0617111101477461626C656330633008435245415445205441|.....Gtablec0c0.CREATE TA]
REG[5] =  i:8
  25 SetCookie        0    1    6               00 
  26 ParseSchema      0    0    0 tbl_name='c0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    6 0             00 usesStmtJournal=0
  18 String8          0    2    0 c0            00 r[2]='c0'
REG[2] =   t2[c0](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s1[x](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[foo](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s3[foo](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[c0](8)
REG[1] =   s2[c0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[c0](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s2[c0](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:8
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s29[CREATE TABLE c0(v0,a NUME](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[c0](8)
REG[6] =   s2[c0](8)
REG[7] =  i:8
REG[8] =   s29[CREATE TABLE c0(v0,a NUME](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [SELECT * FROM blue WHERE red==778 ORDER BY red,red
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         2    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_blue_1
   3 Explain          3    0    0 SEARCH TABLE blue USING COVERING INDEX sqlite_autoindex_blue_1 (red=?) 00 
   4 Integer        778    1    0               00 r[1]=778
REG[1] =  i:778
   5 SeekGE           2    9    1 1             00 key=r[1]
REG[1] =  i:778
   9 Halt             0    0    0               00 
SQL: [SELECT * FROM green WHERE t1==777 ORDER BY t1,t1
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    6 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         2    5    0 k(2,,)        02 root=5 iDb=0; sqlite_autoindex_green_1
   3 Explain          3    0    0 SEARCH TABLE green USING COVERING INDEX sqlite_autoindex_green_1 (t1=?) 00 
   4 Integer        777    1    0               00 r[1]=777
REG[1] =  i:777
   5 SeekGE           2    9    1 1             00 key=r[1]
REG[1] =  i:777
   9 Halt             0    0    0               00 
SQL: [;CREATE INDEX b ON blue(red);]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    6 0             01 usesStmtJournal=1
  34 Goto             0    1    0               00 
   1 Noop             0   32    0               00 
   2 CreateBtree      0    1    2               00 r[1]=root iDb=0 flags=2
REG[1] =  i:9
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:9
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
   7 String8          0    5    0 blue          00 r[5]='blue'
REG[5] =   t4[blue](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:9
   9 String8          0    7    0 CREATE INDEX b ON blue(red) 00 r[7]='CREATE INDEX b ON blue(red)'
REG[7] =   t27[CREATE INDEX b ON blue(re](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[3] =   t5[index](8)
REG[4] =   t1[b](8)
REG[5] =   t4[blue](8)
REG[6] =  i:9
REG[7] =   t27[CREATE INDEX b ON blue(re](8)
REG[8] =  sx44[06170F150143696E64657862626C7565094352454154452049|.....Cindexbblue.CREATE I]
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  sx44[06170F150143696E64657862626C7565094352454154452049|.....Cindexbblue.CREATE I]
REG[2] =  i:9
  12 SorterOpen       3    0    1 k(2,,)        00 
  13 OpenRead         1    2    0 1             00 root=2 iDb=0; blue
  14 Rewind           1   20    0               00 
  15 Column           1    0   10               00 r[10]=blue.red
REG[10] =  NULL
  16 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  17 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  sx3[030009|...]
  18 SorterInsert     3    9    0               00 key=r[9]
REG[9] =  sx3[030009|...]
  19 Next             1   15    0               00 
  20 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  21 SorterSort       3   26    0               00 
  22 SorterData       3    9    2               00 r[9]=data
  23 SeekEnd          2    0    0               00 
  24 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  sx3[030009|...]
  25 SorterNext       3   22    0               00 
  26 Close            1    0    0               00 
  27 Close            2    0    0               00 
  28 Close            3    0    0               00 
  29 SetCookie        0    1    7               00 
  30 ParseSchema      0    0    0 name='b' AND type='index' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    7 0             00 usesStmtJournal=0
  18 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  19 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s23[sqlite_autoindex_blue_1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s23[sqlite_autoindex_blue_1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s24[sqlite_autoindex_green_1](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s24[sqlite_autoindex_green_1](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[x](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[y](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[y](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[foo](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s3[foo](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s2[c0](8)
  15 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   8 Ne               3   15    1 (BINARY)      52 if r[1]!=r[3] goto 15
REG[3] =   t5[index](8)
REG[1] =   s5[index](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[index](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[b](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s4[blue](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:9
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s27[CREATE INDEX b ON blue(re](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[index](8)
REG[5] =   s1[b](8)
REG[6] =   s4[blue](8)
REG[7] =  i:9
REG[8] =   s27[CREATE INDEX b ON blue(re](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  31 Expire           0    1    0               00 
  32 Halt             0    0    0               00 
SQL: [SELECT * FROM blue WHERE red==8 ORDER BY red,red
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    7 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         2    3    0 k(2,,)        02 root=3 iDb=0; sqlite_autoindex_blue_1
   3 Explain          3    0    0 SEARCH TABLE blue USING COVERING INDEX sqlite_autoindex_blue_1 (red=?) 00 
   4 Integer          8    1    0               00 r[1]=8
REG[1] =  i:8
   5 SeekGE           2    9    1 1             00 key=r[1]
REG[1] =  i:8
   9 Halt             0    0    0               00 
SQL: [;COMMIT;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    0    0               00 
SQL: [;CREATE TABLE value(c INTEGER PRIMARY KEY, d TEXT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    7 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:10
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:10
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:10
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:10
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:10
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 value         00 r[7]='value'
REG[7] =   t5[value](8)
  20 String8          0    8    0 value         00 r[8]='value'
REG[8] =   t5[value](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:10
  22 String8          0   10    0 CREATE TABLE value(c INTEGER PRIMARY KEY, d TEXT) 00 r[10]='CREATE TABLE value(c INTEGER PRIMARY KEY, d TEXT)'
REG[10] =   t49[CREATE TABLE value(c INTE](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t5[value](8)
REG[8] =   t5[value](8)
REG[9] =  i:10
REG[10] =   t49[CREATE TABLE value(c INTE](8)
REG[4] =  sx71[06171717016F7461626C6576616C756576616C75650A435245|.....otablevaluevalue.CRE]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx71[06171717016F7461626C6576616C756576616C75650A435245|.....otablevaluevalue.CRE]
REG[5] =  i:10
  25 SetCookie        0    1    8               00 
  26 ParseSchema      0    0    0 tbl_name='value' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    8 0             00 usesStmtJournal=0
  18 String8          0    2    0 value         00 r[2]='value'
REG[2] =   t5[value](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s1[x](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[foo](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s3[foo](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s2[c0](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t5[value](8)
REG[1] =   s5[value](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s5[value](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s5[value](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:10
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s49[CREATE TABLE value(c INTE](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s5[value](8)
REG[6] =   s5[value](8)
REG[7] =  i:10
REG[8] =   s49[CREATE TABLE value(c INTE](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT count(*) FROM green WHERE t1=rowid+1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    8 0             01 usesStmtJournal=0
  16 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  17 Goto             0    1    0               00 
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 OpenRead         0    4    0 1             00 root=4 iDb=0; green
   3 Explain          3    0    0 SCAN TABLE green 00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=green.t1
REG[2] =  NULL
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   7 Add              5    4    3               00 r[3]=r[5]+r[4]
REG[5] =  i:1
REG[4] =  i:1
REG[3] =  i:2
   8 Ne               3   10    2 (BINARY)      51 if r[2]!=r[3] goto 10
REG[3] =  i:2
REG[2] =  NULL
  10 Next             0    5    0               01 
  11 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  12 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:0
  13 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  14 Halt             0    0    0               00 
SQL: [;CREATE TABLE log(v1,tr1,tr2);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    8 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:11
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  tx6[060000000000|......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  tx6[060000000000|......]
REG[1] =  i:11
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:11
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:11
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:11
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 log           00 r[7]='log'
REG[7] =   t3[log](8)
  20 String8          0    8    0 log           00 r[8]='log'
REG[8] =   t3[log](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:11
  22 String8          0   10    0 CREATE TABLE log(v1,tr1,tr2) 00 r[10]='CREATE TABLE log(v1,tr1,tr2)'
REG[10] =   t28[CREATE TABLE log(v1,tr1,t](8)
  23 MakeRecord       6    5    4 BBBDB         00 r[4]=mkrec(r[6..10])
REG[6] =   t5[table](8)
REG[7] =   t3[log](8)
REG[8] =   t3[log](8)
REG[9] =  i:11
REG[10] =   t28[CREATE TABLE log(v1,tr1,t](8)
REG[4] =  sx46[0617131301457461626C656C6F676C6F670B43524541544520|.....Etableloglog.CREATE ]
  24 Insert           1    4    5               00 intkey=r[5] data=r[4]
REG[4] =  sx46[0617131301457461626C656C6F676C6F670B43524541544520|.....Etableloglog.CREATE ]
REG[5] =  i:11
  25 SetCookie        0    1    9               00 
  26 ParseSchema      0    0    0 tbl_name='log' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    9 0             00 usesStmtJournal=0
  18 String8          0    2    0 log           00 r[2]='log'
REG[2] =   t3[log](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s1[x](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[green](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s5[green](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[foo](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s3[foo](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s2[c0](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[blue](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s4[blue](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s5[value](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s5[value](8)
  15 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[log](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t3[log](8)
REG[1] =   s3[log](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[log](8)
  11 Column           0    2    6               00 r[6]=sqlite_master.tbl_name
REG[6] =   s3[log](8)
  12 Column           0    3    7               00 r[7]=sqlite_master.rootpage
REG[7] =  i:11
  13 Column           0    4    8               00 r[8]=sqlite_master.sql
REG[8] =   s28[CREATE TABLE log(v1,tr1,t](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s3[log](8)
REG[6] =   s3[log](8)
REG[7] =  i:11
REG[8] =   s28[CREATE TABLE log(v1,tr1,t](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO x(t2,t2)
      VALUES(5,'zyx'),(15,'wvu'),(25,'tsr'),(35,'qpo');]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    9 0             01 usesStmtJournal=1
  29 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  30 Goto             0    1    0               00 
   1 InitCoroutine    3   16    2               00 
  16 OpenWrite        0    6    0 1             00 root=6 iDb=0; x
  17 Yield            3   27    0               00 
REG[3] =  i:1
REG[3] =  i:17
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          5    4    0               00 r[4]=5
REG[4] =  i:5
   4 String8          0    5    0 zyx           00 r[5]='zyx'
REG[5] =   t3[zyx](8)
   5 Yield            3    0    0               00 
REG[3] =  i:17
REG[3] =  i:5
  18 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  19 SCopy            4    2    0               00 r[2]=r[4]
REG[2] =  i:5
  20 Abortable        0    0    0               00 
  21 Lt              10   24    2 (BINARY)      52 if r[2]<r[10] goto 24
REG[10] =  i:0
REG[2] =  i:5
  22 Gt               2   24    2 (BINARY)      52 if r[2]>r[2] goto 24

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4e921b6859 in __GI_abort () at abort.c:79
#2  0x00007f4e921b6729 in __assert_fail_base (fmt=0x7f4e9234c588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=<optimized out>) at assert.c:92
#3  0x00007f4e921c7fd6 in __GI___assert_fail (assertion=0x21dc88 "pIn1!=pIn3", file=0x2291f4 "sqlite3.c", line=86002, function=0x216a86 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003cf4ad in sqlite3VdbeExec (p=0x7b42b0) at sqlite3.c:86002
#5  0x000000000041ba74 in sqlite3Step (p=0x7b42b0) at sqlite3.c:82300
#6  0x0000000000293d5d in sqlite3_step (pStmt=0x7b42b0) at sqlite3.c:82365
#7  0x0000000000258a39 in main (argc=1, argv=0x7ffe633b5548) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 44205] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
