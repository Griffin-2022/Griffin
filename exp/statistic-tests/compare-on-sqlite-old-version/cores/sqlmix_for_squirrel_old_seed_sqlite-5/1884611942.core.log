GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000018,sig:06,src:014976+014250,time:40227071,execs:9900808,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT*FROM"main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    1 1             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s9[tablename](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s9[tablename](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE tablename(b,](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s9[tablename](8)
REG[3] =   s9[tablename](8)
REG[4] =  i:2
REG[5] =   s32[CREATE TABLE tablename(b,](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
PRAGMA page_size = 1024;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Halt             0    0    0               00 
SQL: [INSERT INTO tablename(x) VALUES(x'0123456789abcdef0123456789abcdef0123456789');]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    1 1             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 4             00 root=2 iDb=0; tablename
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Blob            21    3    0 #Eg‰«Íï#Eg‰«Íï#Eg‰ 00 r[3]=#Eg‰«Íï#Eg‰«Íï#Eg‰ (len=21)
REG[3] =  tx21[0123456789ABCDEF0123456789ABCDEF0123456789|.#Eg.....#Eg.....#Eg.]
   4 MakeRecord       2    4    6               00 r[6]=mkrec(r[2..5])
REG[6] =  sx26[05003600000123456789ABCDEF0123456789ABCDEF01234567|..6...#Eg.....#Eg.....#Eg]
   5 Insert           0    6    1 tablename     39 intkey=r[1] data=r[6]
REG[6] =  sx26[05003600000123456789ABCDEF0123456789ABCDEF01234567|..6...#Eg.....#Eg.....#Eg]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=OFF;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      0    1    2               00 
REG[1] =   t3[off](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[off](8)
   3 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode=WAL;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 JournalMode      0    1    5               00 
REG[1] =   t3[off](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t3[off](8)
   3 Halt             0    0    0               00 
SQL: [ATTACH 'test2.db' AS t2;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0 test2.db      00 r[1]='test2.db'
REG[1] =   t8[test2.db](8)
   2 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t8[test2.db](8)
REG[2] =   t2[t2](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      2    0  206 0             00 usesStmtJournal=0
  14 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  15 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[ab](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[ab](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE ab(a, b)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[ab](8)
REG[3] =   s2[ab](8)
REG[4] =  i:2
REG[5] =   s21[CREATE TABLE ab(a, b)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[abc](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[abc](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:3
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s25[CREATE TABLE abc(a, b, c)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[abc](8)
REG[3] =   s3[abc](8)
REG[4] =  i:3
REG[5] =   s25[CREATE TABLE abc(a, b, c)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[def](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[def](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s25[CREATE TABLE def(d, e, f)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[def](8)
REG[3] =   s3[def](8)
REG[4] =  i:4
REG[5] =   s25[CREATE TABLE def(d, e, f)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s10[insert_log](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s10[insert_log](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:5
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s36[CREATE TABLE insert_log(d](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s10[insert_log](8)
REG[3] =   s10[insert_log](8)
REG[4] =  i:5
REG[5] =   s36[CREATE TABLE insert_log(d](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[t20_2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s5[t20_2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:6
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t20_2(y)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s5[t20_2](8)
REG[3] =   s5[t20_2](8)
REG[4] =  i:6
REG[5] =   s21[CREATE TABLE t20_2(y)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[t20_3](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s5[t20_3](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:7
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s21[CREATE TABLE t20_3(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s5[t20_3](8)
REG[3] =   s5[t20_3](8)
REG[4] =  i:7
REG[5] =   s21[CREATE TABLE t20_3(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s5[files](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s5[files](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:8
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s30[CREATE TABLE files(name, ](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s5[files](8)
REG[3] =   s5[files](8)
REG[4] =  i:8
REG[5] =   s30[CREATE TABLE files(name, ](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[log](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[log](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:9
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s19[CREATE TABLE log(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[log](8)
REG[3] =   s3[log](8)
REG[4] =  i:9
REG[5] =   s19[CREATE TABLE log(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[c2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[c2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:10
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s58[CREATE TABLE c2(x INTEGER](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[c2](8)
REG[3] =   s2[c2](8)
REG[4] =  i:10
REG[5] =   s58[CREATE TABLE c2(x INTEGER](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s6[t3_tr1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s6[t3_tr1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:11
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s22[CREATE TABLE t3_tr1(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s6[t3_tr1](8)
REG[3] =   s6[t3_tr1](8)
REG[4] =  i:11
REG[5] =   s22[CREATE TABLE t3_tr1(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[v32](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[v32](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:12
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s19[CREATE TABLE v32(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[v32](8)
REG[3] =   s3[v32](8)
REG[4] =  i:12
REG[5] =   s19[CREATE TABLE v32(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:13
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s12[sqlite_stat1](8)
REG[3] =   s12[sqlite_stat1](8)
REG[4] =  i:13
REG[5] =   s39[CREATE TABLE sqlite_stat1](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[v7](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[v7](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:14
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s18[CREATE TABLE v7(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[v7](8)
REG[3] =   s2[v7](8)
REG[4] =  i:14
REG[5] =   s18[CREATE TABLE v7(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[v512](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[v512](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:15
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s20[CREATE TABLE v512(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s4[v512](8)
REG[3] =   s4[v512](8)
REG[4] =  i:15
REG[5] =   s20[CREATE TABLE v512(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s3[vv2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[vv2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:16
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s19[CREATE TABLE vv2(z)](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s3[vv2](8)
REG[3] =   s3[vv2](8)
REG[4] =  i:16
REG[5] =   s19[CREATE TABLE vv2(z)](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s2[e2](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[e2](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s45[CREATE VIRTUAL TABLE e2 U](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[e2](8)
REG[3] =   s2[e2](8)
REG[4] =  i:0
REG[5] =   s45[CREATE VIRTUAL TABLE e2 U](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s4[view](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[logs](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[logs](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s29[CREATE VIEW logs AS VALUE](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s4[view](8)
REG[2] =   s4[logs](8)
REG[3] =   s4[logs](8)
REG[4] =  i:0
REG[5] =   s29[CREATE VIEW logs AS VALUE](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s1[f](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s6[t3_tr1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s97[CREATE TRIGGER f AFTER IN](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s7[trigger](8)
REG[2] =   s1[f](8)
REG[3] =   s6[t3_tr1](8)
REG[4] =  i:0
REG[5] =   s97[CREATE TRIGGER f AFTER IN](8)
  11 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s8[.v.i.e.w](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s4[.v.1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s4[.v.1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:0
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s68[.C.R.E.A.T.E. .V.I.E.W. .](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s8[.v.i.e.w](8)
REG[2] =   s4[.v.1](8)
REG[3] =   s4[.v.1](8)
REG[4] =  i:0
REG[5] =   s68[.C.R.E.A.T.E. .V.I.E.W. .](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [select $::xyz;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Variable         1    1    0 $::xyz        00 r[1]=parameter(1,$::xyz)
REG[1] =  NULL
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   4 Halt             0    0    0               00 
SQL: [select $testnamespace::xyz;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Variable         1    1    0 $testnamespace::xyz 00 r[1]=parameter(1,$testnamespace::xyz)
REG[1] =  NULL
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  NULL
   4 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    1 2             00 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s9[tablename](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s9[tablename](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s32[CREATE TABLE tablename(b,](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s9[tablename](8)
REG[3] =   s9[tablename](8)
REG[4] =  i:2
REG[5] =   s32[CREATE TABLE tablename(b,](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [;
INSERT INTO tablename(x) VALUES(NULL);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    1 2             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   9 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  10 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 4             00 root=2 iDb=0; tablename
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 MakeRecord       2    4    6               00 r[6]=mkrec(r[2..5])
REG[6] =  sx5[0500000000|.....]
   5 Insert           0    6    1 tablename     39 intkey=r[1] data=r[6]
REG[6] =  sx5[0500000000|.....]
REG[1] =  i:2
   6 Halt             0    0    0               00 
SQL: [select cast(3.14e+004 AS integer);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Real             0    1    0 31400         00 r[1]=31400
REG[1] =  r:31400
   3 Cast             1   68    0               00 affinity(r[1])
REG[1] =  r:31400
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:31400
   5 Halt             0    0    0               00 
SQL: [select cast(3.14E+004 AS integer);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Real             0    1    0 31400         00 r[1]=31400
REG[1] =  r:31400
   3 Cast             1   68    0               00 affinity(r[1])
REG[1] =  r:31400
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:31400
   5 Halt             0    0    0               00 
SQL: [;
pragma main.page_count ;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    1 2             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Pagecount        0    3    0               00 
REG[3] =  i:2
   2 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:2
   3 Halt             0    0    0               00 
SQL: [select cast(3.14E004 AS integer);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Real             0    1    0 31400         00 r[1]=31400
REG[1] =  r:31400
   3 Cast             1   68    0               00 affinity(r[1])
REG[1] =  r:31400
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:31400
   5 Halt             0    0    0               00 
SQL: [select cast(3.14e-4 * 1e8 AS integer);]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Real             0    2    0 0.000314      00 r[2]=0.000314
REG[2] =  r:0.00031399999999999999
   7 Real             0    3    0 100000000     00 r[3]=100000000
REG[3] =  r:100000000
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Multiply         3    2    1               00 r[1]=r[3]*r[2]
REG[3] =  r:100000000
REG[2] =  r:0.00031399999999999999
REG[1] =  r:31400
   3 Cast             1   68    0               00 affinity(r[1])
REG[1] =  r:31400
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:31400
   5 Halt             0    0    0               00 
SQL: [;
PRAGMA main.page_count;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    1 2             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Pagecount        0    3    0               00 
REG[3] =  i:2
   2 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:2
   3 Halt             0    0    0               00 
SQL: [select 123/*abc;
select 123/***abc;
select 123/*/*2;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer        123    2    0               00 r[2]=123
REG[2] =  i:123
   6 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   7 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Multiply         3    2    1               00 r[1]=r[3]*r[2]
REG[3] =  i:2
REG[2] =  i:123
REG[1] =  i:246
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:246
   4 Halt             0    0    0               00 
SQL: [;
select t1*10 from tablename order by t1*5;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    1 2             01 usesStmtJournal=0
  21 Integer         10    4    0               00 r[4]=10
REG[4] =  i:10
  22 Integer          5    5    0               00 r[5]=5
REG[5] =  i:5
  23 Goto             0    1    0               00 
   1 SorterOpen       1    3    0 k(1,B)        00 
   2 OpenRead         0    2    0 3             00 root=2 iDb=0; tablename
   3 Explain          3    0    0 SCAN TABLE tablename 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    3               00 r[3]=tablename.t1
REG[3] =  NULL
   6 Multiply         4    3    2               00 r[2]=r[4]*r[3]
REG[4] =  i:10
REG[3] =  NULL
REG[2] =  NULL
   7 Column           0    2    3               00 r[3]=tablename.t1
REG[3] =  NULL
   8 Multiply         5    3    1               00 r[1]=r[5]*r[3]
REG[5] =  i:5
REG[3] =  NULL
REG[1] =  NULL
   9 MakeRecord       1    2    6               00 r[6]=mkrec(r[1..2])
REG[6] =  sx3[030000|...]
  10 SorterInsert     1    6    1 2             00 key=r[6]
REG[6] =  sx3[030000|...]
  11 Next             0    5    0               01 
   5 Column           0    2    3               00 r[3]=tablename.t1
REG[3] =  NULL
   6 Multiply         4    3    2               00 r[2]=r[4]*r[3]
REG[4] =  i:10
REG[3] =  NULL
REG[2] =  NULL
   7 Column           0    2    3               00 r[3]=tablename.t1
REG[3] =  NULL
   8 Multiply         5    3    1               00 r[1]=r[5]*r[3]
REG[5] =  i:5
REG[3] =  NULL
REG[1] =  NULL
   9 MakeRecord       1    2    6               00 r[6]=mkrec(r[1..2])
REG[6] =  sx3[030000|...]
  10 SorterInsert     1    6    1 2             00 key=r[6]
REG[6] =  sx3[030000|...]
  11 Next             0    5    0               01 
  12 Explain         12    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  13 OpenPseudo       2    7    3               00 3 columns in r[7]
  14 SorterSort       1   19    0               00 
  15 SorterData       1    7    2               00 r[7]=data
  16 Column           2    1    2               00 r[2]=t1*10
REG[2] =  NULL
  17 ResultRow        2    1    0               00 output=r[2]
REG[2] =  NULL
  18 SorterNext       1   15    0               00 
  15 SorterData       1    7    2               00 r[7]=data
  16 Column           2    1    2               00 r[2]=t1*10
REG[2] =  NULL
  17 ResultRow        2    1    0               00 output=r[2]
REG[2] =  NULL
  18 SorterNext       1   15    0               00 
  19 Halt             0    0    0               00 
SQL: [SELECT 'VERSION: ' ||
                  sqlite_version() || ' ' ||
                  sqlite_source_id();]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    5    0 VERSION:      00 r[5]='VERSION: '
REG[5] =   t9[VERSION: ](8)
   6 Function0        0    0    6 sqlite_version(0) 00 r[6]=func(r[0])
REG[6] =   t6[3.30.1](8)
   7 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t6[3.30.1](8)
REG[5] =   t9[VERSION: ](8)
REG[4] =   s15[VERSION: 3.30.1](8)
   8 String8          0    6    0               00 r[6]=' '
REG[6] =   t1[ ](8)
   9 Concat           6    4    2               00 r[2]=r[4]+r[6]
REG[6] =   t1[ ](8)
REG[4] =   s15[VERSION: 3.30.1](8)
REG[2] =   s16[VERSION: 3.30.1 ](8)
  10 Function0        0    0    3 sqlite_source_id(0) 00 r[3]=func(r[0])
REG[3] =   t84[2019-10-10 20:19:45 18db0](8)
  11 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Concat           3    2    1               00 r[1]=r[2]+r[3]
REG[3] =   t84[2019-10-10 20:19:45 18db0](8)
REG[2] =   s16[VERSION: 3.30.1 ](8)
REG[1] =   s100[VERSION: 3.30.1 2019-10-1](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s100[VERSION: 3.30.1 2019-10-1](8)
   4 Halt             0    0    0               00 
SQL: [;
pragma PAGE_COUNT;]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 Transaction      0    0    1 2             01 usesStmtJournal=0
   5 Goto             0    1    0               00 
   1 Pagecount        0    3    0               00 
REG[3] =  i:2
   2 ResultRow        3    1    0               00 output=r[3]
REG[3] =  i:2
   3 Halt             0    0    0               00 
SQL: [ROLLBACK;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       1    1    0               00 
[Inferior 1 (process 130446) exited normally]
(gdb) (gdb) quit
