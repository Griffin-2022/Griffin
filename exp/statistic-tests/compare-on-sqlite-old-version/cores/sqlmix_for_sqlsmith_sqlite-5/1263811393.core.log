GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000457,sig:06,src:022740+024479,time:11647910,execs:2059539,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;SELECT printf('(%!.3Q)','הנה מה־טוב ומה־נעים שבת אחים גם־יחד');]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
   4 String8          0    2    0 (%!.3Q)       00 r[2]='(%!.3Q)'
REG[2] =   t7[(%!.3Q)](8)
   5 String8          0    3    0 הנה מה־טוב ומה־נעים שבת אחים גם־יחד 00 r[3]='הנה מה־טוב ומה־נעים שבת אחים גם־יחד'
REG[3] =   t65[...... ........](8)
   6 Goto             0    1    0               00 
   1 Function0        3    2    1 printf(-1)    02 r[1]=func(r[2..3])
REG[2] =   t7[(%!.3Q)](8)
REG[3] =   t65[...... ........](8)
REG[1] =   s7[('...')](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s7[('...')](8)
   3 Halt             0    0    0               00 
SQL: [;
;DROP TABLE b;]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    4 0             01 usesStmtJournal=1
  59 TableLock        0    4    1 sqlite_sequence 00 iDb=0 root=4 write=1
  60 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  61 String8          0    4    0 b             00 r[4]='b'
REG[4] =   t1[b](8)
  62 String8          0    9    0 trigger       00 r[9]='trigger'
REG[9] =   t7[trigger](8)
  63 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    4    0 2             00 root=4 iDb=0; sqlite_sequence
   4 Explain          0    0    0 SCAN TABLE sqlite_sequence 00 
   5 Rewind           0   13    0               00 
   6 Column           0    0    3               00 r[3]=sqlite_sequence.name
REG[3] =   s1[b](8)
   7 Ne               4   12    3 (BINARY)      51 if r[4]!=r[3] goto 12
REG[4] =   t1[b](8)
REG[3] =   s1[b](8)
   8 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
   9 Rowid            0    5    0               00 r[5]=rowid
REG[5] =  i:1
  10 Once             0   11    0               00 
  11 Delete           0    0    0 sqlite_sequence 02 
  12 Next             0    6    0               01 
  13 Close            0    0    0               00 
  14 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  15 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  16 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  17 Explain          0    0    0 SCAN TABLE sqlite_master 00 
  18 Rewind           1   28    0               00 
  19 Column           1    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
  20 Ne               4   27    3 (BINARY)      52 if r[4]!=r[3] goto 27
REG[4] =   t1[b](8)
REG[3] =   s2[t1](8)
  27 Next             1   19    0               01 
  19 Column           1    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[b](8)
  20 Ne               4   27    3 (BINARY)      52 if r[4]!=r[3] goto 27
REG[4] =   t1[b](8)
REG[3] =   s1[b](8)
  21 Column           1    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
  22 Eq               9   27    8 (BINARY)      52 if r[9]==r[8] goto 27
REG[9] =   t7[trigger](8)
REG[8] =   s5[table](8)
  23 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  24 Rowid            1   10    0               00 r[10]=rowid
REG[10] =  i:2
  25 Once             1   26    0               00 
  26 Delete           1    0    0 sqlite_master 02 
  27 Next             1   19    0               01 
  19 Column           1    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s15[sqlite_sequence](8)
  20 Ne               4   27    3 (BINARY)      52 if r[4]!=r[3] goto 27
REG[4] =   t1[b](8)
REG[3] =   s15[sqlite_sequence](8)
  27 Next             1   19    0               01 
  19 Column           1    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t2](8)
  20 Ne               4   27    3 (BINARY)      52 if r[4]!=r[3] goto 27
REG[4] =   t1[b](8)
REG[3] =   s2[t2](8)
  27 Next             1   19    0               01 
  19 Column           1    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s3[tr1](8)
  20 Ne               4   27    3 (BINARY)      52 if r[4]!=r[3] goto 27
REG[4] =   t1[b](8)
REG[3] =   s3[tr1](8)
  27 Next             1   19    0               01 
  28 Close            1    0    0               00 
  29 Destroy          3    8    0               00 
REG[8] =  i:0
  30 Null             0   11   12               00 r[11..12]=NULL
REG[11] =  NULL
  31 IfNot            8   40    1               00 
REG[8] =  i:0
  40 Close            2    0    0               00 
  41 Integer          0   19    0               00 r[19]=0
REG[19] =  i:0
  42 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  43 RowSetRead      11   54   12               00 r[12]=rowset(11)
REG[11] =  NULL
REG[12] =  NULL
  54 Close            2    0    0               00 
  55 DropTable        0    0    0 b             00 
  56 SetCookie        0    1    5               00 
  57 Halt             0    0    0               00 
SQL: [;CREATE TABLE t1i1(t2i1 TEXT, CHECK(t2i1<>+t2i1));]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    5 0             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:6
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t1i1          00 r[7]='t1i1'
REG[7] =   t4[t1i1](8)
  22 String8          0    8    0 t1i1          00 r[8]='t1i1'
REG[8] =   t4[t1i1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  24 String8          0   10    0 CREATE TABLE t1i1(t2i1 TEXT, CHECK(t2i1<>+t2i1)) 00 r[10]='CREATE TABLE t1i1(t2i1 TEXT, CHECK(t2i1<>+t2i1))'
REG[10] =   t48[CREATE TABLE t1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s68[06171515016D7461626C657431693174.....mtablet1i1t](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s68[06171515016D7461626C657431693174.....mtablet1i1t](8)
REG[5] =  i:6
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    6               00 
  30 ParseSchema      0    0    0 tbl_name='t1i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s4[t1i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s48[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t1i1](8)
REG[6] =  i:3
REG[7] =   s48[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    6 0             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:7
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:7
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:7
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:7
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:7
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  22 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  24 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  26 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:7
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            3    0    0               00 
  29 SetCookie        0    1    7               00 
  30 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:7
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  32 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    7 0             01 usesStmtJournal=0
  12 TableLock        0    7    0 sqlite_stat1  00 iDb=0 root=7 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [;
;SELECT t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
    FROM t2 AS t2, t2 AS y
   ORDER BY +t2.w, +t2.r1;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    0    7 0             01 usesStmtJournal=0
  34 TableLock        0    5    0 t2            00 iDb=0 root=5 write=0
  35 Goto             0    1    0               00 
   1 SorterOpen       2    4    0 k(2,B,B)      00 
   2 OpenRead         0    5    0 2             00 root=5 iDb=0; t2
   3 OpenRead         1    5    0 2             00 root=5 iDb=0; t2
   4 Explain          0    0    0 SCAN TABLE t2 AS t2 00 
   5 Rewind           0   24    0               00 
   6 Explain          0    1    1 SCAN TABLE t2 AS y 00 
   7 Rewind           1   23    0               00 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  NULL
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String8          0    6    0 <>            00 r[6]='<>'
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  NULL
REG[4] =  NULL
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  NULL
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  NULL
REG[4] =  NULL
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  NULL
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s4[04000000....](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s4[04000000....](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  NULL
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  NULL
REG[4] =  NULL
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =   s3[xyz](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =   s3[xyz](8)
REG[4] =  NULL
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  NULL
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s4[04000000....](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s4[04000000....](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  NULL
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  NULL
REG[4] =  NULL
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  i:5
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  i:5
REG[4] =  NULL
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  NULL
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s4[04000000....](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s4[04000000....](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  NULL
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  NULL
REG[4] =  NULL
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  s3[303132012](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  s3[303132012](8)
REG[4] =  NULL
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  NULL
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s4[04000000....](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s4[04000000....](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  NULL
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  NULL
REG[4] =  NULL
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  r:4.75
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  r:4.75
REG[4] =  NULL
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  NULL
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s4[04000000....](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s4[04000000....](8)
  22 Next             1    8    0               01 
  23 Next             0    6    0               01 
   6 Explain          0    1    1 SCAN TABLE t2 AS y 00 
   7 Rewind           1   23    0               00 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =   s3[xyz](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =   s3[xyz](8)
REG[4] =   s5[xyz<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  NULL
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  NULL
REG[4] =   s5[xyz<>](8)
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =   s3[xyz](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s7[0413000078797A....xyz](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s7[0413000078797A....xyz](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =   s3[xyz](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =   s3[xyz](8)
REG[4] =   s5[xyz<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =   s3[xyz](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =   s3[xyz](8)
REG[4] =   s5[xyz<>](8)
REG[3] =   s8[xyz<>xyz](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =   s3[xyz](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s15[0413001D78797A78797A3C3E78797A....xyzxyz<>xyz](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s15[0413001D78797A78797A3C3E78797A....xyzxyz<>xyz](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =   s3[xyz](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =   s3[xyz](8)
REG[4] =   s5[xyz<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  i:5
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  i:5
REG[4] =   s5[xyz<>](8)
REG[3] =   s6[xyz<>5](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =   s3[xyz](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s13[0413001978797A78797A3C3E35....xyzxyz<>5](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s13[0413001978797A78797A3C3E35....xyzxyz<>5](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =   s3[xyz](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =   s3[xyz](8)
REG[4] =   s5[xyz<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  s3[303132012](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  s3[303132012](8)
REG[4] =   s5[xyz<>](8)
REG[3] =   s8[xyz<>012](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =   s3[xyz](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s15[0413001D78797A78797A3C3E303132....xyzxyz<>012](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s15[0413001D78797A78797A3C3E303132....xyzxyz<>012](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =   s3[xyz](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =   s3[xyz](8)
REG[4] =   s5[xyz<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  r:4.75
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  r:4.75
REG[4] =   s5[xyz<>](8)
REG[3] =   s9[xyz<>4.75](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =   s3[xyz](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s16[0413001F78797A78797A3C3E342E3735....xyzxyz<>4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s16[0413001F78797A78797A3C3E342E3735....xyzxyz<>4.75](8)
  22 Next             1    8    0               01 
  23 Next             0    6    0               01 
   6 Explain          0    1    1 SCAN TABLE t2 AS y 00 
   7 Rewind           1   23    0               00 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  i:5
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  i:5
REG[4] =   s3[5<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  NULL
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  NULL
REG[4] =   s3[5<>](8)
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  si:5
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s5[0401000005.....](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s5[0401000005.....](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  i:5
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  i:5
REG[4] =   s3[5<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =   s3[xyz](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =   s3[xyz](8)
REG[4] =   s3[5<>](8)
REG[3] =   s6[5<>xyz](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  si:5
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s11[0401001905353C3E78797A.....5<>xyz](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s11[0401001905353C3E78797A.....5<>xyz](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  i:5
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  i:5
REG[4] =   s3[5<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  i:5
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  i:5
REG[4] =   s3[5<>](8)
REG[3] =   s4[5<>5](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  si:5
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s9[0401001505353C3E35.....5<>5](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s9[0401001505353C3E35.....5<>5](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  i:5
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  i:5
REG[4] =   s3[5<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  s3[303132012](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  s3[303132012](8)
REG[4] =   s3[5<>](8)
REG[3] =   s6[5<>012](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  si:5
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s11[0401001905353C3E303132.....5<>012](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s11[0401001905353C3E303132.....5<>012](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  i:5
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  i:5
REG[4] =   s3[5<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  r:4.75
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  r:4.75
REG[4] =   s3[5<>](8)
REG[3] =   s7[5<>4.75](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  si:5
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s12[0401001B05353C3E342E3735.....5<>4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s12[0401001B05353C3E342E3735.....5<>4.75](8)
  22 Next             1    8    0               01 
  23 Next             0    6    0               01 
   6 Explain          0    1    1 SCAN TABLE t2 AS y 00 
   7 Rewind           1   23    0               00 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  s3[303132012](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  s3[303132012](8)
REG[4] =   s5[012<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  NULL
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  NULL
REG[4] =   s5[012<>](8)
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  s3[303132012](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s7[04120000303132....012](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s7[04120000303132....012](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  s3[303132012](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  s3[303132012](8)
REG[4] =   s5[012<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =   s3[xyz](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =   s3[xyz](8)
REG[4] =   s5[012<>](8)
REG[3] =   s8[012<>xyz](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  s3[303132012](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s15[0412001D3031323031323C3E78797A....012012<>xyz](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s15[0412001D3031323031323C3E78797A....012012<>xyz](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  s3[303132012](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  s3[303132012](8)
REG[4] =   s5[012<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  i:5
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  i:5
REG[4] =   s5[012<>](8)
REG[3] =   s6[012<>5](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  s3[303132012](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s13[041200193031323031323C3E35....012012<>5](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s13[041200193031323031323C3E35....012012<>5](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  s3[303132012](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  s3[303132012](8)
REG[4] =   s5[012<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  s3[303132012](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  s3[303132012](8)
REG[4] =   s5[012<>](8)
REG[3] =   s8[012<>012](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  s3[303132012](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s15[0412001D3031323031323C3E303132....012012<>012](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s15[0412001D3031323031323C3E303132....012012<>012](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  s3[303132012](8)
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  s3[303132012](8)
REG[4] =   s5[012<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  r:4.75
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  r:4.75
REG[4] =   s5[012<>](8)
REG[3] =   s9[012<>4.75](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  s3[303132012](8)
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s16[0412001F3031323031323C3E342E3735....012012<>4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s16[0412001F3031323031323C3E342E3735....012012<>4.75](8)
  22 Next             1    8    0               01 
  23 Next             0    6    0               01 
   6 Explain          0    1    1 SCAN TABLE t2 AS y 00 
   7 Rewind           1   23    0               00 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  r:4.75
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  r:4.75
REG[4] =   s6[4.75<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  NULL
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  NULL
REG[4] =   s6[4.75<>](8)
REG[3] =  NULL
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  r:4.75
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s12[040700004013000000000000....@.......](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s12[040700004013000000000000....@.......](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  r:4.75
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  r:4.75
REG[4] =   s6[4.75<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =   s3[xyz](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =   s3[xyz](8)
REG[4] =   s6[4.75<>](8)
REG[3] =   s9[4.75<>xyz](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  r:4.75
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s21[0407001F4013000000000000342E3735....@.......4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s21[0407001F4013000000000000342E3735....@.......4.75](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  r:4.75
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  r:4.75
REG[4] =   s6[4.75<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  i:5
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  i:5
REG[4] =   s6[4.75<>](8)
REG[3] =   s7[4.75<>5](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  r:4.75
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s19[0407001B4013000000000000342E3735....@.......4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s19[0407001B4013000000000000342E3735....@.......4.75](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  r:4.75
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  r:4.75
REG[4] =   s6[4.75<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  s3[303132012](8)
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  s3[303132012](8)
REG[4] =   s6[4.75<>](8)
REG[3] =   s9[4.75<>012](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  r:4.75
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s21[0407001F4013000000000000342E3735....@.......4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s21[0407001F4013000000000000342E3735....@.......4.75](8)
  22 Next             1    8    0               01 
   8 Column           0    0    5               00 r[5]=t2.w
REG[5] =  r:4.75
   9 Column           0    1    7               00 r[7]=t2.r1
REG[7] =  NULL
  10 Column           1    1    8               00 r[8]=t2.r1
REG[8] =  NULL
  11 Ne               8   14    7 (BINARY)      53 if r[8]!=r[7] goto 14
REG[8] =  NULL
REG[7] =  NULL
  14 String           2    6    0 <>            00 r[6]='<>' (len=2)
REG[6] =   t2[<>](8)
  15 Concat           6    5    4               00 r[4]=r[5]+r[6]
REG[6] =   t2[<>](8)
REG[5] =  r:4.75
REG[4] =   s6[4.75<>](8)
  16 Column           1    0    6               00 r[6]=t2.w
REG[6] =  r:4.75
  17 Concat           6    4    3               00 r[3]=r[4]+r[6]
REG[6] =  r:4.75
REG[4] =   s6[4.75<>](8)
REG[3] =   s10[4.75<>4.75](8)
  18 Copy             5    1    0               00 r[1]=r[5]
REG[1] =  r:4.75
  19 Column           0    1    2               00 r[2]=t2.r1
REG[2] =  NULL
  20 MakeRecord       1    3    9               00 r[9]=mkrec(r[1..3])
REG[9] =  s22[040700214013000000000000342E3735...!@.......4.75](8)
  21 SorterInsert     2    9    0               00 
REG[9] =  s22[040700214013000000000000342E3735...!@.......4.75](8)
  22 Next             1    8    0               01 
  23 Next             0    6    0               01 
  24 Close            0    0    0               00 
  25 Close            1    0    0               00 
  26 OpenPseudo       3   10    4               00 4 columns in r[10]
  27 SorterSort       2   32    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s9[4.75<>xyz](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s9[4.75<>xyz](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s7[4.75<>5](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s7[4.75<>5](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s9[4.75<>012](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s9[4.75<>012](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s10[4.75<>4.75](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s10[4.75<>4.75](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s6[5<>xyz](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s6[5<>xyz](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s4[5<>5](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s4[5<>5](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s6[5<>012](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s6[5<>012](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s7[5<>4.75](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s7[5<>4.75](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s8[xyz<>xyz](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s8[xyz<>xyz](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s6[xyz<>5](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s6[xyz<>5](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s8[xyz<>012](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s8[xyz<>012](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s9[xyz<>4.75](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s9[xyz<>4.75](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =  NULL
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =  NULL
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s8[012<>xyz](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s8[012<>xyz](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s6[012<>5](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s6[012<>5](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s8[012<>012](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s8[012<>012](8)
  31 SorterNext       2   28    0               00 
  28 SorterData       2   10    3               00 r[10]=data
  29 Column           3    2    3               00 r[3]=t2.w || CASE WHEN t2.r1==y.r1 THEN '==' ELSE '<>' END || y.w
REG[3] =   s9[012<>4.75](8)
  30 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s9[012<>4.75](8)
  31 SorterNext       2   28    0               00 
  32 Halt             0    0    0               00 
SQL: [;CREATE TABLE i1(t0 INTEGER PRIMARY KEY,a0);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    7 0             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:8
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:8
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 i1            00 r[7]='i1'
REG[7] =   t2[i1](8)
  22 String8          0    8    0 i1            00 r[8]='i1'
REG[8] =   t2[i1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:8
  24 String8          0   10    0 CREATE TABLE i1(t0 INTEGER PRIMARY KEY,a0) 00 r[10]='CREATE TABLE i1(t0 INTEGER PRIMARY KEY,a0)'
REG[10] =   t42[CREATE TABLE i1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s58[0617111101617461626C656931693108.....atablei1i1.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s58[0617111101617461626C656931693108.....atablei1i1.](8)
REG[5] =  i:8
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    8               00 
  30 ParseSchema      0    0    0 tbl_name='i1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 i1            00 r[2]='i1'
REG[2] =   t2[i1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s15[sqlite_sequence](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s15[sqlite_sequence](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[t2](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s3[tr1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[i1](8)
REG[1] =   s2[i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s42[CREATE TABLE i1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[i1](8)
REG[6] =  i:8
REG[7] =   s42[CREATE TABLE i1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;WITH RECURSIVE t2(t1i1) AS (VALUES(1) UNION ALL SELECT t1i1+1 FROM t2 WHERE t1i1<100)
  INSERT INTO t1i1(t2i1,t2i1) SELECT t1i1, 10000000000000004.0 FROM t2
   WHERE t1i1 NOT IN (23,37);]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    8 0             01 usesStmtJournal=1
  55 TableLock        0    3    1 t1i1          00 iDb=0 root=3 write=1
  56 Integer        100   10    0               00 r[10]=100
REG[10] =  i:100
  57 Integer          1   12    0               00 r[12]=1
REG[12] =  i:1
  58 Integer         23   15    0               00 r[15]=23
REG[15] =  i:23
  59 Integer         37   16    0               00 r[16]=37
REG[16] =  i:37
  60 Goto             0    1    0               00 
   1 InitCoroutine    3   40    2               00 
  40 Integer          0   19    0               00 r[19]=0
REG[19] =  i:0
  41 OpenWrite        4    3    0 1             00 root=3 iDb=0; t1i1
  42 Yield            3   51    0               00 
REG[3] =  i:1
REG[3] =  i:42
   2 InitCoroutine    4   24    3               00 t2
  24 Explain          0    0    0 SCAN SUBQUERY 1 00 
  25 InitCoroutine    4    0    3               00 
  26 Yield            4   39    0               00 next row of "t2"
REG[4] =  i:2
REG[4] =  i:26
   3 OpenPseudo       1    5    1               00 1 columns in r[5]
   4 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   5 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
   6 MakeRecord       6    1    7               00 r[7]=mkrec(r[6])
REG[7] =  s2[0209..](8)
   7 NewRowid         2    8    0               00 r[8]=rowid
REG[8] =  i:1
   8 Insert           2    7    8               08 intkey=r[8] data=r[7]
REG[7] =  s2[0209..](8)
REG[8] =  i:1
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    5    0               00 r[5]=data
REG[5] =  s2[0209..](8)
  12 Delete           2    0    0               00 
  13 Column           1    0    9               00 r[9]=
REG[9] =  i:1
  14 Yield            4    0    0               00 
REG[4] =  i:26
REG[4] =  i:14
  27 Noop             0    0    0               00 begin IN expr
  28 Copy             9   13    0               00 r[13]=r[9]; t2.t1i1
REG[13] =  i:1
  29 BitAnd          13   13   14               00 r[14]=r[13]&r[13]
REG[13] =  i:1
REG[13] =  i:1
REG[14] =  i:1
  30 Eq              13   34   15 (BINARY)      41 if r[13]==r[15] goto 34
REG[13] =  i:1
REG[15] =  i:23
  31 Eq              13   34   16 (BINARY)      41 if r[13]==r[16] goto 34
REG[13] =  i:1
REG[16] =  i:37
  32 IsNull          14   38    0               00 if r[14]==NULL goto 38
REG[14] =  i:1
  33 Goto             0   35    0               00 end IN expr
  35 Copy             9   17    0               00 r[17]=r[9]; t2.t1i1
REG[17] =  i:1
  36 Real             0   18    0 1e+16         00 r[18]=1e+16
REG[18] =  r:1e+16
  37 Yield            3    0    0               00 
REG[3] =  i:42
REG[3] =  i:37
  43 NewRowid         4    1    0               00 r[1]=rowid
REG[1] =  i:1
  44 SCopy           17    2    0               00 r[2]=r[17]
REG[2] =  i:1
  45 Ne               2   47    2 (BINARY)      52 if r[2]!=r[2] goto 47

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4c108d9859 in __GI_abort () at abort.c:79
#2  0x00007f4c108d9729 in __assert_fail_base (fmt=0x7f4c10a6f588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=<optimized out>)
    at assert.c:92
#3  0x00007f4c108eafd6 in __GI___assert_fail (assertion=0x20a915 "!(fg&(MEM_Str|MEM_Blob))", file=0x222c23 "sqlite3.c", line=68526, function=0x21067c "int sqlite3VdbeMemStringify(Mem *, u8, u8)") at assert.c:101
#4  0x000000000027a9de in sqlite3VdbeMemStringify (pMem=0xa68420, enc=1 '\001', bForce=1 '\001') at sqlite3.c:68526
#5  0x00000000003c7fc0 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78710
#6  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#7  0x000000000024b5e9 in main (argc=1, argv=0x7ffd97a39fa8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 30527] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
