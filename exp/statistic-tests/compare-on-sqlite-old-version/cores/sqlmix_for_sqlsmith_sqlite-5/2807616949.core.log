GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000543,sig:06,src:010506+024788,time:15730937,execs:2715361,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s40[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [ANALYZE;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    1    2 1             01 usesStmtJournal=0
  44 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  45 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  46 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  22 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  24 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  26 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:2
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            3    0    0               00 
  29 SetCookie        0    1    3               00 
  30 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:3
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  32 OpenRead         4    2    0 2             00 root=2 iDb=0; t1
  33 String8          0   17    0 t1            00 r[17]='t1'; t1
REG[17] =   t2[t1](8)
  34 Count            4   19    0               00 r[19]=count()
REG[19] =  i:0
  35 IfNot           19   40    0               00 
REG[19] =  i:0
  40 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             01 usesStmtJournal=0
  12 TableLock        0    3    0 sqlite_stat1  00 iDb=0 root=3 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  41 Expire           0    0    0               00 
  42 Halt             0    0    0               00 
SQL: [REINDEX
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [SELECT name FROM sqlite_master WHERE type = 'table';]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    3 1             01 usesStmtJournal=0
  12 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  13 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  14 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[2]!=r[1] goto 8
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s2[t1](8)
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[2]!=r[1] goto 8
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s12[sqlite_stat1](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;CREATE INDEX c ON t1(-a=a);]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    1    3 1             01 usesStmtJournal=0
  39 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  40 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  41 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  42 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 c             00 r[4]='c'
REG[4] =   t1[c](8)
   8 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX c ON t1(-a=a) 00 r[7]='CREATE INDEX c ON t1(-a=a)'
REG[7] =   t26[CREATE INDEX c ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s41[06170F110141696E6465786374310443.....Aindexct1.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s41[06170F110141696E6465786374310443.....Aindexct1.C](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  26 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        0    1    4               00 
  35 ParseSchema      0    0    0 name='c' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE INDEX c ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:4
REG[7] =   s26[CREATE INDEX c ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
SQL: [VACUUM
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    4 1             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s40[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s40[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s27[t1(a INTEGER PR](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s27[t1(a INTEGER PR](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s50[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s50[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(a INTEGER PRIMARY KEY,b)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    0 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:1
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:1
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:1
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t1            00 r[7]='t1'
REG[7] =   t2[t1](8)
  22 String8          0    8    0 t1            00 r[8]='t1'
REG[8] =   t2[t1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  24 String8          0   10    0 CREATE TABLE t1(a INTEGER PRIMARY KEY,b) 00 r[10]='CREATE TABLE t1(a INTEGER PRIMARY KEY,b)'
REG[10] =   t40[CREATE TABLE t1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s56[06171111015D7461626C657431743102.....]tablet1t1.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s56[06171111015D7461626C657431743102.....]tablet1t1.](8)
REG[5] =  i:1
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    1               00 
  30 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s40[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s40[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:3
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s39[CREATE TABLE sq](8)
  13 Function         2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s39[CREATE TABLE sq](8)
REG[10] =  i:14
REG[5] =   s26[sqlite_stat1(tb](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s26[sqlite_stat1(tb](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s49[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s49[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.sqlite_stat1(tbl,idx,stat)]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      2    1    1 0             01 usesStmtJournal=0
  33 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:3
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:2
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  22 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  24 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:2
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        2    1    2               00 
  30 ParseSchema      2    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:3
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s40[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s26[CREATE INDEX c ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s26[CREATE INDEX c ](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s26[CREATE INDEX c ](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s26[CREATE INDEX c ](8)
REG[7] =  i:14
REG[1] =   s13[c ON t1(-a=a)](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s13[c ON t1(-a=a)](8)
REG[5] =   t23[CREATE INDEX va](8)
REG[4] =   s36[CREATE INDEX va](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s36[CREATE INDEX va](8)
SQL: [CREATE INDEX vacuum_db.c ON t1(-a=a)]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      2    1    2 0             01 usesStmtJournal=0
  39 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  40 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  41 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  42 Goto             0    1    0               00 
   1 Noop             0   37    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:4
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:3
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 c             00 r[4]='c'
REG[4] =   t1[c](8)
   8 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:4
  10 String8          0    7    0 CREATE INDEX c ON t1(-a=a) 00 r[7]='CREATE INDEX c ON t1(-a=a)'
REG[7] =   t26[CREATE INDEX c ](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s41[06170F110141696E6465786374310443.....Aindexct1.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s41[06170F110141696E6465786374310443.....Aindexct1.C](8)
REG[2] =  i:3
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 2             00 root=2 iDb=2; t1
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  26 SorterSort       3   31    0               00 
  31 Close            1    0    0               00 
  32 Close            2    0    0               00 
  33 Close            3    0    0               00 
  34 SetCookie        2    1    3               00 
  35 ParseSchema      2    0    0 name='c' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
REG[2] =   t1[c](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[c](8)
REG[1] =   s1[c](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE INDEX c ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:4
REG[7] =   s26[CREATE INDEX c ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  36 Expire           0    0    0               00 
  37 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s40[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s39[CREATE TABLE sq](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s26[CREATE INDEX c ](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s26[CREATE INDEX c ](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    4 1             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    0    4 1             01 usesStmtJournal=1
  37 Transaction      2    1    3 0             01 usesStmtJournal=1
  38 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  39 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  40 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  41 Goto             0    1    0               00 
   1 InitCoroutine    4   11    2               00 
  11 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  12 OpenWrite        1    2    2 2             00 root=2 iDb=2; t1
  13 OpenWrite        2    4    2 k(2,,)        00 root=4 iDb=2; c
  14 Yield            4   32    0               00 
REG[4] =  i:1
REG[4] =  i:14
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 EndCoroutine     4    0    0               00 
REG[4] =  i:14
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s12[sqlite_stat1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:3
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:3
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  13 Function         0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[11] =   z14['sqlite_stat1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z14['sqlite_stat1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s36[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s36[INSERT INTO vac](8)
REG[8] =   s56[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s12[sqlite_stat1](8)
  17 Function         0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s12[sqlite_stat1](8)
REG[9] =   z14['sqlite_stat1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z14['sqlite_stat1'](8)
REG[8] =   s56[INSERT INTO vac](8)
REG[5] =   s70[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s70[INSERT INTO vac](8)
REG[7] =   s71[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s71[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'sqlite_stat1' SELECT * FROM main.'sqlite_stat1';]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    4 1             01 usesStmtJournal=0
  24 Transaction      2    1    3 0             01 usesStmtJournal=0
  25 TableLock        0    3    0 sqlite_stat1  00 iDb=0 root=3 write=0
  26 TableLock        2    3    1 sqlite_stat1  00 iDb=2 root=3 write=1
  27 Goto             0    1    0               00 
   1 InitCoroutine    5   12    2               00 
  12 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  13 OpenWrite        1    3    2 3             00 root=3 iDb=2; sqlite_stat1
  14 Yield            5   20    0               00 
REG[5] =  i:1
REG[5] =  i:14
   2 OpenRead         0    3    0 3             00 root=3 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 EndCoroutine     5    0    0               00 
REG[5] =  i:14
  20 Close            1    0    0               00 
  21 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    3 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[c](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    3 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s12[sqlite_stat1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[c](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    4 1             01 usesStmtJournal=0
  32 Transaction      2    1    3 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  36 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  37 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  38 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  39 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:22
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:3
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:3
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:22
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:0
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s40[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s40[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:3
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s26[CREATE INDEX c ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:4
REG[3] =   s26[CREATE INDEX c ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 2             00 usesStmtJournal=0
  12 TableLock        0    3    0 sqlite_stat1  00 iDb=0 root=3 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    0 3             00 root=3 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(a) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 2             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:0
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:0
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0   65    0               00 Start at 65
  65 Transaction      0    0    5 2             01 usesStmtJournal=0
  66 Transaction      1    0    0 2             01 usesStmtJournal=0
  67 Transaction      2    0    0 0             01 usesStmtJournal=0
  68 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  69 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  70 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    4    1 [2,4]         00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  13 OpenRead         2    4    0 k(2,,)        00 root=4 iDb=0; c
  14 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  15 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  16 Rewind           1   35    0               00 
  35 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  36 IfPos            1   38    0               00 if r[1]>0 then r[1]-=0, goto 38
REG[1] =  i:100
  38 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  39 Eq               8   44    3               90 if r[8]==r[3] goto 44
REG[8] =  i:0
REG[3] =  i:0
  44 IfPos            1   46    0               00 if r[1]>0 then r[1]-=0, goto 46
REG[1] =  i:100
  46 IntegrityCk      2    1    1 ]             01 
  47 IsNull           2   52    0               00 if r[2]==NULL goto 52
REG[2] =  NULL
  52 IfPos            1   54    0               00 if r[1]>0 then r[1]-=0, goto 54
REG[1] =  i:100
  54 IntegrityCk      2    1    1 ]             02 
  55 IsNull           2   60    0               00 if r[2]==NULL goto 60
REG[2] =  NULL
  60 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
  61 If               1   64    0               00 
REG[1] =  i:0
  62 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
  63 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
  64 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(a) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 2             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:0
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:0
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(b) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 2             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:0
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:0
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(a) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 2             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:0
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:0
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [SELECT rowid, a, a, a FROM 't1'
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [DELETE FROM t1;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Transaction      0    1    5 2             01 usesStmtJournal=0
   7 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
   8 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Clear            2    0    1 t1            00 
   3 Clear            4    0    0               00 
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   5 Halt             0    0    0               00 
SQL: [SELECT rowid, a, a, a FROM 't1'
;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    5 2             01 usesStmtJournal=0
  13 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  14 Goto             0    1    0               00 
   1 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [INSERT INTO 't1' ('b', 'b', 'b') VALUES(?2, ?3, ?4)
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    5 2             01 usesStmtJournal=0
  21 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  22 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  23 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
   3 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
   4 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 SoftNull         2    0    0               00 r[2]=NULL
   6 Variable         2    3    0 ?2            00 r[3]=parameter(2,?2)
REG[3] =  NULL
   7 Affinity         2    1    0 D             00 affinity(r[2])
   8 Subtract         1    9    8               00 r[8]=r[9]-r[1]
REG[1] =  i:1
REG[9] =  i:0
REG[8] =  i:-1
   9 Eq               1    6    8               64 if r[1]==r[8] goto 6; c column 0
REG[1] =  i:1
REG[8] =  i:-1
REG[6] =  i:0
  10 IntCopy          1    7    0               00 r[7]=r[1]; rowid
REG[7] =  i:1
  11 MakeRecord       6    2    5               00 r[5]=mkrec(r[6..7]); for c
REG[5] =  s3[030809...](8)
  12 IdxInsert        1    5    0               10 key=r[5]
REG[5] =  s3[030809...](8)
  13 MakeRecord       2    2    8               00 r[8]=mkrec(r[2..3])
REG[8] =  s3[030000...](8)
  14 Insert           0    8    1 t1            1B intkey=r[1] data=r[8]
REG[8] =  s3[030000...](8)
REG[1] =  i:1
  15 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  16 Close            0    0    0               00 
  17 Close            1    0    0               00 
  18 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  19 Halt             0    0    0               00 
SQL: [SELECT count(*) FROM 't1'
;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    5 2             01 usesStmtJournal=0
   8 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    2    0 1             00 root=2 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:1
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:1
   6 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(b) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    5 2             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  NULL
   7 AggStep0         0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  NULL
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:1
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:1
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [;UPDATE OR REPLACE t1 SET a=(SELECT a FROM t1 WHERE a=t1.a);]
VDBE Trace:
   0 Init             0   57    0               00 Start at 57
  57 Transaction      0    1    5 2             01 usesStmtJournal=0
  58 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  59 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  60 Goto             0    1    0               00 
   1 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   6 RowSetAdd        2    3    0               00 rowset(2)=r[3]
REG[2] =  NULL
REG[3] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  10 OpenWrite        0    2    0 2             00 root=2 iDb=0; t1
  11 OpenWrite        1    4    0 k(2,,)        00 root=4 iDb=0; c
  12 RowSetRead       2   53    3               00 r[3]=rowset(2)
REG[2] =  (rowset)
REG[3] =  i:1
  13 NotExists        0   12    3               00 intkey=r[3]
REG[3] =  i:1
  14 Once             0   26    0               00 
  15 Null             0    8    0               00 r[8]=NULL; Init subquery result
REG[8] =  NULL
  16 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  17 OpenRead         2    2    0 0             00 root=2 iDb=0; t1
  18 Explain          0    0    0 SCAN TABLE t1 00 
  19 Rewind           2   25    0               00 
  20 Rowid            2   10    0               00 r[10]=rowid
REG[10] =  i:1
  21 Ne              10   24   10               53 if r[10]!=r[10] goto 24
REG[10] =  i:1
REG[10] =  i:1
  22 Copy            10    8    0               00 r[8]=r[10]
REG[8] =  i:1
  23 DecrJumpZero     9   25    0               00 if (--r[9])==0 goto 25
REG[9] =  i:1
  25 Close            2    0    0               00 
  26 SCopy            8    4    0               00 r[4]=r[8]
REG[4] =  i:1
  27 MustBeInt        4    0    0               00 
REG[4] =  i:1
  28 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  29 Column           0    1    6               00 r[6]=t1.b
REG[6] =  NULL
  30 Eq               4   37    3               90 if r[4]==r[3] goto 37
REG[4] =  i:1
REG[3] =  i:1
  37 Affinity         5    1    0 D             00 affinity(r[5])
  38 Subtract         4   14   11               00 r[11]=r[14]-r[4]
REG[4] =  i:1
REG[14] =  i:0
REG[11] =  i:-1
  39 Eq               4   12   11               64 if r[4]==r[11] goto 12; c column 0
REG[4] =  i:1
REG[11] =  i:-1
REG[12] =  i:0
  40 IntCopy          4   13    0               00 r[13]=r[4]; rowid
REG[13] =  i:1
  41 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for c
REG[1] =  s3[030809...](8)
  42 NotExists        0   48    3               00 intkey=r[3]
REG[3] =  i:1
  43 Subtract        15   14   11               00 r[11]=r[14]-r[15]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fae7851a859 in __GI_abort () at abort.c:79
#2  0x00007fae7851a729 in __assert_fail_base (fmt=0x7fae786b0588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=<optimized out>)
    at assert.c:92
#3  0x00007fae7852bfd6 in __GI___assert_fail (assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e2946 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77360
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffed0f246d8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 31263] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
