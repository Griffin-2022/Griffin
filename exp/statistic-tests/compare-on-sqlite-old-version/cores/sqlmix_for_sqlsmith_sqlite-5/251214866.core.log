GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000603,sig:06,src:020543+020390,time:19994801,execs:3450123,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;PRAGMA sql_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
SQL-trace: ;PRAGMA sql_trace=on;
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;SELECT printf('|%7.8c|%-7.8c|','*','*');]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
SQL-trace: ;
;SELECT printf('|%7.8c|%-7.8c|','*','*');
   4 String8          0    2    0 |%7.8c|%-7.8c| 00 r[2]='|%7.8c|%-7.8c|'
REG[2] =   t14[|%7.8c|%-7.8c|](8)
   5 String8          0    3    0 *             00 r[3]='*'
REG[3] =   t1[*](8)
   6 String8          0    4    0 *             00 r[4]='*'
REG[4] =   t1[*](8)
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 printf(-1)    03 r[1]=func(r[2..4])
REG[2] =   t14[|%7.8c|%-7.8c|](8)
REG[3] =   t1[*](8)
REG[4] =   t1[*](8)
REG[1] =   s19[|********|*****](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[|********|*****](8)
   3 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:3
REG[3] =   s21[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s96[CREATE TABLE "c](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:4
REG[3] =   s96[CREATE TABLE "c](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
SQL-trace: INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'keels',nullif('keels','keels'),'CLC')
;
   8 Transaction      0    1    2 1             01 usesStmtJournal=0
   9 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030900...](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030900...](8)
REG[1] =  i:1
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
;SELECT printf('|%,d|%,d|',1234567890,-1234567890);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
SQL-trace: ;
;SELECT printf('|%,d|%,d|',1234567890,-1234567890);
   4 String8          0    2    0 |%,d|%,d|     00 r[2]='|%,d|%,d|'
REG[2] =   t9[|%,d|%,d|](8)
   5 Integer       1234567890    3    0               00 r[3]=1234567890
REG[3] =  i:1234567890
   6 Integer       -1234567890    4    0               00 r[4]=-1234567890
REG[4] =  i:-1234567890
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 printf(-1)    03 r[1]=func(r[2..4])
REG[2] =   t9[|%,d|%,d|](8)
REG[3] =  i:1234567890
REG[4] =  i:-1234567890
REG[1] =   s1[|](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s1[|](8)
   3 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'keep',nullif('keep','keep'),'CAB')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'keep',nullif('keep','keep'),'CAB')
;
   8 Transaction      0    1    2 1             01 usesStmtJournal=0
   9 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030009...](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030009...](8)
REG[1] =  i:2
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [;
;SELECT printf('|%,d|%,d|',1234,-1234);]
VDBE Trace:
   0 Init             0    4    0               00 Start at 4
SQL-trace: ;
;SELECT printf('|%,d|%,d|',1234,-1234);
   4 String8          0    2    0 |%,d|%,d|     00 r[2]='|%,d|%,d|'
REG[2] =   t9[|%,d|%,d|](8)
   5 Integer       1234    3    0               00 r[3]=1234
REG[3] =  i:1234
   6 Integer       -1234    4    0               00 r[4]=-1234
REG[4] =  i:-1234
   7 Goto             0    1    0               00 
   1 Function0        7    2    1 printf(-1)    03 r[1]=func(r[2..4])
REG[2] =   t9[|%,d|%,d|](8)
REG[3] =  i:1234
REG[4] =  i:-1234
REG[1] =   s1[|](8)
   2 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s1[|](8)
   3 Halt             0    0    0               00 
SQL: [SELECT DISTINCT a, a, a||a FROM t1 
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
SQL-trace: SELECT DISTINCT a, a, a||a FROM t1 
;
  15 Transaction      0    0    2 1             01 usesStmtJournal=0
  16 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  17 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(3,B,B,B)    08 nColumn=0
   2 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   13    0               00 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   6 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:1
   7 Concat           1    1    3               00 r[3]=r[1]+r[1]
REG[1] =  i:1
REG[1] =  i:1
REG[3] =   s2[11](8)
   8 Found            1   12    1 3             00 key=r[1..3]
REG[1] =  si:1
REG[2] =  i:1
REG[3] =   s2[11](8)
   9 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s6[040909113131....11](8)
  10 IdxInsert        1    4    0               00 key=r[4]
REG[4] =  s6[040909113131....11](8)
  11 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  si:1
REG[2] =  i:1
REG[3] =   s2[11](8)
  12 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t1.a
REG[1] =  NULL
   6 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  NULL
   7 Concat           1    1    3               00 r[3]=r[1]+r[1]
REG[1] =  NULL
REG[1] =  NULL
REG[3] =  NULL
   8 Found            1   12    1 3             00 key=r[1..3]
REG[1] =  NULL
REG[2] =  NULL
REG[3] =  NULL
   9 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s4[04000000....](8)
  10 IdxInsert        1    4    0               00 key=r[4]
REG[4] =  s4[04000000....](8)
  11 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  NULL
REG[2] =  NULL
REG[3] =  NULL
  12 Next             0    5    0               01 
  13 Close            0    0    0               00 
  14 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'kerchief',nullif('kerchief','kerchief'),'CRCAB')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'kerchief',nullif('kerchief','kerchief'),'CRCAB')
;
   8 Transaction      0    1    2 1             01 usesStmtJournal=0
   9 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030009...](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030009...](8)
REG[1] =  i:3
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'kernels',nullif('kernels','kernels'),'CRMLC')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
SQL-trace: INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'kernels',nullif('kernels','kernels'),'CRMLC')
;
   8 Transaction      0    1    2 1             01 usesStmtJournal=0
   9 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  10 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030900...](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030900...](8)
REG[1] =  i:4
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(a,a,a,b,a) VALUES(1,0,'key',nullif('key','key'),'CA')
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
SQL-trace: INSERT INTO "main"."t1"(a,a,a,b,a) VALUES(1,0,'key',nullif('key','key'),'CA')
;
  10 Transaction      0    1    2 1             01 usesStmtJournal=0
  11 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  12 String8          0    4    0 key           00 r[4]='key'
REG[4] =   t3[key](8)
  13 String8          0    5    0 key           00 r[5]='key'
REG[5] =   t3[key](8)
  14 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 CollSeq          0    0    0 (BINARY)      00 
   5 Function0        3    4    3 nullif(2)     02 r[3]=func(r[4..5])
REG[4] =   t3[key](8)
REG[5] =   t3[key](8)
REG[3] =  NULL
   6 MakeRecord       2    2    6               00 r[6]=mkrec(r[2..3])
REG[6] =  s3[030900...](8)
   7 Insert           0    6    1 t1            1B intkey=r[1] data=r[6]
REG[6] =  s3[030900...](8)
REG[1] =  i:5
   8 Noop             0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [;CREATE TABLE tr2(d PRIMARY KEY);]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
SQL-trace: ;CREATE TABLE tr2(d PRIMARY KEY);
  42 Transaction      0    1    2 1             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Noop             0   23    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:6
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:4
  15 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  16 String8          0    7    0 sqlite_autoindex_tr2_1 00 r[7]='sqlite_autoindex_tr2_1'
REG[7] =   t22[sqlite_autoinde](8)
  17 String8          0    8    0 tr2           00 r[8]='tr2'
REG[8] =   t3[tr2](8)
  18 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:6
  19 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  20 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit](8)
  21 Insert           1   11    5               18 intkey=r[5] data=r[11]
REG[11] =  s37[061739130100696E64657873716C6974..9...indexsqlit](8)
REG[5] =  i:4
  22 Close            1    0    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:3
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:3
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:3
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:3
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 tr2           00 r[15]='tr2'
REG[15] =   t3[tr2](8)
  33 String8          0   16    0 tr2           00 r[16]='tr2'
REG[16] =   t3[tr2](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:5
  35 String8          0   18    0 CREATE TABLE tr2(d PRIMARY KEY) 00 r[18]='CREATE TABLE tr2(d PRIMARY KEY)'
REG[18] =   t31[CREATE TABLE tr](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s49[06171313014B7461626C657472327472.....Ktabletr2tr](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s49[06171313014B7461626C657472327472.....Ktabletr2tr](8)
REG[13] =  i:3
  38 Close            2    0    0               00 
  39 SetCookie        0    1    3               00 
  40 ParseSchema      0    0    0 tbl_name='tr2' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 tr2           00 r[2]='tr2'
REG[2] =   t3[tr2](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s3[tr2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s31[CREATE TABLE tr](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr2](8)
REG[6] =  i:5
REG[7] =   s31[CREATE TABLE tr](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[tr2](8)
REG[1] =   s3[tr2](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s22[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s22[sqlite_autoinde](8)
REG[6] =  i:6
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'kick',nullif('kick','kick'),'CAC')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'kick',nullif('kick','kick'),'CAC')
;
   8 Transaction      0    1    3 1             01 usesStmtJournal=0
   9 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   3 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030009...](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030009...](8)
REG[1] =  i:6
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [SELECT t2, t2, t2||t2 FROM c WHERE t2!='t2' 
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
SQL-trace: SELECT t2, t2, t2||t2 FROM c WHERE t2!='t2' 
;
  13 Transaction      0    0    3 1             01 usesStmtJournal=0
  14 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  15 String8          0    2    0 t2            00 r[2]='t2'
REG[2] =   t2[t2](8)
  16 Goto             0    1    0               00 
   1 OpenRead         0    4    0 5             00 root=4 iDb=0; c
   2 Explain          0    0    0 SCAN TABLE c  00 
   3 Rewind           0   11    0               00 
  11 Close            0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;CREATE INDEX t1i1 ON c(x,x);]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
SQL-trace: ;
;CREATE INDEX t1i1 ON c(x,x);
  35 Transaction      0    1    3 1             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  38 Goto             0    1    0               00 
   1 Noop             0   34    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:7
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t1i1          00 r[4]='t1i1'
REG[4] =   t4[t1i1](8)
   7 String8          0    5    0 c             00 r[5]='c'
REG[5] =   t1[c](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:7
   9 String8          0    7    0 CREATE INDEX t1i1 ON c(x,x) 00 r[7]='CREATE INDEX t1i1 ON c(x,x)'
REG[7] =   t27[CREATE INDEX t1](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s44[0617150F0143696E6465787431693163.....Cindext1i1c](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s44[0617150F0143696E6465787431693163.....Cindext1i1c](8)
REG[2] =  i:5
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    2 k(3,,,)       00 
  14 OpenRead         1    4    0 6             00 root=4 iDb=0; c
  15 Rewind           1   22    0               00 
  22 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  23 SorterSort       3   28    0               00 
  28 Close            1    0    0               00 
  29 Close            2    0    0               00 
  30 Close            3    0    0               00 
  31 SetCookie        0    1    4               00 
  32 ParseSchema      0    0    0 name='t1i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1i1          00 r[2]='t1i1'
REG[2] =   t4[t1i1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s22[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s22[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t1i1](8)
REG[1] =   s4[t1i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s4[t1i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s27[CREATE INDEX t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t1i1](8)
REG[6] =  i:7
REG[7] =   s27[CREATE INDEX t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(t3,t3,t3,t3,t3) VALUES(1,0,'kicking',nullif('kicking','kicking'),'CACAMC')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(t3,t3,t3,t3,t3) VALUES(1,0,'kicking',nullif('kicking','kicking'),'CACAMC')
;
  17 Transaction      0    1    4 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  22 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:1
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s4[04000009....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s4[04000009....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[070000000F000031.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[070000000F000031.......1](8)
REG[1] =  i:1
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,a,b,a,a) VALUES(1,0,'kiddie',nullif('kiddie','kiddie'),'CADA')
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
SQL-trace: INSERT INTO "main"."t1"(b,a,b,a,a) VALUES(1,0,'kiddie',nullif('kiddie','kiddie'),'CADA')
;
   9 Transaction      0    1    4 1             01 usesStmtJournal=0
  10 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   3 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030809...](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030809...](8)
REG[1] =  i:7
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(t2,t2,t2,r1,abc) VALUES(1,0,'kidnappings',nullif('kidnappings','kidnappings'),'CADMABAMC')
;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
SQL-trace: INSERT INTO "main"."c"(t2,t2,t2,r1,abc) VALUES(1,0,'kidnappings',nullif('kidnappings','kidnappings'),'CADMABAMC')
;
  24 Transaction      0    1    4 1             01 usesStmtJournal=0
  25 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  26 String8          0    9    0 kidnappings   00 r[9]='kidnappings'
REG[9] =   t11[kidnappings](8)
  27 String8          0   10    0 kidnappings   00 r[10]='kidnappings'
REG[10] =   t11[kidnappings](8)
  28 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  29 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  30 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  31 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 String8          0    1    0 CADMABAMC     00 r[1]='CADMABAMC'
REG[1] =   t9[CADMABAMC](8)
   4 NotNull          1    6    0               00 if r[1]!=NULL goto 6
REG[1] =   t9[CADMABAMC](8)
   6 MustBeInt        1    0    0               00 
REG[1] =   t9[CADMABAMC](8)
SQL: [INSERT INTO "main"."c"(r1,t3,r1,t2,t2) VALUES(1,0,'kids',nullif('kids','kids'),'CADC')
;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
SQL-trace: INSERT INTO "main"."c"(r1,t3,r1,t2,t2) VALUES(1,0,'kids',nullif('kids','kids'),'CADC')
;
  20 Transaction      0    1    4 1             01 usesStmtJournal=0
  21 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  22 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  23 String8          0    9    0 kids          00 r[9]='kids'
REG[9] =   t4[kids](8)
  24 String8          0   10    0 kids          00 r[10]='kids'
REG[10] =   t4[kids](8)
  25 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  26 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 CollSeq          0    0    0 (BINARY)      00 
   8 Function0        3    9    6 nullif(2)     02 r[6]=func(r[9..10])
REG[9] =   t4[kids](8)
REG[10] =   t4[kids](8)
REG[6] =  NULL
   9 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
  10 SCopy            4   11    0               00 r[11]=r[4]; x
REG[11] =  NULL
  11 SCopy            4   12    0               00 r[12]=r[4]; x
REG[12] =  NULL
  12 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:2
  13 MakeRecord      11    3    8               00 r[8]=mkrec(r[11..13]); for t1i1
REG[8] =  s5[0400000102.....](8)
  14 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000102.....](8)
  15 MakeRecord       2    6   14               00 r[14]=mkrec(r[2..7])
REG[14] =  s8[070009000F000030.......0](8)
  16 Insert           0   14    1 c             1B intkey=r[1] data=r[14]
REG[14] =  s8[070009000F000030.......0](8)
REG[1] =  i:2
  17 Close            0    0    0               00 
  18 Noop             1    0    0               00 
  19 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'killer',nullif('killer','killer'),'CLR')
;]
VDBE Trace:
   0 Init             0    8    0               00 Start at 8
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'killer',nullif('killer','killer'),'CLR')
;
   8 Transaction      0    1    4 1             01 usesStmtJournal=0
   9 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  10 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   3 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s3[030009...](8)
   5 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s3[030009...](8)
REG[1] =  i:8
   6 Noop             0    0    0               00 
   7 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(a,a,b,b,a) VALUES(1,0,'killer',nullif('killer','killer'),'CLR')
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
SQL-trace: INSERT INTO "main"."t1"(a,a,b,b,a) VALUES(1,0,'killer',nullif('killer','killer'),'CLR')
;
   9 Transaction      0    1    4 1             01 usesStmtJournal=0
  10 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 String8          0    3    0 killer        00 r[3]='killer'
REG[3] =   t6[killer](8)
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s9[0309196B696C6C6572...killer](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s9[0309196B696C6C6572...killer](8)
REG[1] =  i:9
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(abc,abc,abc,abc,abc) VALUES(1,0,'killers',nullif('killers','killers'),'CLRC')
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
SQL-trace: INSERT INTO "main"."c"(abc,abc,abc,abc,abc) VALUES(1,0,'killers',nullif('killers','killers'),'CLRC')
;
  21 Transaction      0    1    4 1             01 usesStmtJournal=0
  22 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  23 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  24 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  25 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  26 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  27 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  28 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 String8          0    1    0 CLRC          00 r[1]='CLRC'
REG[1] =   t4[CLRC](8)
   4 NotNull          1    6    0               00 if r[1]!=NULL goto 6
REG[1] =   t4[CLRC](8)
   6 MustBeInt        1    0    0               00 
REG[1] =   t4[CLRC](8)
SQL: [INSERT INTO "main"."c"(t2,t2,abc,abc,t2) VALUES(1,0,'killing',nullif('killing','killing'),'CLMC')
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
SQL-trace: INSERT INTO "main"."c"(t2,t2,abc,abc,t2) VALUES(1,0,'killing',nullif('killing','killing'),'CLMC')
;
  23 Transaction      0    1    4 1             01 usesStmtJournal=0
  24 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  25 String8          0    9    0 killing       00 r[9]='killing'
REG[9] =   t7[killing](8)
  26 String8          0   10    0 killing       00 r[10]='killing'
REG[10] =   t7[killing](8)
  27 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  28 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  29 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  30 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  31 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 CollSeq          0    0    0 (BINARY)      00 
   4 Function0        3    9    1 nullif(2)     02 r[1]=func(r[9..10])
REG[9] =   t7[killing](8)
REG[10] =   t7[killing](8)
REG[1] =  NULL
   5 NotNull          1    7    0               00 if r[1]!=NULL goto 7
REG[1] =  NULL
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   7 MustBeInt        1    0    0               00 
REG[1] =  i:3
   8 SoftNull         2    0    0               00 r[2]=NULL
   9 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:3
  12 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
  13 SCopy            4   11    0               00 r[11]=r[4]; x
REG[11] =  NULL
  14 SCopy            4   12    0               00 r[12]=r[4]; x
REG[12] =  NULL
  15 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:3
  16 MakeRecord      11    3    8               00 r[8]=mkrec(r[11..13]); for t1i1
REG[8] =  s5[0400000103.....](8)
  17 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000103.....](8)
  18 MakeRecord       2    6   14               00 r[14]=mkrec(r[2..7])
REG[14] =  s8[07000000000F0031.......1](8)
  19 Insert           0   14    1 c             13 intkey=r[1] data=r[14]
REG[14] =  s8[07000000000F0031.......1](8)
REG[1] =  i:3
  20 Close            0    0    0               00 
  21 Noop             1    0    0               00 
  22 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(r1,r1,r1,r1,r1) VALUES(1,0,'kilohertz',nullif('kilohertz','kilohertz'),'CLRDC')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(r1,r1,r1,r1,r1) VALUES(1,0,'kilohertz',nullif('kilohertz','kilohertz'),'CLRDC')
;
  17 Transaction      0    1    4 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  20 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  21 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  22 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:4
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[0400000104.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000104.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s7[07000900000000.......](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s7[07000900000000.......](8)
REG[1] =  i:4
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(t3,t3,t3,t3,t3) VALUES(1,0,'kilojoule',nullif('kilojoule','kilojoule'),'CLCL')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(t3,t3,t3,t3,t3) VALUES(1,0,'kilojoule',nullif('kilojoule','kilojoule'),'CLCL')
;
  17 Transaction      0    1    4 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  22 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:5
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[0400000105.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000105.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[070000000F000031.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[070000000F000031.......1](8)
REG[1] =  i:5
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(x,w,w,w,w) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
SQL-trace: INSERT INTO "main"."c"(x,w,w,w,w) VALUES(1,0,'kilovolt',nullif('kilovolt','kilovolt'),'CLBLD')
;
  18 Transaction      0    1    4 1             01 usesStmtJournal=0
  19 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  20 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  21 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  22 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   6 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   7 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   8 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  i:1
   9 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  i:1
  10 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:6
  11 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[0409090106.....](8)
  12 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0409090106.....](8)
  13 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[0700000900000F30.......0](8)
  14 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[0700000900000F30.......0](8)
REG[1] =  i:6
  15 Close            0    0    0               00 
  16 Noop             1    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,a) VALUES(1,0,'kimono',nullif('kimono','kimono'),'CAMAMA')
;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,a) VALUES(1,0,'kimono',nullif('kimono','kimono'),'CAMAMA')
;
   9 Transaction      0    1    4 1             01 usesStmtJournal=0
  10 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   3 String8          0    2    0 CAMAMA        00 r[2]='CAMAMA'
REG[2] =   t6[CAMAMA](8)
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s9[03190943414D414D41...CAMAMA](8)
   6 Insert           0    4    1 t1            1B intkey=r[1] data=r[4]
REG[4] =  s9[03190943414D414D41...CAMAMA](8)
REG[1] =  i:10
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [;
;SELECT b FROM t1 WHERE b>=2147483647;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
SQL-trace: ;
;SELECT b FROM t1 WHERE b>=2147483647;
  11 Transaction      0    0    4 1             01 usesStmtJournal=0
  12 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  13 Integer       2147483647    2    0               00 r[2]=2147483647
REG[2] =  i:2147483647
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  NULL
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =   s6[killer](8)
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =   s6[killer](8)
   6 Copy             1    3    0               00 r[3]=r[1]
REG[3] =   s6[killer](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s6[killer](8)
   8 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=t1.b
REG[1] =  i:1
   5 Lt               2    8    1 (BINARY)      51 if r[2]<r[1] goto 8
REG[2] =  i:2147483647
REG[1] =  i:1
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;SELECT * from c;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
SQL-trace: ;SELECT * from c;
  14 Transaction      0    0    4 1             01 usesStmtJournal=0
  15 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  16 Goto             0    1    0               00 
   1 OpenRead         0    4    0 6             00 root=4 iDb=0; c
   2 Explain          0    0    0 SCAN TABLE c  00 
   3 Rewind           0   12    0               00 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:1
   5 Column           0    1    2               00 r[2]=c.r1
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=c.x
REG[3] =  NULL
   7 Column           0    3    4               00 r[4]=c.t3
REG[4] =   s1[1](8)
   8 Column           0    4    5               00 r[5]=c.t2
REG[5] =  NULL
   9 Column           0    5    6               00 r[6]=c.w
REG[6] =  NULL
  10 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:1
REG[2] =  NULL
REG[3] =  NULL
REG[4] =   s1[1](8)
REG[5] =  NULL
REG[6] =  NULL
  11 Next             0    4    0               01 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:2
   5 Column           0    1    2               00 r[2]=c.r1
REG[2] =  i:1
   6 Column           0    2    3               00 r[3]=c.x
REG[3] =  NULL
   7 Column           0    3    4               00 r[4]=c.t3
REG[4] =   s1[0](8)
   8 Column           0    4    5               00 r[5]=c.t2
REG[5] =  NULL
   9 Column           0    5    6               00 r[6]=c.w
REG[6] =  NULL
  10 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:2
REG[2] =  i:1
REG[3] =  NULL
REG[4] =   s1[0](8)
REG[5] =  NULL
REG[6] =  NULL
  11 Next             0    4    0               01 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:3
   5 Column           0    1    2               00 r[2]=c.r1
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=c.x
REG[3] =  NULL
   7 Column           0    3    4               00 r[4]=c.t3
REG[4] =  NULL
   8 Column           0    4    5               00 r[5]=c.t2
REG[5] =   s1[1](8)
   9 Column           0    5    6               00 r[6]=c.w
REG[6] =  NULL
  10 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:3
REG[2] =  NULL
REG[3] =  NULL
REG[4] =  NULL
REG[5] =   s1[1](8)
REG[6] =  NULL
  11 Next             0    4    0               01 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:4
   5 Column           0    1    2               00 r[2]=c.r1
REG[2] =  i:1
   6 Column           0    2    3               00 r[3]=c.x
REG[3] =  NULL
   7 Column           0    3    4               00 r[4]=c.t3
REG[4] =  NULL
   8 Column           0    4    5               00 r[5]=c.t2
REG[5] =  NULL
   9 Column           0    5    6               00 r[6]=c.w
REG[6] =  NULL
  10 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:4
REG[2] =  i:1
REG[3] =  NULL
REG[4] =  NULL
REG[5] =  NULL
REG[6] =  NULL
  11 Next             0    4    0               01 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:5
   5 Column           0    1    2               00 r[2]=c.r1
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=c.x
REG[3] =  NULL
   7 Column           0    3    4               00 r[4]=c.t3
REG[4] =   s1[1](8)
   8 Column           0    4    5               00 r[5]=c.t2
REG[5] =  NULL
   9 Column           0    5    6               00 r[6]=c.w
REG[6] =  NULL
  10 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:5
REG[2] =  NULL
REG[3] =  NULL
REG[4] =   s1[1](8)
REG[5] =  NULL
REG[6] =  NULL
  11 Next             0    4    0               01 
   4 Rowid            0    1    0               00 r[1]=rowid
REG[1] =  i:6
   5 Column           0    1    2               00 r[2]=c.r1
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=c.x
REG[3] =  i:1
   7 Column           0    3    4               00 r[4]=c.t3
REG[4] =  NULL
   8 Column           0    4    5               00 r[5]=c.t2
REG[5] =  NULL
   9 Column           0    5    6               00 r[6]=c.w
REG[6] =   s1[0](8)
  10 ResultRow        1    6    0               00 output=r[1..6]
REG[1] =  i:6
REG[2] =  NULL
REG[3] =  i:1
REG[4] =  NULL
REG[5] =  NULL
REG[6] =   s1[0](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'kinship',nullif('kinship','kinship'),'CAMCAB')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'kinship',nullif('kinship','kinship'),'CAMCAB')
;
  17 Transaction      0    1    4 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  22 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:7
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[0400000107.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000107.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[0700000000000F31.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[0700000000000F31.......1](8)
REG[1] =  i:7
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [;
;SELECT a FROM t1 WHERE a>12345678901;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
SQL-trace: ;
;SELECT a FROM t1 WHERE a>12345678901;
  11 Transaction      0    0    4 1             01 usesStmtJournal=0
  12 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  13 Int64            0    2    0 12345678901   00 r[2]=12345678901
REG[2] =  i:12345678901
  14 Goto             0    1    0               00 
   1 OpenRead         0    3    0 1             00 root=3 iDb=0; t1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  NULL
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  NULL
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  NULL
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:0
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  i:0
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  NULL
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  NULL
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =  i:1
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =  i:1
   8 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=t1.a
REG[1] =   s6[CAMAMA](8)
   5 Le               2    8    1 (BINARY)      51 if r[2]<=r[1] goto 8
REG[2] =  i:12345678901
REG[1] =   s6[CAMAMA](8)
   6 Copy             1    3    0               00 r[3]=r[1]
REG[3] =   s6[CAMAMA](8)
   7 ResultRow        3    1    0               00 output=r[3]
REG[3] =   s6[CAMAMA](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(abc,abc,r1,abc,t2) VALUES(1,0,'kinship',nullif('kinship','kinship'),'CAMCAB')
;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
SQL-trace: INSERT INTO "main"."c"(abc,abc,r1,abc,t2) VALUES(1,0,'kinship',nullif('kinship','kinship'),'CAMCAB')
;
  24 Transaction      0    1    4 1             01 usesStmtJournal=0
  25 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  26 String8          0    9    0 kinship       00 r[9]='kinship'
REG[9] =   t7[kinship](8)
  27 String8          0   10    0 kinship       00 r[10]='kinship'
REG[10] =   t7[kinship](8)
  28 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  29 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  30 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  31 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 CollSeq          0    0    0 (BINARY)      00 
   4 Function0        3    9    1 nullif(2)     02 r[1]=func(r[9..10])
REG[9] =   t7[kinship](8)
REG[10] =   t7[kinship](8)
REG[1] =  NULL
   5 NotNull          1    7    0               00 if r[1]!=NULL goto 7
REG[1] =  NULL
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   7 MustBeInt        1    0    0               00 
REG[1] =  i:8
   8 SoftNull         2    0    0               00 r[2]=NULL
   9 String8          0    3    0 kinship       00 r[3]='kinship'
REG[3] =   t7[kinship](8)
  10 String8          0    6    0 CAMCAB        00 r[6]='CAMCAB'
REG[6] =   t6[CAMCAB](8)
  11 NotExists        0   13    1               00 intkey=r[1]
REG[1] =  i:8
  13 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
  14 SCopy            4   11    0               00 r[11]=r[4]; x
REG[11] =  NULL
  15 SCopy            4   12    0               00 r[12]=r[4]; x
REG[12] =  NULL
  16 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:8
  17 MakeRecord      11    3    8               00 r[8]=mkrec(r[11..13]); for t1i1
REG[8] =  s5[0400000108.....](8)
  18 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000108.....](8)
  19 MakeRecord       2    6   14               00 r[14]=mkrec(r[2..7])
REG[14] =  s20[07001B000019006B696E736869704341.......kinshipCA](8)
  20 Insert           0   14    1 c             13 intkey=r[1] data=r[14]
REG[14] =  s20[07001B000019006B696E736869704341.......kinshipCA](8)
REG[1] =  i:8
  21 Close            0    0    0               00 
  22 Noop             1    0    0               00 
  23 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(abc,abc,abc,abc,abc) VALUES(1,0,'kiosk',nullif('kiosk','kiosk'),'CAC')
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
SQL-trace: INSERT INTO "main"."c"(abc,abc,abc,abc,abc) VALUES(1,0,'kiosk',nullif('kiosk','kiosk'),'CAC')
;
  21 Transaction      0    1    4 1             01 usesStmtJournal=0
  22 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  23 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  24 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  25 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  26 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  27 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  28 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 String8          0    1    0 CAC           00 r[1]='CAC'
REG[1] =   t3[CAC](8)
   4 NotNull          1    6    0               00 if r[1]!=NULL goto 6
REG[1] =   t3[CAC](8)
   6 MustBeInt        1    0    0               00 
REG[1] =   t3[CAC](8)
SQL: [INSERT INTO "main"."c"(abc,r1,r1,abc,r1) VALUES(1,0,'kissing',nullif('kissing','kissing'),'CACAMC')
;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
SQL-trace: INSERT INTO "main"."c"(abc,r1,r1,abc,r1) VALUES(1,0,'kissing',nullif('kissing','kissing'),'CACAMC')
;
  23 Transaction      0    1    4 1             01 usesStmtJournal=0
  24 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  25 String8          0    9    0 kissing       00 r[9]='kissing'
REG[9] =   t7[kissing](8)
  26 String8          0   10    0 kissing       00 r[10]='kissing'
REG[10] =   t7[kissing](8)
  27 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  28 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  29 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  30 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  31 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 CollSeq          0    0    0 (BINARY)      00 
   4 Function0        3    9    1 nullif(2)     02 r[1]=func(r[9..10])
REG[9] =   t7[kissing](8)
REG[10] =   t7[kissing](8)
REG[1] =  NULL
   5 NotNull          1    7    0               00 if r[1]!=NULL goto 7
REG[1] =  NULL
   6 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   7 MustBeInt        1    0    0               00 
REG[1] =  i:9
   8 SoftNull         2    0    0               00 r[2]=NULL
   9 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  10 NotExists        0   12    1               00 intkey=r[1]
REG[1] =  i:9
  12 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
  13 SCopy            4   11    0               00 r[11]=r[4]; x
REG[11] =  NULL
  14 SCopy            4   12    0               00 r[12]=r[4]; x
REG[12] =  NULL
  15 IntCopy          1   13    0               00 r[13]=r[1]; rowid
REG[13] =  i:9
  16 MakeRecord      11    3    8               00 r[8]=mkrec(r[11..13]); for t1i1
REG[8] =  s5[0400000109.....](8)
  17 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[0400000109.....](8)
  18 MakeRecord       2    6   14               00 r[14]=mkrec(r[2..7])
REG[14] =  s7[07000800000000.......](8)
  19 Insert           0   14    1 c             13 intkey=r[1] data=r[14]
REG[14] =  s7[07000800000000.......](8)
REG[1] =  i:9
  20 Close            0    0    0               00 
  21 Noop             1    0    0               00 
  22 Halt             0    0    0               00 
SQL: [;CREATE INDEX t2i1 ON t1(a);]
VDBE Trace:
   0 Init             0   34    0               00 Start at 34
SQL-trace: ;CREATE INDEX t2i1 ON t1(a);
  34 Transaction      0    1    4 1             01 usesStmtJournal=0
  35 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  36 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  37 Goto             0    1    0               00 
   1 Noop             0   33    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:8
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:6
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 t2i1          00 r[4]='t2i1'
REG[4] =   t4[t2i1](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:8
   9 String8          0    7    0 CREATE INDEX t2i1 ON t1(a) 00 r[7]='CREATE INDEX t2i1 ON t1(a)'
REG[7] =   t26[CREATE INDEX t2](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s44[061715110141696E6465787432693174.....Aindext2i1t](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s44[061715110141696E6465787432693174.....Aindext2i1t](8)
REG[2] =  i:6
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    1 k(2,,)        00 
  14 OpenRead         1    3    0 2             00 root=3 iDb=0; t1
  15 Rewind           1   21    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:1
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s3[030909...](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s3[030909...](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  NULL
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:2
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03000102....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03000102....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  NULL
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:3
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03000103....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03000103....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:4
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03090104....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03090104....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:5
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03090105....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03090105....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  NULL
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:6
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03000106....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03000106....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:0
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:7
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03080107....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03080107....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  NULL
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:8
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03000108....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03000108....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =  i:1
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:9
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s4[03090109....](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s4[03090109....](8)
  20 Next             1   16    0               00 
  16 Column           1    0   10               00 r[10]=t1.a
REG[10] =   s6[CAMAMA](8)
  17 Rowid            1   11    0               00 r[11]=rowid
REG[11] =  i:10
  18 MakeRecord      10    2    9               00 r[9]=mkrec(r[10..11])
REG[9] =  s10[03190143414D414D410A...CAMAMA.](8)
  19 SorterInsert     3    9    0               00 
REG[9] =  s10[03190143414D414D410A...CAMAMA.](8)
  20 Next             1   16    0               00 
  21 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  22 SorterSort       3   27    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03000102....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03000103....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03000106....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03000108....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03080107....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s3[030909...](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03090104....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03090105....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s4[03090109....](8)
  26 SorterNext       3   23    0               00 
  23 SorterData       3    9    2               00 r[9]=data
  24 Last             2    0   -1               00 
  25 IdxInsert        2    9    0               10 key=r[9]
REG[9] =  s10[03190143414D414D410A...CAMAMA.](8)
  26 SorterNext       3   23    0               00 
  27 Close            1    0    0               00 
  28 Close            2    0    0               00 
  29 Close            3    0    0               00 
  30 SetCookie        0    1    5               00 
  31 ParseSchema      0    0    0 name='t2i1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t2i1          00 r[2]='t2i1'
REG[2] =   t4[t2i1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[tr2](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s3[tr2](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s22[sqlite_autoinde](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s22[sqlite_autoinde](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t1i1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t2i1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t4[t2i1](8)
REG[1] =   s4[t2i1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s4[t2i1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:8
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s26[CREATE INDEX t2](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s4[t2i1](8)
REG[6] =  i:8
REG[7] =   s26[CREATE INDEX t2](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  32 Expire           0    0    0               00 
  33 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(t2,abc,abc,t2,t2) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;]
VDBE Trace:
   0 Init             0   22    0               00 Start at 22
SQL-trace: INSERT INTO "main"."c"(t2,abc,abc,t2,t2) VALUES(1,0,'kittenish',nullif('kittenish','kittenish'),'CADAMAC')
;
  22 Transaction      0    1    5 1             01 usesStmtJournal=0
  23 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  24 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  25 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  26 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  27 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  28 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 String8          0    1    0 kittenish     00 r[1]='kittenish'
REG[1] =   t9[kittenish](8)
   4 NotNull          1    6    0               00 if r[1]!=NULL goto 6
REG[1] =   t9[kittenish](8)
   6 MustBeInt        1    0    0               00 
REG[1] =   t9[kittenish](8)
SQL: [SELECT count(*), max(t2) FROM c 
           WHERE 0 GROUP BY t2 HAVING count(*)=2
;]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
SQL-trace: SELECT count(*), max(t2) FROM c 
           WHERE 0 GROUP BY t2 HAVING count(*)=2
;
  46 Transaction      0    0    5 1             01 usesStmtJournal=0
  47 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  48 Integer          2   13    0               00 r[13]=2
REG[13] =  i:2
  49 Goto             0    1    0               00 
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   3 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   43    0               00 
REG[7] =  i:5
  43 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  44 Return           7    0    0               00 
REG[7] =  i:5
   6 Goto             0   14    0               00 
  14 Close            0    0    0               00 
  15 OpenPseudo       2   11    1               00 1 columns in r[11]
  16 SorterSort       1   45    0               00 GROUP BY sort
  45 Halt             0    0    0               00 
SQL: [SELECT DISTINCT count(*), max(b) FROM t1 WHERE b>'b'
           GROUP BY b HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   51    0               00 Start at 51
SQL-trace: SELECT DISTINCT count(*), max(b) FROM t1 WHERE b>'b'
           GROUP BY b HAVING count(*)=1
;
  51 Transaction      0    0    5 1             01 usesStmtJournal=0
  52 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  53 String8          0   11    0 b             00 r[11]='b'
REG[11] =   t1[b](8)
  54 Integer          1   14    0               00 r[14]=1
REG[14] =  i:1
  55 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   48    0               00 
REG[7] =  i:6
  48 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  49 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   8 Explain          0    0    0 SCAN TABLE t1 00 
   9 Rewind           0   16    0               00 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  NULL
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  NULL
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:1
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  i:1
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:1
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  i:1
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  NULL
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  NULL
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  NULL
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  NULL
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:1
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  i:1
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:1
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  i:1
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:1
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  i:1
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =   s6[killer](8)
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =   s6[killer](8)
  12 Column           0    1   12               00 r[12]=t1.b
REG[12] =   s6[killer](8)
  13 MakeRecord      12    1   10               00 r[10]=mkrec(r[12])
REG[10] =  s8[02196B696C6C6572..killer](8)
  14 SorterInsert     2   10    0               00 
REG[10] =  s8[02196B696C6C6572..killer](8)
  15 Next             0   10    0               01 
  10 Column           0    1   10               00 r[10]=t1.b
REG[10] =  i:1
  11 Le              11   15   10 (BINARY)      51 if r[11]<=r[10] goto 15
REG[11] =   t1[b](8)
REG[10] =  i:1
  15 Next             0   10    0               01 
  16 Close            0    0    0               00 
  17 OpenPseudo       3   10    1               00 1 columns in r[10]
  18 SorterSort       2   50    0               00 GROUP BY sort
  19 SorterData       2   10    3               00 r[10]=data
  20 Column           3    0    9               00 r[9]=
REG[9] =   s6[killer](8)
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =   s6[killer](8)
  22 Jump            23   27   23               00 
  23 Move             9    8    1               00 r[8]=r[9]
REG[8] =   s6[killer](8)
  24 Gosub            6   37    0               00 output one row
REG[6] =  i:24
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:0
  38 Return           6    0    0               00 
REG[6] =  i:24
  25 IfPos            5   50    0               00 if r[5]>0 then r[5]-=0, goto 50; check abort flag
REG[5] =  i:0
  26 Gosub            7   48    0               00 reset accumulator
REG[7] =  i:26
  48 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  49 Return           7    0    0               00 
REG[7] =  i:26
  27 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  28 Column           3    0   12               00 r[12]=
REG[12] =   s6[killer](8)
  29 CollSeq          0    0    0 (BINARY)      00 
  30 AggStep0         0   12    2 max(1)        01 accum=r[2] step(r[12])
REG[12] =   s6[killer](8)
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       2   19    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  40 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  41 Ne              14   38    1               51 if r[14]!=r[1] goto 38
REG[14] =  i:1
REG[1] =  i:1
  42 Copy             1   15    1               00 r[15..16]=r[1..2]
REG[15] =  i:1
REG[16] =   s6[killer](8)
  43 Found            1   38   15 2             00 key=r[15..16]
REG[15] =  i:1
REG[16] =   s6[killer](8)
  44 MakeRecord      15    2   13               00 r[13]=mkrec(r[15..16])
REG[13] =  s9[0309196B696C6C6572...killer](8)
  45 IdxInsert        1   13    0               00 key=r[13]
REG[13] =  s9[0309196B696C6C6572...killer](8)
  46 ResultRow       15    2    0               00 output=r[15..16]
REG[15] =  i:1
REG[16] =   s6[killer](8)
  47 Return           6    0    0               00 end groupby result generator
REG[6] =  i:33
  34 Goto             0   50    0               00 
  50 Halt             0    0    0               00 
SQL: [SELECT DISTINCT count(*), max(t2) FROM c WHERE 0
           GROUP BY t2 HAVING count(*)=2
;]
VDBE Trace:
   0 Init             0   50    0               00 Start at 50
SQL-trace: SELECT DISTINCT count(*), max(t2) FROM c WHERE 0
           GROUP BY t2 HAVING count(*)=2
;
  50 Transaction      0    0    5 1             01 usesStmtJournal=0
  51 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  52 Integer          2   13    0               00 r[13]=2
REG[13] =  i:2
  53 Goto             0    1    0               00 
   1 OpenEphemeral    1    0    0 k(2,B,B)      08 nColumn=0
   2 SorterOpen       2    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   47    0               00 
REG[7] =  i:6
  47 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  48 Return           7    0    0               00 
REG[7] =  i:6
   7 Goto             0   15    0               00 
  15 Close            0    0    0               00 
  16 OpenPseudo       3   11    1               00 1 columns in r[11]
  17 SorterSort       2   49    0               00 GROUP BY sort
  49 Halt             0    0    0               00 
SQL: [SELECT ALL count(*), max(r1) FROM c WHERE r1!='t3'
           GROUP BY t3 HAVING count(*)=1
;]
VDBE Trace:
   0 Init             0   48    0               00 Start at 48
SQL-trace: SELECT ALL count(*), max(r1) FROM c WHERE r1!='t3'
           GROUP BY t3 HAVING count(*)=1
;
  48 Transaction      0    0    5 1             01 usesStmtJournal=0
  49 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  50 String8          0   11    0 t3            00 r[11]='t3'
REG[11] =   t2[t3](8)
  51 Integer          1   15    0               00 r[15]=1
REG[15] =  i:1
  52 Goto             0    1    0               00 
   1 SorterOpen       1    2    0 k(1,B)        00 
   2 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   3 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   4 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   5 Gosub            7   45    0               00 
REG[7] =  i:5
  45 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  46 Return           7    0    0               00 
REG[7] =  i:5
   6 OpenRead         0    4    0 4             00 root=4 iDb=0; c
   7 Explain          0    0    0 SCAN TABLE c  00 
   8 Rewind           0   16    0               00 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  NULL
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  NULL
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  i:1
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  i:1
  11 Column           0    3   12               00 r[12]=c.t3
REG[12] =   s1[0](8)
  12 Column           0    1   13               00 r[13]=c.r1
REG[13] =  i:1
  13 MakeRecord      12    2   10               00 r[10]=mkrec(r[12..13])
REG[10] =  s4[030F0930...0](8)
  14 SorterInsert     1   10    0               00 
REG[10] =  s4[030F0930...0](8)
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  NULL
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  NULL
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  i:1
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  i:1
  11 Column           0    3   12               00 r[12]=c.t3
REG[12] =  NULL
  12 Column           0    1   13               00 r[13]=c.r1
REG[13] =  i:1
  13 MakeRecord      12    2   10               00 r[10]=mkrec(r[12..13])
REG[10] =  s3[030009...](8)
  14 SorterInsert     1   10    0               00 
REG[10] =  s3[030009...](8)
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  NULL
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  NULL
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  NULL
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  NULL
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  NULL
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  NULL
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =   s7[kinship](8)
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =   s7[kinship](8)
  11 Column           0    3   12               00 r[12]=c.t3
REG[12] =  NULL
  12 Column           0    1   13               00 r[13]=c.r1
REG[13] =   s7[kinship](8)
  13 MakeRecord      12    2   10               00 r[10]=mkrec(r[12..13])
REG[10] =  s10[03001B6B696E73686970...kinship](8)
  14 SorterInsert     1   10    0               00 
REG[10] =  s10[03001B6B696E73686970...kinship](8)
  15 Next             0    9    0               01 
   9 Column           0    1   10               00 r[10]=c.r1
REG[10] =  i:0
  10 Eq              11   15   10 (BINARY)      54 if r[11]==r[10] goto 15
REG[11] =   t2[t3](8)
REG[10] =  i:0
  11 Column           0    3   12               00 r[12]=c.t3
REG[12] =  NULL
  12 Column           0    1   13               00 r[13]=c.r1
REG[13] =  i:0
  13 MakeRecord      12    2   10               00 r[10]=mkrec(r[12..13])
REG[10] =  s3[030008...](8)
  14 SorterInsert     1   10    0               00 
REG[10] =  s3[030008...](8)
  15 Next             0    9    0               01 
  16 Close            0    0    0               00 
  17 OpenPseudo       2   10    2               00 2 columns in r[10]
  18 SorterSort       1   47    0               00 GROUP BY sort
  19 SorterData       1   10    2               00 r[10]=data
  20 Column           2    0    9               00 r[9]=
REG[9] =  NULL
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  NULL
  22 Jump            23   27   23               00 
  27 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
  28 Column           2    1   12               00 r[12]=
REG[12] =  i:1
  29 CollSeq          0    0    0 (BINARY)      00 
  30 AggStep0         0   12    2 max(1)        01 accum=r[2] step(r[12])
REG[12] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       1   19    0               00 
  19 SorterData       1   10    2               00 r[10]=data
  20 Column           2    0    9               00 r[9]=
REG[9] =  NULL
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  NULL
  22 Jump            23   27   23               00 
  27 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
  28 Column           2    1   12               00 r[12]=
REG[12] =   s7[kinship](8)
  29 CollSeq          0    0    0 (BINARY)      00 
  30 AggStep          0   12    2 max(1)        01 accum=r[2] step(r[12])
REG[12] =   s7[kinship](8)
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       1   19    0               00 
  19 SorterData       1   10    2               00 r[10]=data
  20 Column           2    0    9               00 r[9]=
REG[9] =  NULL
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  NULL
  22 Jump            23   27   23               00 
  27 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
  28 Column           2    1   12               00 r[12]=
REG[12] =  i:0
  29 CollSeq          0    0    0 (BINARY)      00 
  30 AggStep          0   12    2 max(1)        01 accum=r[2] step(r[12])
REG[12] =  i:0
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       1   19    0               00 
  19 SorterData       1   10    2               00 r[10]=data
  20 Column           2    0    9               00 r[9]=
REG[9] =   s1[0](8)
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =   s1[0](8)
  22 Jump            23   27   23               00 
  23 Move             9    8    1               00 r[8]=r[9]
REG[8] =   s1[0](8)
  24 Gosub            6   37    0               00 output one row
REG[6] =  i:24
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  40 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  41 Ne              15   38    1               51 if r[15]!=r[1] goto 38
REG[15] =  i:1
REG[1] =  i:3
  38 Return           6    0    0               00 
REG[6] =  i:24
  25 IfPos            5   47    0               00 if r[5]>0 then r[5]-=0, goto 47; check abort flag
REG[5] =  i:0
  26 Gosub            7   45    0               00 reset accumulator
REG[7] =  i:26
  45 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
  46 Return           7    0    0               00 
REG[7] =  i:26
  27 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
  28 Column           2    1   12               00 r[12]=
REG[12] =  i:1
  29 CollSeq          0    0    0 (BINARY)      00 
  30 AggStep          0   12    2 max(1)        01 accum=r[2] step(r[12])
REG[12] =  i:1
  31 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  32 SorterNext       1   19    0               00 
  33 Gosub            6   37    0               00 output final row
REG[6] =  i:33
  37 IfPos            4   39    0               00 if r[4]>0 then r[4]-=0, goto 39; Groupby result generator entry point
REG[4] =  i:1
  39 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  40 AggFinal         2    1    0 max(1)        00 accum=r[2] N=1
  41 Ne              15   38    1               51 if r[15]!=r[1] goto 38
REG[15] =  i:1
REG[1] =  i:1
  42 Copy             1   16    1               00 r[16..17]=r[1..2]
REG[16] =  i:1
REG[17] =  i:1
  43 ResultRow       16    2    0               00 output=r[16..17]
REG[16] =  i:1
REG[17] =  i:1
  44 Return           6    0    0               00 end groupby result generator
REG[6] =  i:33
  34 Goto             0   47    0               00 
  47 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'kittens',nullif('kittens','kittens'),'CADAMC')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'kittens',nullif('kittens','kittens'),'CADAMC')
;
  17 Transaction      0    1    5 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  22 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:10
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:10
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[040000010A.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[040000010A.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[0700000000000F31.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[0700000000000F31.......1](8)
REG[1] =  i:10
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(t3,x,x,x,x) VALUES(1,0,'kitty',nullif('kitty','kitty'),'CADA')
;]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
SQL-trace: INSERT INTO "main"."c"(t3,x,x,x,x) VALUES(1,0,'kitty',nullif('kitty','kitty'),'CADA')
;
  18 Transaction      0    1    5 1             01 usesStmtJournal=0
  19 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  20 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  21 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  22 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   6 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   7 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   8 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  i:0
   9 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  i:0
  10 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:11
  11 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[040808010B.....](8)
  12 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[040808010B.....](8)
  13 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[070000080F000031.......1](8)
  14 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[070000080F000031.......1](8)
REG[1] =  i:11
  15 Close            0    0    0               00 
  16 Noop             1    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'knack',nullif('knack','knack'),'MAC')
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'knack',nullif('knack','knack'),'MAC')
;
  14 Transaction      0    1    5 1             01 usesStmtJournal=0
  15 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  16 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:11
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  NULL
   6 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:11
   7 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for t2i1
REG[4] =  s4[0300010B....](8)
   8 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[0300010B....](8)
   9 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s3[030009...](8)
  10 Insert           0    7    1 t1            1B intkey=r[1] data=r[7]
REG[7] =  s3[030009...](8)
REG[1] =  i:11
  11 Close            0    0    0               00 
  12 Noop             1    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(x,x,t3,t3,w) VALUES(1,0,'knaves',nullif('knaves','knaves'),'MABAC')
;]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
SQL-trace: INSERT INTO "main"."c"(x,x,t3,t3,w) VALUES(1,0,'knaves',nullif('knaves','knaves'),'MABAC')
;
  19 Transaction      0    1    5 1             01 usesStmtJournal=0
  20 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  21 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  22 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   6 String8          0    5    0 knaves        00 r[5]='knaves'
REG[5] =   t6[knaves](8)
   7 String8          0    7    0 MABAC         00 r[7]='MABAC'
REG[7] =   t5[MABAC](8)
   8 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   9 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  i:1
  10 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  i:1
  11 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:12
  12 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[040909010C.....](8)
  13 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[040909010C.....](8)
  14 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s18[070000091900176B6E617665734D4142.......knavesMAB](8)
  15 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s18[070000091900176B6E617665734D4142.......knavesMAB](8)
REG[1] =  i:12
  16 Close            0    0    0               00 
  17 Noop             1    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT count(*) WHERE 0
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
SQL-trace: SELECT count(*) WHERE 0
;
   1 Null             0    1    1               00 r[1..1]=NULL
REG[1] =  NULL
   2 Goto             0    4    0               00 
   4 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
   5 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
   6 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
   7 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'knees',nullif('knees','knees'),'MAC')
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,b) VALUES(1,0,'knees',nullif('knees','knees'),'MAC')
;
  14 Transaction      0    1    5 1             01 usesStmtJournal=0
  15 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  16 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:12
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  NULL
   6 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:12
   7 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for t2i1
REG[4] =  s4[0300010C....](8)
   8 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[0300010C....](8)
   9 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s3[030009...](8)
  10 Insert           0    7    1 t1            1B intkey=r[1] data=r[7]
REG[7] =  s3[030009...](8)
REG[1] =  i:12
  11 Close            0    0    0               00 
  12 Noop             1    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT count(*), count(b), count(b) FROM t1
;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
SQL-trace: SELECT count(*), count(b), count(b) FROM t1
;
  16 Transaction      0    0    5 1             01 usesStmtJournal=0
  17 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  18 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  NULL
   7 AggStep0         0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  NULL
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  NULL
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  NULL
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  NULL
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  NULL
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =   s6[killer](8)
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =   s6[killer](8)
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   5 AggStep          0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  i:1
   7 AggStep          0    4    2 count(1)      01 accum=r[2] step(r[4])
REG[4] =  i:1
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 count(1)      00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:12
REG[6] =  i:9
  13 Copy             2    7    0               00 r[7]=r[2]
REG[7] =  i:9
  14 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =  i:12
REG[6] =  i:9
REG[7] =  i:9
  15 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'knife',nullif('knife','knife'),'MABA')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'knife',nullif('knife','knife'),'MABA')
;
  17 Transaction      0    1    5 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  22 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:13
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[040000010D.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[040000010D.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[0700000000000F31.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[0700000000000F31.......1](8)
REG[1] =  i:13
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'knifes',nullif('knifes','knifes'),'MABAC')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(w,w,w,w,w) VALUES(1,0,'knifes',nullif('knifes','knifes'),'MABAC')
;
  17 Transaction      0    1    5 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  22 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:14
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[040000010E.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[040000010E.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[0700000000000F31.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[0700000000000F31.......1](8)
REG[1] =  i:14
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'knighthood',nullif('knighthood','knighthood'),'MACDAD')
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
SQL-trace: INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'knighthood',nullif('knighthood','knighthood'),'MACDAD')
;
  14 Transaction      0    1    5 1             01 usesStmtJournal=0
  15 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  16 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:13
   4 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   5 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  i:1
   6 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:13
   7 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for t2i1
REG[4] =  s4[0309010D....](8)
   8 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[0309010D....](8)
   9 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s3[030900...](8)
  10 Insert           0    7    1 t1            1B intkey=r[1] data=r[7]
REG[7] =  s3[030900...](8)
REG[1] =  i:13
  11 Close            0    0    0               00 
  12 Noop             1    0    0               00 
  13 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,b,b,a) VALUES(1,0,'knobs',nullif('knobs','knobs'),'MABC')
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
SQL-trace: INSERT INTO "main"."t1"(b,b,b,b,a) VALUES(1,0,'knobs',nullif('knobs','knobs'),'MABC')
;
  15 Transaction      0    1    5 1             01 usesStmtJournal=0
  16 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:14
   4 String8          0    2    0 MABC          00 r[2]='MABC'
REG[2] =   t4[MABC](8)
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =   t4[MABC](8)
   7 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:14
   8 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for t2i1
REG[4] =  s8[0315014D4142430E...MABC.](8)
   9 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s8[0315014D4142430E...MABC.](8)
  10 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s7[0315094D414243...MABC](8)
  11 Insert           0    7    1 t1            1B intkey=r[1] data=r[7]
REG[7] =  s7[0315094D414243...MABC](8)
REG[1] =  i:14
  12 Close            0    0    0               00 
  13 Noop             1    0    0               00 
  14 Halt             0    0    0               00 
SQL: [SELECT sum(a), sum(b) FROM t1
;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
SQL-trace: SELECT sum(a), sum(b) FROM t1
;
  16 Transaction      0    0    5 1             01 usesStmtJournal=0
  17 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  18 Goto             0    1    0               00 
   1 Null             0    1    4               00 r[1..4]=NULL
REG[1] =  NULL
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0   10    0               00 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  i:1
   6 AggStep0         0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  i:1
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  NULL
   8 AggStep0         0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  NULL
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  NULL
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  NULL
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  NULL
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  i:1
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  i:1
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  NULL
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  i:1
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  i:1
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  NULL
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  NULL
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  NULL
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  i:0
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  i:0
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  NULL
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  NULL
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  i:1
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  i:1
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =   s6[killer](8)
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =   s6[killer](8)
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =   s6[CAMAMA](8)
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =   s6[CAMAMA](8)
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  NULL
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  NULL
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  NULL
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  NULL
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =  i:1
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =  i:1
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  NULL
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    0    5               00 r[5]=t1.a
REG[5] =   s4[MABC](8)
   6 AggStep          0    5    1 sum(1)        01 accum=r[1] step(r[5])
REG[5] =   s4[MABC](8)
   7 Column           0    1    5               00 r[5]=t1.b
REG[5] =  i:1
   8 AggStep          0    5    2 sum(1)        01 accum=r[2] step(r[5])
REG[5] =  i:1
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 AggFinal         1    1    0 sum(1)        00 accum=r[1] N=1
  12 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  13 Copy             1    6    1               00 r[6..7]=r[1..2]
REG[6] =  r:5
REG[7] =  r:9
  14 ResultRow        6    2    0               00 output=r[6..7]
REG[6] =  r:5
REG[7] =  r:9
  15 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,a,b,a,b) VALUES(1,0,'knockdown',nullif('knockdown','knockdown'),'MACDABM')
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
SQL-trace: INSERT INTO "main"."t1"(b,a,b,a,b) VALUES(1,0,'knockdown',nullif('knockdown','knockdown'),'MACDABM')
;
  15 Transaction      0    1    5 1             01 usesStmtJournal=0
  16 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   4 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =  i:0
   7 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:15
   8 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for t2i1
REG[4] =  s4[0308010F....](8)
   9 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s4[0308010F....](8)
  10 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s3[030809...](8)
  11 Insert           0    7    1 t1            1B intkey=r[1] data=r[7]
REG[7] =  s3[030809...](8)
REG[1] =  i:15
  12 Close            0    0    0               00 
  13 Noop             1    0    0               00 
  14 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."c"(t3,t3,t3,t3,t3) VALUES(1,0,'knockers',nullif('knockers','knockers'),'MACRC')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: INSERT INTO "main"."c"(t3,t3,t3,t3,t3) VALUES(1,0,'knockers',nullif('knockers','knockers'),'MACRC')
;
  17 Transaction      0    1    5 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    4    0               00 r[4]=NULL
REG[4] =  NULL
  21 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  22 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:15
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  NULL
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  NULL
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:15
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s5[040000010F.....](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s5[040000010F.....](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[070000000F000031.......1](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[070000000F000031.......1](8)
REG[1] =  i:15
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 
SQL: [INSERT INTO "main"."t1"(b,b,a,b,b) VALUES(1,0,'knots',nullif('knots','knots'),'MADC')
;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
SQL-trace: INSERT INTO "main"."t1"(b,b,a,b,b) VALUES(1,0,'knots',nullif('knots','knots'),'MADC')
;
  15 Transaction      0    1    5 1             01 usesStmtJournal=0
  16 TableLock        0    3    1 t1            00 iDb=0 root=3 write=1
  17 Goto             0    1    0               00 
   1 OpenWrite        0    3    0 2             00 root=3 iDb=0; t1
   2 OpenWrite        1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   4 String8          0    2    0 knots         00 r[2]='knots'
REG[2] =   t5[knots](8)
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 SCopy            2    5    0               00 r[5]=r[2]; a
REG[5] =   t5[knots](8)
   7 IntCopy          1    6    0               00 r[6]=r[1]; rowid
REG[6] =  i:16
   8 MakeRecord       5    2    4               00 r[4]=mkrec(r[5..6]); for t2i1
REG[4] =  s9[0317016B6E6F747310...knots.](8)
   9 IdxInsert        1    4    0               10 key=r[4]
REG[4] =  s9[0317016B6E6F747310...knots.](8)
  10 MakeRecord       2    2    7               00 r[7]=mkrec(r[2..3])
REG[7] =  s8[0317096B6E6F7473...knots](8)
  11 Insert           0    7    1 t1            1B intkey=r[1] data=r[7]
REG[7] =  s8[0317096B6E6F7473...knots](8)
REG[1] =  i:16
  12 Close            0    0    0               00 
  13 Noop             1    0    0               00 
  14 Halt             0    0    0               00 
SQL: [SELECT * FROM c CROSS JOIN tr2 ON ('r1') 
;]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
SQL-trace: SELECT * FROM c CROSS JOIN tr2 ON ('r1') 
;
  21 Transaction      0    0    5 1             01 usesStmtJournal=0
  22 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  23 TableLock        0    5    0 tr2           00 iDb=0 root=5 write=0
  24 String8          0    1    0 r1            00 r[1]='r1'
REG[1] =   t2[r1](8)
  25 Goto             0    1    0               00 
   1 IfNot            1   18    1               00 
REG[1] =   t2[r1](8)
  18 Close            0    0    0               00 
  19 Close            1    0    0               00 
  20 Halt             0    0    0               00 
SQL: [SELECT b, a, a, coalesce(b,a)  FROM "main"."t1" WHERE b=0 AND a>=?1 AND a<?2
;]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
SQL-trace: SELECT b, a, a, coalesce(b,a)  FROM "main"."t1" WHERE b=0 AND a>=?1 AND a<?2
;
  24 Transaction      0    0    5 1             01 usesStmtJournal=0
  25 TableLock        0    3    0 t1            00 iDb=0 root=3 write=0
  26 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  27 Goto             0    1    0               00 
   1 OpenRead         0    3    0 2             00 root=3 iDb=0; t1
   2 OpenRead         1    8    0 k(2,,)        00 root=8 iDb=0; t2i1
   3 Explain          0    0    0 SEARCH TABLE t1 USING INDEX t2i1 (a>? AND a<?) 00 
   4 Variable         1    1    0 ?1            00 r[1]=parameter(1,?1)
REG[1] =  NULL
   5 IsNull           1   21    0               00 if r[1]==NULL goto 21
REG[1] =  NULL
  21 Close            0    0    0               00 
  22 Close            1    0    0               00 
  23 Halt             0    0    0               00 
SQL: [;SELECT w, w, NULL, w, w FROM "main"."c" WHERE rowid=?
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
SQL-trace: ;SELECT w, w, NULL, w, w FROM "main"."c" WHERE rowid=?
;
  14 Transaction      0    0    5 1             01 usesStmtJournal=0
  15 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  16 Goto             0    1    0               00 
   1 OpenRead         0    4    0 6             00 root=4 iDb=0; c
   2 Explain          0    0    0 SEARCH TABLE c USING INTEGER PRIMARY KEY (rowid=?) 00 
   3 Variable         1    1    0               00 r[1]=parameter(1,)
REG[1] =  NULL
   4 MustBeInt        1   12    0               00 
REG[1] =  NULL
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;INSERT OR ABORT INTO "main"."c"(x,x,x,x,x,x) VALUES(2,1,0,'Pluto',nullif('pluto','Pluto'),'BLDA')
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
SQL-trace: ;INSERT OR ABORT INTO "main"."c"(x,x,x,x,x,x) VALUES(2,1,0,'Pluto',nullif('pluto','Pluto'),'BLDA')
;
  17 Transaction      0    1    5 1             01 usesStmtJournal=0
  18 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  19 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  20 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  21 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  22 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  23 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 6             00 root=4 iDb=0; c
   2 OpenWrite        1    7    0 k(3,,,)       00 root=7 iDb=0; t1i1
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:16
   4 SoftNull         2    0    0               00 r[2]=NULL
   5 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
   6 Affinity         2    6    0 DDDBBB        00 affinity(r[2..7])
   7 SCopy            4    9    0               00 r[9]=r[4]; x
REG[9] =  i:2
   8 SCopy            4   10    0               00 r[10]=r[4]; x
REG[10] =  i:2
   9 IntCopy          1   11    0               00 r[11]=r[1]; rowid
REG[11] =  i:16
  10 MakeRecord       9    3    8               00 r[8]=mkrec(r[9..11]); for t1i1
REG[8] =  s7[04010101020210.......](8)
  11 IdxInsert        1    8    0               10 key=r[8]
REG[8] =  s7[04010101020210.......](8)
  12 MakeRecord       2    6   12               00 r[12]=mkrec(r[2..7])
REG[12] =  s8[0700000100000002........](8)
  13 Insert           0   12    1 c             1B intkey=r[1] data=r[12]
REG[12] =  s8[0700000100000002........](8)
REG[1] =  i:16
  14 Close            0    0    0               00 
  15 Noop             1    0    0               00 
  16 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f4eadabb859 in __GI_abort () at abort.c:79
#2  0x00007f4eadabb729 in __assert_fail_base (fmt=0x7f4eadc51588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007f4eadaccfd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x2700420, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x2780b40, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x2780b40, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x26efa50, 
    zSql=0x277b570 "SELECT * FROM (SELECT abc COLLATE nocase, abc FROM c) INNER JOIN c USING (abc) \n;;INSERT OR REPLACE INTO \"main\".\"c\"(r1,r1,r1,r1,r1,r1) VALUES(2,1,0,'Apollo',nullif('apollo','Apollo'),'ABL')\n;SELECT b,"..., pzErrMsg=0x7ffeed1838a8) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x26ee890, 
    zSql=0x26f12a6 "SELECT * FROM (SELECT abc COLLATE nocase, abc FROM c) INNER JOIN c USING (abc) \n;;INSERT OR REPLACE INTO \"main\".\"c\"(r1,r1,r1,r1,r1,r1) VALUES(2,1,0,'Apollo',nullif('apollo','Apollo'),'ABL')\n;SELECT b,"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffeed1839d8, pzTail=0x7ffeed1839c0) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x26ee890, 
    zSql=0x26f12a6 "SELECT * FROM (SELECT abc COLLATE nocase, abc FROM c) INNER JOIN c USING (abc) \n;;INSERT OR REPLACE INTO \"main\".\"c\"(r1,r1,r1,r1,r1,r1) VALUES(2,1,0,'Apollo',nullif('apollo','Apollo'),'ABL')\n;SELECT b,"..., nBytes=1134, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffeed1839c0) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7ffeed182e90 "", nBytes=0, ppStmt=0x7ffeed1839d8, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7ffeed183b88) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 31751] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
