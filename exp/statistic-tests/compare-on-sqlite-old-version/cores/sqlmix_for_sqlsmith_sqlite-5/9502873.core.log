GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000579,sig:06,src:025306+021746,time:18551833,execs:3212329,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    6 3             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s33[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s21[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s21[sqlite_autoinde](8)
REG[2] =  i:3
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s143[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:4
REG[3] =   s143[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s20[sqlite_autoinde](8)
REG[2] =  i:5
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s20[sqlite_autoinde](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:6
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =  NULL
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s20[sqlite_autoinde](8)
REG[2] =  i:6
REG[3] =  NULL
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[r1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:7
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s31[CREATE INDEX r1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[r1](8)
REG[2] =  i:7
REG[3] =   s31[CREATE INDEX r1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:8
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s27[CREATE INDEX x ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:8
REG[3] =   s27[CREATE INDEX x ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      1    0    0 3             01 usesStmtJournal=0
  15 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  16 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [;
;PRAGMA integrity_check
;]
VDBE Trace:
   0 Init             0  187    0               00 Start at 187
 187 Transaction      0    0    6 3             01 usesStmtJournal=0
 188 Transaction      1    0    0 3             01 usesStmtJournal=0
 189 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
 190 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
 191 String8          0   14    0 x             00 r[14]='x'
REG[14] =   t1[x](8)
 192 Goto             0    1    0               00 
   1 Integer        100    1    0               00 r[1]=100
REG[1] =  i:100
   2 IfPos            1    4    0               00 if r[1]>0 then r[1]-=0, goto 4
REG[1] =  i:100
   4 IntegrityCk      2    8    1 [5,4,2,8,7]   00 
   5 IsNull           2   10    0               00 if r[2]==NULL goto 10
REG[2] =  NULL
  10 IfPos            1   12    0               00 if r[1]>0 then r[1]-=0, goto 12
REG[1] =  i:100
  12 OpenRead         2    6    0 k(2,,)        00 root=6 iDb=0; sqlite_autoindex_c_3
  13 OpenRead         3    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex_c_2
  14 OpenRead         4    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_c_1
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  17 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  18 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  19 Rewind           4   70    0               00 
  70 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
  71 IfPos            1   73    0               00 if r[1]>0 then r[1]-=0, goto 73
REG[1] =  i:100
  73 Count            2    3    0               00 r[3]=count()
REG[3] =  i:0
  74 Eq               8   79    3               90 if r[8]==r[3] goto 79
REG[8] =  i:0
REG[3] =  i:0
  79 IfPos            1   81    0               00 if r[1]>0 then r[1]-=0, goto 81
REG[1] =  i:100
  81 Count            3    3    0               00 r[3]=count()
REG[3] =  i:0
  82 Eq               9   87    3               90 if r[9]==r[3] goto 87
REG[9] =  i:0
REG[3] =  i:0
  87 IfPos            1   89    0               00 if r[1]>0 then r[1]-=0, goto 89
REG[1] =  i:100
  89 OpenRead         1    2    0 2             00 root=2 iDb=0; t1
  90 OpenRead         2    8    0 k(2,,)        00 root=8 iDb=0; x
  91 OpenRead         3    7    0 k(2,,)        00 root=7 iDb=0; r1
  92 OpenRead         4    3    0 k(2,,)        00 root=3 iDb=0; sqlite_autoindex_t1_1
  93 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  94 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
  95 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  96 Integer          0   10    0               00 r[10]=0
REG[10] =  i:0
  97 Rewind           1  149    0               00 
  98 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  99 Column           1    0   15               00 r[15]=t1.a
REG[15] =  i:9223372036854775807
 100 Eq              15   12   14 (BINARY)      61 if r[15]==r[14] goto 12
REG[15] =  i:9223372036854775807
REG[14] =   t1[x](8)
REG[12] =  i:0
 101 Rowid            1   13    0               00 r[13]=rowid
REG[13] =  i:1
 102 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
 103 Found            2  114   12 2             00 key=r[12..13]
REG[12] =  i:0
REG[13] =  i:1
 114 Copy            15   16    0               00 r[16]=r[15]
REG[16] =  i:9223372036854775807
 115 Function0        0   16   12 abs(1)        01 r[12]=func(r[16])
REG[16] =  i:9223372036854775807
REG[12] =  i:9223372036854775807
 116 AddImm           9    1    0               00 r[9]=r[9]+1
REG[9] =  i:0
 117 Found            3  128   12 2             00 key=r[12..13]
REG[12] =  i:9223372036854775807
REG[13] =  i:1
 128 Column           1    0   12               00 r[12]=t1.a
REG[12] =  i:9223372036854775807
 129 AddImm          10    1    0               00 r[10]=r[10]+1
REG[10] =  i:0
 130 Found            4  141   12 2             00 key=r[12..13]
REG[12] =  i:9223372036854775807
REG[13] =  i:1
 141 IsNull          12  148    0               00 if r[12]==NULL goto 148
REG[12] =  i:9223372036854775807
 142 Next             4  144    0               00 
 143 Goto             0  148    0               00 
 148 Next             1   98    0               00 
 149 String8          0    2    0 wrong # of entries in index  00 r[2]='wrong # of entries in index '
REG[2] =   t28[wrong # of entr](8)
 150 IfPos            1  152    0               00 if r[1]>0 then r[1]-=0, goto 152
REG[1] =  i:100
 152 Count            2    3    0               00 r[3]=count()
REG[3] =  i:1
 153 Eq               8  158    3               90 if r[8]==r[3] goto 158
REG[8] =  i:1
REG[3] =  i:1
 158 IfPos            1  160    0               00 if r[1]>0 then r[1]-=0, goto 160
REG[1] =  i:100
 160 Count            3    3    0               00 r[3]=count()
REG[3] =  i:1
 161 Eq               9  166    3               90 if r[9]==r[3] goto 166
REG[9] =  i:1
REG[3] =  i:1
 166 IfPos            1  168    0               00 if r[1]>0 then r[1]-=0, goto 168
REG[1] =  i:100
 168 Count            4    3    0               00 r[3]=count()
REG[3] =  i:1
 169 Eq              10  174    3               90 if r[10]==r[3] goto 174
REG[10] =  i:1
REG[3] =  i:1
 174 IfPos            1  176    0               00 if r[1]>0 then r[1]-=0, goto 176
REG[1] =  i:100
 176 IntegrityCk      2    1    1 ]             01 
 177 IsNull           2  182    0               00 if r[2]==NULL goto 182
REG[2] =  NULL
 182 AddImm           1 -100    0               00 r[1]=r[1]+-100
REG[1] =  i:100
 183 If               1  186    0               00 
REG[1] =  i:0
 184 String8          0    3    0 ok            00 r[3]='ok'
REG[3] =   t2[ok](8)
 185 ResultRow        3    1    0               00 output=r[3]
REG[3] =   t2[ok](8)
 186 Halt             0    0    0               00 
SQL: [;SELECT count(*), sum(b) FROM t1;]
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    6 3             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
   1 Null             0    1    3               00 r[1..3]=NULL
REG[1] =  NULL
   2 OpenRead         0    2    0 2             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    1    4               00 r[4]=t1.b
REG[4] =  NULL
   7 AggStep0         0    4    2 sum(1)        01 accum=r[2] step(r[4])
REG[4] =  NULL
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
REG[5] =  i:1
REG[6] =  NULL
  13 ResultRow        5    2    0               00 output=r[5..6]
REG[5] =  i:1
REG[6] =  NULL
  14 Halt             0    0    0               00 
SQL: [;
;PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE t3(tr1);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    6 3             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:9
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:8
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:8
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:8
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:8
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:8
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t3            00 r[7]='t3'
REG[7] =   t2[t3](8)
  22 String8          0    8    0 t3            00 r[8]='t3'
REG[8] =   t2[t3](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:9
  24 String8          0   10    0 CREATE TABLE t3(tr1) 00 r[10]='CREATE TABLE t3(tr1)'
REG[10] =   t20[CREATE TABLE t3](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[0617111101357461626C657433743309.....5tablet3t3.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[0617111101357461626C657433743309.....5tablet3t3.](8)
REG[5] =  i:8
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    7               00 
  30 ParseSchema      0    0    0 tbl_name='t3' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    7 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t3            00 r[2]='t3'
REG[2] =   t2[t3](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t3](8)
REG[1] =   s2[t3](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t3](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:9
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s20[CREATE TABLE t3](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t3](8)
REG[6] =  i:9
REG[7] =   s20[CREATE TABLE t3](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [;DELETE FROM t3;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Transaction      0    1    7 3             01 usesStmtJournal=0
   6 TableLock        0    9    1 t3            00 iDb=0 root=9 write=1
   7 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Clear            9    0    1 t3            00 
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER tr2 AFTER UPDATE ON t1 BEGIN 
      UPDATE t1 SET a = new.a WHERE a = old.a;
    END;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    1    7 3             01 usesStmtJournal=0
  17 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  18 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:9
   4 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   5 String8          0    3    0 tr2           00 r[3]='tr2'
REG[3] =   t3[tr2](8)
   6 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   7 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   8 String8          0    6    0 CREATE TRIGGER tr2 AFTER UPDATE ON t1 BEGIN 
      UPDATE t1 SET a = new.a WHERE a = old.a;
    END 00 r[6]='CREATE TRIGGER tr2 AFTER UPDATE ON t1 BEGIN 
      UPDATE t1 SET a = new.a WHERE a = old.a;
 
REG[6] =   t99[CREATE TRIGGER ](8)
   9 MakeRecord       2    5    8 BBBDB         00 r[8]=mkrec(r[2..6])
REG[8] =  s118[071B1311088153747269676765727472......Striggertr](8)
  10 Insert           0    8    1               18 intkey=r[1] data=r[8]
REG[8] =  s118[071B1311088153747269676765727472......Striggertr](8)
REG[1] =  i:9
  11 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  12 Close            0    0    0               00 
  13 SetCookie        0    1    8               00 
  14 ParseSchema      0    0    0 type='trigger' AND name='tr2' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    8 3             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 tr2           00 r[4]='tr2'
REG[4] =   t3[tr2](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[index](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s3[tr2](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t3[tr2](8)
REG[3] =   s3[tr2](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s3[tr2](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s99[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[tr2](8)
REG[6] =  i:0
REG[7] =   s99[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
;
;DROP TABLE IF EXISTS t4;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    8 3             01 usesStmtJournal=0
   3 Transaction      1    0    0 3             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [DELETE FROM t3;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Transaction      0    1    8 3             01 usesStmtJournal=0
   6 TableLock        0    9    1 t3            00 iDb=0 root=9 write=1
   7 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Clear            9    0    1 t3            00 
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   4 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fb074d85859 in __GI_abort () at abort.c:79
#2  0x00007fb074d85729 in __assert_fail_base (fmt=0x7fb074f1b588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=<optimized out>)
    at assert.c:92
#3  0x00007fb074d96fd6 in __GI___assert_fail (assertion=0x212700 "memIsValid(&aMem[pOp->p1])", file=0x222c23 "sqlite3.c", line=77360, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e2946 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:77360
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7fff55bc0858) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 31515] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
