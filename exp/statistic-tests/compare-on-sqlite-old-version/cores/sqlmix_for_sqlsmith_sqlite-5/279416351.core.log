GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000149,sig:11,src:016565+020814,time:4315713,execs:693714,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE VIRTUAL TABLE vt3 USING echo(w)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    3 0             01 usesStmtJournal=0
  34 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  35 Goto             0    1    0               00 
   1 VBegin           0    0    0               00 
   2 ReadCookie       0    3    2               00 
REG[3] =  i:4
   3 If               3    6    0               00 
REG[3] =  i:4
   6 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   7 OpenWrite        0    1    0 5             00 root=1 iDb=0
   8 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   9 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
  10 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 vt3           00 r[7]='vt3'
REG[7] =   t3[vt3](8)
  21 String8          0    8    0 vt3           00 r[8]='vt3'
REG[8] =   t3[vt3](8)
  22 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  23 String8          0   10    0 CREATE VIRTUAL TABLE vt3 USING echo(w) 00 r[10]='CREATE VIRTUAL TABLE vt3 USING echo(w)'
REG[10] =   t38[CREATE VIRTUAL ](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s55[0617131308597461626C657674337674.....Ytablevt3vt](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s55[0617131308597461626C657674337674.....Ytablevt3vt](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 Expire           0    0    0               00 
  29 ParseSchema      0    0    0 name='vt3' AND type='table' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 vt3           00 r[2]='vt3'
REG[2] =   t3[vt3](8)
  19 String8          0    4    0 table         00 r[4]='table'
REG[4] =   t5[table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt3](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt3](8)
REG[1] =   s1[w](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt3](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[r1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt3](8)
REG[1] =   s2[r1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[vt3](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt3](8)
REG[1] =   s3[vt3](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[table](8)
REG[3] =   s5[table](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s3[vt3](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE VIRTUAL ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[vt3](8)
REG[6] =  i:0
REG[7] =   s38[CREATE VIRTUAL ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  30 String8          0   12    0 vt3           00 r[12]='vt3'
REG[12] =   t3[vt3](8)
  31 VCreate          0   12    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s60[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[w](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE x_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[w](8)
REG[2] =  i:3
REG[3] =   s33[CREATE TABLE x_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s23[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:4
REG[3] =   s23[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[r1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s18[CREATE TABLE r1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[r1](8)
REG[2] =  i:5
REG[3] =   s18[CREATE TABLE r1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM 'c'
;]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    3 1             01 usesStmtJournal=0
  11 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  12 Goto             0    1    0               00 
   1 OpenRead         0    4    0 2             00 root=4 iDb=0; c
   2 Explain          0    0    0 SCAN TABLE c  00 
   3 Rewind           0    8    0               00 
   8 Close            0    0    0               00 
   9 Halt             0    0    0               00 
SQL: [CREATE VIRTUAL TABLE vt4 USING echo(c)
;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Transaction      0    1    3 1             01 usesStmtJournal=0
  34 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  35 Goto             0    1    0               00 
   1 VBegin           0    0    0               00 
   2 ReadCookie       0    3    2               00 
REG[3] =  i:4
   3 If               3    6    0               00 
REG[3] =  i:4
   6 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   7 OpenWrite        0    1    0 5             00 root=1 iDb=0
   8 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
   9 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
  10 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:5
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:5
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:5
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:5
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:5
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 vt4           00 r[7]='vt4'
REG[7] =   t3[vt4](8)
  21 String8          0    8    0 vt4           00 r[8]='vt4'
REG[8] =   t3[vt4](8)
  22 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  23 String8          0   10    0 CREATE VIRTUAL TABLE vt4 USING echo(c) 00 r[10]='CREATE VIRTUAL TABLE vt4 USING echo(c)'
REG[10] =   t38[CREATE VIRTUAL ](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s55[0617131308597461626C657674347674.....Ytablevt4vt](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s55[0617131308597461626C657674347674.....Ytablevt4vt](8)
REG[5] =  i:5
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 Expire           0    0    0               00 
  29 ParseSchema      0    0    0 name='vt4' AND type='table' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 vt4           00 r[2]='vt4'
REG[2] =   t3[vt4](8)
  19 String8          0    4    0 table         00 r[4]='table'
REG[4] =   t5[table](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt4](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt4](8)
REG[1] =   s1[w](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt4](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[r1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt4](8)
REG[1] =   s2[r1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s3[vt4](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t3[vt4](8)
REG[1] =   s3[vt4](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[table](8)
REG[3] =   s5[table](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s3[vt4](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s38[CREATE VIRTUAL ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s3[vt4](8)
REG[6] =  i:0
REG[7] =   s38[CREATE VIRTUAL ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  30 String8          0   12    0 vt4           00 r[12]='vt4'
REG[12] =   t3[vt4](8)
  31 VCreate          0   12    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s60[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s60[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[w](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s33[CREATE TABLE x_](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[w](8)
REG[2] =  i:3
REG[3] =   s33[CREATE TABLE x_](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s23[CREATE TABLE c(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:4
REG[3] =   s23[CREATE TABLE c(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[r1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:5
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s18[CREATE TABLE r1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[r1](8)
REG[2] =  i:5
REG[3] =   s18[CREATE TABLE r1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA index_list(w)
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 

Program received signal SIGSEGV, Segmentation fault.
sqlite3OpenTable (pParse=0x113a450, iCur=0, iDb=0, pTab=0x0, opcode=103) at sqlite3.c:105897
105897	  assert( !IsVirtual(pTab) );
(gdb) #0  sqlite3OpenTable (pParse=0x113a450, iCur=0, iDb=0, pTab=0x0, opcode=103) at sqlite3.c:105897
#1  0x0000000000389294 in autoIncrementEnd (pParse=<optimized out>) at sqlite3.c:106205
#2  0x0000000000342171 in sqlite3AutoincrementEnd (pParse=0x113a450) at sqlite3.c:106219
#3  sqlite3Insert (pParse=<optimized out>, pTabList=<optimized out>, pSelect=<optimized out>, pColumn=0x1139740, onError=<optimized out>) at sqlite3.c:41372
#4  0x00000000003066b3 in yy_reduce (yypParser=0x1148330, yyruleno=<optimized out>) at sqlite3.c:133484
#5  0x00000000002fef8e in sqlite3Parser (yyp=0x1148330, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#6  0x00000000002fc544 in sqlite3RunParser (pParse=0x113a450, 
    zSql=0x1128200 "INSERT INTO 't1' ('b') VALUES(?2)\n;INSERT INTO 't1' ('a') VALUES(?2)\n;INSERT INTO 't1' ('b') VALUES(?2)\n;INSERT INTO 't1' ('b') VALUES(?2)\n;SELECT * FROM c\n;SELECT count(*) FROM 'r1'\n;SELECT count(*) "..., pzErrMsg=0x7ffea9d93468) at sqlite3.c:135186
#7  0x00000000002fac4e in sqlite3Prepare (db=0x1127850, 
    zSql=0x11287b5 "INSERT INTO 't1' ('b') VALUES(?2)\n;INSERT INTO 't1' ('a') VALUES(?2)\n;INSERT INTO 't1' ('b') VALUES(?2)\n;INSERT INTO 't1' ('b') VALUES(?2)\n;SELECT * FROM c\n;SELECT count(*) FROM 'r1'\n;SELECT count(*) "..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7ffea9d93598, pzTail=0x7ffea9d93580) at sqlite3.c:112589
#8  0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1127850, 
    zSql=0x11287b5 "INSERT INTO 't1' ('b') VALUES(?2)\n;INSERT INTO 't1' ('a') VALUES(?2)\n;INSERT INTO 't1' ('b') VALUES(?2)\n;INSERT INTO 't1' ('b') VALUES(?2)\n;SELECT * FROM c\n;SELECT count(*) FROM 'r1'\n;SELECT count(*) "..., nBytes=962, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7ffea9d93580) at sqlite3.c:112688
#9  0x000000000028f38c in sqlite3_prepare_v2 (db=0x113a450, zSql=0x0, nBytes=0, ppStmt=0x7ffea9d93598, pzTail=<optimized out>) at sqlite3.c:112764
#10 0x000000000024b100 in main (argc=1, argv=0x7ffea9d93748) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 28034] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
