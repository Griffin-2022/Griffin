GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000390,sig:06,src:021676+024369,time:9033094,execs:1618439,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    3 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [INSERT INTO c VALUES(2, 1)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    3 0             01 usesStmtJournal=0
  15 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  16 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; c
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   5 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   6 Ne               3    8    2 (BINARY)      51 if r[3]!=r[2] goto 8
REG[3] =  i:1
REG[2] =  i:2
   8 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03010902....](8)
   9 Insert           0    5    1 c             1B intkey=r[1] data=r[5]
REG[5] =  s4[03010902....](8)
REG[1] =  i:1
  10 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  11 Close            0    0    0               00 
  12 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  13 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    3 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    3 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [DROP table "w"
;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    1    3 0             01 usesStmtJournal=1
  72 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  73 String8          0    4    0 w             00 r[4]='w'
REG[4] =   t1[w](8)
  74 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  75 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Last             0   15    0               00 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[w](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s1[w](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[index](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[index](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:5
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[w](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s1[w](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[table](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[table](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:1
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:4
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[c](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s1[c](8)
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s2[t1](8)
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s2[t1](8)
  14 Prev             0    6    0               01 
  15 Close            0    0    0               00 
  16 Destroy          6    5    0               00 
REG[5] =  i:0
  17 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  18 IfNot            5   27    1               00 
REG[5] =  i:0
  27 Close            1    0    0               00 
  28 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  29 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  30 RowSetRead       8   41    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  41 Close            1    0    0               00 
  42 Destroy          5    5    0               00 
REG[5] =  i:0
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 IfNot            5   53    1               00 
REG[5] =  i:0
  53 Close            2    0    0               00 
  54 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  55 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  56 RowSetRead      17   67   18               00 r[18]=rowset(17)
REG[17] =  NULL
REG[18] =  NULL
  67 Close            2    0    0               00 
  68 DropTable        0    0    0 w             00 
  69 SetCookie        0    1    4               00 
  70 Halt             0    0    0               00 
SQL: [ATTACH 'test.db' AS db8;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db       00 r[1]='test.db'
REG[1] =   t7[test.db](8)
   2 String8          0    2    0 db8           00 r[2]='db8'
REG[2] =   t3[db8](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t7[test.db](8)
REG[2] =   t3[db8](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0   32 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0   32 0             00 usesStmtJournal=0
  12 TableLock        2    2    0 sqlite_stat1  00 iDb=2 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    2 3             00 root=2 iDb=2; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Last             0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA foreign_keys = 1
;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE TABLE w(r1 PRIMARY KEY, x);]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    1    4 0             01 usesStmtJournal=0
  47 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  48 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      0    4    0               00 r[4]=root iDb=0
REG[4] =  i:6
  13 Integer          0   11    0               00 r[11]=0
REG[11] =  i:0
  14 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
REG[5] =  i:5
  16 String8          0    6    0 index         00 r[6]='index'
REG[6] =   t5[index](8)
  17 String8          0    7    0 sqlite_autoindex_w_1 00 r[7]='sqlite_autoindex_w_1'
REG[7] =   t20[sqlite_autoinde](8)
  18 String8          0    8    0 w             00 r[8]='w'
REG[8] =   t1[w](8)
  19 Copy             4    9    0               00 r[9]=r[4]
REG[9] =  i:6
  20 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
REG[12] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
REG[12] =  s33[0617350F0100696E64657873716C6974..5...indexsqlit](8)
REG[5] =  i:5
  23 AddImm          11    1    0               00 r[11]=r[11]+1
REG[11] =  i:0
  24 Close            1    0    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
REG[13] =  NULL
  27 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
REG[1] =  i:4
  30 NotExists        2   32    1               00 intkey=r[1]; pk
REG[1] =  i:4
  31 Rowid            2   14    0               00 r[14]=rowid
REG[14] =  i:4
  32 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
REG[14] =  i:4
  34 String8          0   15    0 table         00 r[15]='table'
REG[15] =   t5[table](8)
  35 String8          0   16    0 w             00 r[16]='w'
REG[16] =   t1[w](8)
  36 String8          0   17    0 w             00 r[17]='w'
REG[17] =   t1[w](8)
  37 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:5
  38 String8          0   19    0 CREATE TABLE w(r1 PRIMARY KEY, x) 00 r[19]='CREATE TABLE w(r1 PRIMARY KEY, x)'
REG[19] =   t33[CREATE TABLE w(](8)
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
REG[20] =  s47[06170F0F014F7461626C657777054352.....Otableww.CR](8)
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
REG[20] =  s47[06170F0F014F7461626C657777054352.....Otableww.CR](8)
REG[14] =  i:4
  41 AddImm          21    1    0               00 r[21]=r[21]+1
REG[21] =  i:0
  42 Close            2    0    0               00 
  43 SetCookie        0    1    5               00 
  44 ParseSchema      0    0    0 tbl_name='w' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 w             00 r[2]='w'
REG[2] =   t1[w](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[w](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[w](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[c](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[w](8)
REG[1] =   s1[c](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[w](8)
REG[1] =   s1[w](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[w](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s33[CREATE TABLE w(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[w](8)
REG[6] =  i:5
REG[7] =   s33[CREATE TABLE w(](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[w](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[w](8)
REG[1] =   s1[w](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[index](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s20[sqlite_autoinde](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =  NULL
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s20[sqlite_autoinde](8)
REG[6] =  i:6
REG[7] =  NULL
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  45 Halt             0    0    0               00 
SQL: [SELECT*FROM"db8".sqlite_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0   32 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_master.name
REG[2] =   s12[sqlite_stat1](8)
   7 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s12[sqlite_stat1](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s39[CREATE TABLE sq](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s12[sqlite_stat1](8)
REG[3] =   s12[sqlite_stat1](8)
REG[4] =  i:2
REG[5] =   s39[CREATE TABLE sq](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.229,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.229 00 r[3]=1237962480.229
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.229](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.229](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.229](8)
   5 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.107,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.107 00 r[3]=1237962480.107
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.107](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.107](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.107](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [ATTACH 'test.db' as db12;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 test.db       00 r[1]='test.db'
REG[1] =   t7[test.db](8)
   2 String8          0    2    0 db12          00 r[2]='db12'
REG[2] =   t4[db12](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t7[test.db](8)
REG[2] =   t4[db12](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      3    0   32 0             00 usesStmtJournal=0
  13 TableLock        3    1    0 sqlite_master 00 iDb=3 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    3 5             00 root=1 iDb=3; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s12[sqlite_stat1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s39[CREATE TABLE sq](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s12[sqlite_stat1](8)
REG[2] =  i:2
REG[3] =   s39[CREATE TABLE sq](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      3    0   32 0             00 usesStmtJournal=0
  12 TableLock        3    2    0 sqlite_stat1  00 iDb=3 root=2 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    2    3 3             00 root=2 iDb=3; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Last             0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;DETACH db2;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 String8          0    3    0 db2           00 r[3]='db2'
REG[3] =   t3[db2](8)
   4 Function0        0    3    4 sqlite_detach(1) 01 r[4]=func(r[3])
REG[3] =   t3[db2](8)
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.265,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.265 00 r[3]=1237962480.265
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.265](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.265](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.265](8)
   5 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.769,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.769 00 r[3]=1237962480.769
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.769](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.769](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.769](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.355,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.355 00 r[3]=1237962480.355
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.355](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.355](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.355](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.896,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.896 00 r[3]=1237962480.896
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.896](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.896](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.896](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT coalesce(datetime('2003-10-22 12:24','4 second'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 2003-10-22 12:24 00 r[2]='2003-10-22 12:24'
REG[2] =   t16[2003-10-22 12:2](8)
   7 String8          0    3    0 4 second      00 r[3]='4 second'
REG[3] =   t8[4 second](8)
   8 Goto             0    1    0               00 
   1 Function0        3    2    1 datetime(-1)  02 r[1]=func(r[2..3])
REG[2] =   t16[2003-10-22 12:2](8)
REG[3] =   t8[4 second](8)
REG[1] =   s19[2003-10-22 12:2](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s19[2003-10-22 12:2](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[2003-10-22 12:2](8)
   5 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%o','2003-10-31'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %o            00 r[2]='%o'
REG[2] =   t2[%o](8)
   7 String8          0    3    0 2003-10-31    00 r[3]='2003-10-31'
REG[3] =   t10[2003-10-31](8)
   8 Goto             0    1    0               00 
   1 Function0        3    2    1 strftime(-1)  02 r[1]=func(r[2..3])
REG[2] =   t2[%o](8)
REG[3] =   t10[2003-10-31](8)
REG[1] =  NULL
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =  NULL
   3 String8          0    1    0 NULL          00 r[1]='NULL'
REG[1] =   t4[NULL](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[NULL](8)
   5 Halt             0    0    0               00 
SQL: [SELECT coalesce(datetime('1994-04-16 05:00:00 +08:30'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 1994-04-16 05:00:00 +08:30 00 r[2]='1994-04-16 05:00:00 +08:30'
REG[2] =   t26[1994-04-16 05:0](8)
   7 Goto             0    1    0               00 
   1 Function0        1    2    1 datetime(-1)  01 r[1]=func(r[2])
REG[2] =   t26[1994-04-16 05:0](8)
REG[1] =   s19[1994-04-15 20:3](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s19[1994-04-15 20:3](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[1994-04-15 20:3](8)
   5 Halt             0    0    0               00 
SQL: [SELECT coalesce(strftime('%H:%M:%f',1237962480.569,'unixepoch'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 %H:%M:%f      00 r[2]='%H:%M:%f'
REG[2] =   t8[%H:%M:%f](8)
   7 Real             0    3    0 1237962480.569 00 r[3]=1237962480.569
REG[3] =  r:1.23796e+09
   8 String8          0    4    0 unixepoch     00 r[4]='unixepoch'
REG[4] =   t9[unixepoch](8)
   9 Goto             0    1    0               00 
   1 Function0        7    2    1 strftime(-1)  03 r[1]=func(r[2..4])
REG[2] =   t8[%H:%M:%f](8)
REG[3] =  r:1.23796e+09
REG[4] =   t9[unixepoch](8)
REG[1] =   s12[06:28:00.569](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s12[06:28:00.569](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s12[06:28:00.569](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT coalesce(datetime('now','1.5 months'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 now           00 r[2]='now'
REG[2] =   t3[now](8)
   7 String8          0    3    0 1.5 months    00 r[3]='1.5 months'
REG[3] =   t10[1.5 months](8)
   8 Goto             0    1    0               00 
   1 Function0        3    2    1 datetime(-1)  02 r[1]=func(r[2..3])
REG[2] =   t3[now](8)
REG[3] =   t10[1.5 months](8)
REG[1] =   s19[2022-09-23 00:4](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s19[2022-09-23 00:4](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s19[2022-09-23 00:4](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT coalesce(date('2000-01-01','+1.5 years'),'NULL')
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 String8          0    2    0 2000-01-01    00 r[2]='2000-01-01'
REG[2] =   t10[2000-01-01](8)
   7 String8          0    3    0 +1.5 years    00 r[3]='+1.5 years'
REG[3] =   t10[+1.5 years](8)
   8 Goto             0    1    0               00 
   1 Function0        3    2    1 date(-1)      02 r[1]=func(r[2..3])
REG[2] =   t10[2000-01-01](8)
REG[3] =   t10[+1.5 years](8)
REG[1] =   s10[2001-07-02](8)
   2 NotNull          1    4    0               00 if r[1]!=NULL goto 4
REG[1] =   s10[2001-07-02](8)
   4 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s10[2001-07-02](8)
   5 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(w)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    5 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 0             01 usesStmtJournal=0
  18 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  19 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  20 String8          0    3    0 view          00 r[3]='view'
REG[3] =   t4[view](8)
  21 String8          0    4    0 sqliteX_%     00 r[4]='sqliteX_%'
REG[4] =   t9[sqliteX_%](8)
  22 String8          0    6    0 X             00 r[6]='X'
REG[6] =   t1[X](8)
  23 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Last             0   15    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s5[index](8)
REG[2] =   t5[table](8)
   7 Ne               1   14    3 (BINARY)      52 if r[1]!=r[3] goto 14; end IN expr
REG[1] =   s5[index](8)
REG[3] =   t4[view](8)
  14 Prev             0    4    0               01 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s5[table](8)
REG[2] =   t5[table](8)
   8 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[w](8)
   9 Function0        5    4    1 like(3)       03 r[1]=func(r[4..6])
REG[4] =   t9[sqliteX_%](8)
REG[5] =   s1[w](8)
REG[6] =   t1[X](8)
REG[1] =  i:0
  10 If               1   14    1               00 
REG[1] =  i:0
  11 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s1[w](8)
  12 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
  13 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =   s1[w](8)
REG[8] =   s5[table](8)
  14 Prev             0    4    0               01 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s5[table](8)
REG[2] =   t5[table](8)
   8 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[c](8)
   9 Function         5    4    1 like(3)       03 r[1]=func(r[4..6])
REG[4] =   t9[sqliteX_%](8)
REG[5] =   s1[c](8)
REG[6] =   t1[X](8)
REG[1] =  i:0
  10 If               1   14    1               00 
REG[1] =  i:0
  11 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s1[c](8)
  12 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
  13 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =   s1[c](8)
REG[8] =   s5[table](8)
  14 Prev             0    4    0               01 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s5[index](8)
REG[2] =   t5[table](8)
   7 Ne               1   14    3 (BINARY)      52 if r[1]!=r[3] goto 14; end IN expr
REG[1] =   s5[index](8)
REG[3] =   t4[view](8)
  14 Prev             0    4    0               01 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s5[table](8)
REG[2] =   t5[table](8)
   8 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
   9 Function         5    4    1 like(3)       03 r[1]=func(r[4..6])
REG[4] =   t9[sqliteX_%](8)
REG[5] =   s2[t1](8)
REG[6] =   t1[X](8)
REG[1] =  i:0
  10 If               1   14    1               00 
REG[1] =  i:0
  11 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s2[t1](8)
  12 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
  13 ResultRow        7    2    0               00 output=r[7..8]
REG[7] =   s2[t1](8)
REG[8] =   s5[table](8)
  14 Prev             0    4    0               01 
  15 Close            0    0    0               00 
  16 Halt             0    0    0               00 
SQL: [DROP table "w"
;]
VDBE Trace:
   0 Init             0   71    0               00 Start at 71
  71 Transaction      0    1    5 0             01 usesStmtJournal=1
  72 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  73 String8          0    4    0 w             00 r[4]='w'
REG[4] =   t1[w](8)
  74 String8          0    6    0 trigger       00 r[6]='trigger'
REG[6] =   t7[trigger](8)
  75 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Last             0   15    0               00 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[w](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s1[w](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[index](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[index](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:0
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:5
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[w](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s1[w](8)
   8 Column           0    0    5               00 r[5]=sqlite_master.type
REG[5] =   s5[table](8)
   9 Eq               6   14    5 (BINARY)      52 if r[6]==r[5] goto 14
REG[6] =   t7[trigger](8)
REG[5] =   s5[table](8)
  10 AddImm           1    1    0               00 r[1]=r[1]+1
REG[1] =  i:1
  11 Rowid            0    7    0               00 r[7]=rowid
REG[7] =  i:4
  12 Once             0   13    0               00 
  13 Delete           0    0    0 sqlite_master 02 
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s1[c](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s1[c](8)
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s2[t1](8)
  14 Prev             0    6    0               01 
   6 Column           0    2    3               00 r[3]=sqlite_master.tbl_name
REG[3] =   s2[t1](8)
   7 Ne               4   14    3 (BINARY)      52 if r[4]!=r[3] goto 14
REG[4] =   t1[w](8)
REG[3] =   s2[t1](8)
  14 Prev             0    6    0               01 
  15 Close            0    0    0               00 
  16 Destroy          6    5    0               00 
REG[5] =  i:0
  17 Null             0    8    9               00 r[8..9]=NULL
REG[8] =  NULL
  18 IfNot            5   27    1               00 
REG[5] =  i:0
  27 Close            1    0    0               00 
  28 Integer          0   16    0               00 r[16]=0
REG[16] =  i:0
  29 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  30 RowSetRead       8   41    9               00 r[9]=rowset(8)
REG[8] =  NULL
REG[9] =  NULL
  41 Close            1    0    0               00 
  42 Destroy          5    5    0               00 
REG[5] =  i:0
  43 Null             0   17   18               00 r[17..18]=NULL
REG[17] =  NULL
  44 IfNot            5   53    1               00 
REG[5] =  i:0
  53 Close            2    0    0               00 
  54 Integer          0   25    0               00 r[25]=0
REG[25] =  i:0
  55 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  56 RowSetRead      17   67   18               00 r[18]=rowset(17)
REG[17] =  NULL
REG[18] =  NULL
  67 Close            2    0    0               00 
  68 DropTable        0    0    0 w             00 
  69 SetCookie        0    1    6               00 
  70 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(t1)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [INSERT INTO c VALUES(NULL, 4)
;]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    1    6 0             01 usesStmtJournal=0
  15 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  16 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    4    0 2             00 root=4 iDb=0; c
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   5 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
   6 Ne               3    8    2 (BINARY)      51 if r[3]!=r[2] goto 8
REG[3] =  i:4
REG[2] =  NULL
   8 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s4[03000104....](8)
   9 Insert           0    5    1 c             1B intkey=r[1] data=r[5]
REG[5] =  s4[03000104....](8)
REG[1] =  i:2
  10 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
  11 Close            0    0    0               00 
  12 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  13 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [PRAGMA foreign_key_check(c)
;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    6 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [UPDATE t1 SET b=1 WHERE b=4
;]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      0    1    6 0             01 usesStmtJournal=1
  47 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  48 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 Noop             3    2    0               00 
   3 OpenWrite        2    3    0 k(2,,RTRIM)   02 root=3 iDb=0; sqlite_autoindex_t1_1
   4 Explain          0    0    0 SEARCH TABLE t1 USING COVERING INDEX sqlite_autoindex_t1_1 (b=?) 00 
   5 Integer          4   13    0               00 r[13]=4
REG[13] =  i:4
   6 SeekLE           2   10   13 1             00 key=r[13]
REG[13] =  i:4
  10 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  11 OpenWrite        1    2    0 k(2,RTRIM,)   00 root=2 iDb=0; sqlite_autoindex_t1_2
  12 NotFound         1   43   10 2             00 key=r[10..11]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f5931532859 in __GI_abort () at abort.c:79
#2  0x00007f5931532729 in __assert_fail_base (fmt=0x7f59316c8588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=<optimized out>)
    at assert.c:92
#3  0x00007f5931543fd6 in __GI___assert_fail (assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e29eb in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:80649
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7fffc23d21d8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 29991] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
