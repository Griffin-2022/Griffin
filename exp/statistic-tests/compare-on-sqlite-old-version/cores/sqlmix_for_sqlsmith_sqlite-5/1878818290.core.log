GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000664,sig:06,src:022640+025644,time:25900986,execs:4394934,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_listing=on;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;VACUUM
;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ATTACH ':memory:' AS vacuum_db;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 :memory:      00 r[1]=':memory:'
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
   6 Column           0    1    3               00 r[3]=sqlite_master.name
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
  10 Integer          1    5    0               00 r[5]=1
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
  15 ResultRow        7    1    0               00 output=r[7]
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
  19 Transaction      0    0    5 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
  23 Integer          0    6    0               00 r[6]=0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
  25 Integer         14   10    0               00 r[10]=14
  26 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.t1(a PRIMARY KEY DESC)]
VDBE Program Listing:
   0 Init             0   46    0               00 Start at 46
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 Integer          0   11    0               00 r[11]=0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
  16 String8          0    6    0 index         00 r[6]='index'
  17 String8          0    7    0 sqlite_autoindex_t1_1 00 r[7]='sqlite_autoindex_t1_1'
  18 String8          0    8    0 t1            00 r[8]='t1'
  19 Copy             4    9    0               00 r[9]=r[4]
  20 Null             0   10    0               00 r[10]=NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
  23 AddImm          11    1    0               00 r[11]=r[11]+1
  24 Close            1    0    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
  27 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
  30 NotExists        2   32    1               00 intkey=r[1]; pk
  31 Rowid            2   14    0               00 r[14]=rowid
  32 Integer          0   21    0               00 r[21]=0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
  34 String8          0   15    0 table         00 r[15]='table'
  35 String8          0   16    0 t1            00 r[16]='t1'
  36 String8          0   17    0 t1            00 r[17]='t1'
  37 Copy             2   18    0               00 r[18]=r[2]
  38 String8          0   19    0 CREATE TABLE t1(a PRIMARY KEY DESC) 00 r[19]='CREATE TABLE t1(a PRIMARY KEY DESC)'
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
  41 AddImm          21    1    0               00 r[21]=r[21]+1
  42 Close            2    0    0               00 
  43 SetCookie        2    1    1               00 
  44 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
  45 Halt             0    0    0               00 
  46 Transaction      2    1    0 0             01 usesStmtJournal=0
  47 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  48 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.c(
    t2 UNIQUE ON CONFLICT IGNORE,
    w UNIQUE ON CONFLICT FAIL,
    abc INT PRIMARY KEY ON CONFLICT REPLACE
  ) WITHOUT ROWID]
VDBE Program Listing:
   0 Init             0   74    0               00 Start at 74
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateIndex      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 Integer          0   11    0               00 r[11]=0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
  16 String8          0    6    0 index         00 r[6]='index'
  17 String8          0    7    0 sqlite_autoindex_c_1 00 r[7]='sqlite_autoindex_c_1'
  18 String8          0    8    0 c             00 r[8]='c'
  19 Copy             4    9    0               00 r[9]=r[4]
  20 Null             0   10    0               00 r[10]=NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
  23 AddImm          11    1    0               00 r[11]=r[11]+1
  24 Close            1    0    0               00 
  25 Noop             0   39    0               00 
  26 CreateIndex      2   13    0               00 r[13]=root iDb=2
  27 Integer          0   20    0               00 r[20]=0
  28 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  29 NewRowid         2   14    0               00 r[14]=rowid
  30 String8          0   15    0 index         00 r[15]='index'
  31 String8          0   16    0 sqlite_autoindex_c_2 00 r[16]='sqlite_autoindex_c_2'
  32 String8          0   17    0 c             00 r[17]='c'
  33 Copy            13   18    0               00 r[18]=r[13]
  34 Null             0   19    0               00 r[19]=NULL
  35 MakeRecord      15    5   21 BBBDB         00 r[21]=mkrec(r[15..19])
  36 Insert           2   21   14               18 intkey=r[14] data=r[21]
  37 AddImm          20    1    0               00 r[20]=r[20]+1
  38 Close            2    0    0               00 
  39 Goto             0   53    0               00 
  40 CreateIndex      2   22    0               00 r[22]=root iDb=2
  41 Integer          0   29    0               00 r[29]=0
  42 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  43 NewRowid         3   23    0               00 r[23]=rowid
  44 String8          0   24    0 index         00 r[24]='index'
  45 String8          0   25    0 sqlite_autoindex_c_3 00 r[25]='sqlite_autoindex_c_3'
  46 String8          0   26    0 c             00 r[26]='c'
  47 Copy            22   27    0               00 r[27]=r[22]
  48 Null             0   28    0               00 r[28]=NULL
  49 MakeRecord      24    5   30 BBBDB         00 r[30]=mkrec(r[24..28])
  50 Insert           3   30   23               18 intkey=r[23] data=r[30]
  51 AddImm          29    1    0               00 r[29]=r[29]+1
  52 Close            3    0    0               00 
  53 Close            0    0    0               00 
  54 Null             0   31   32               00 r[31..32]=NULL
  55 OpenWrite        4    1    2 5             00 root=1 iDb=2; sqlite_master
  56 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  57 MustBeInt        1   60    0               00 
  58 NotExists        4   60    1               00 intkey=r[1]; pk
  59 Rowid            4   32    0               00 r[32]=rowid
  60 Integer          0   39    0               00 r[39]=0
  61 IsNull          32   70    0               00 if r[32]==NULL goto 70
  62 String8          0   33    0 table         00 r[33]='table'
  63 String8          0   34    0 c             00 r[34]='c'
  64 String8          0   35    0 c             00 r[35]='c'
  65 Copy             2   36    0               00 r[36]=r[2]
  66 String8          0   37    0 CREATE TABLE c(
    t2 UNIQUE ON CONFLICT IGNORE,
    w UNIQUE ON CONFLICT FAIL,
    abc INT PRIMARY KEY ON CONFLICT REPLACE
  ) WITHOUT ROWID 00 r[37]='CREATE TABLE c(
    t2 UNIQUE ON CONFLICT IGNORE,
    w UNIQUE ON CONFLICT FAIL,
    abc INT
  67 MakeRecord      33    5   38 BBBDB         00 r[38]=mkrec(r[33..37])
  68 Insert           4   38   32               00 intkey=r[32] data=r[38]
  69 AddImm          39    1    0               00 r[39]=r[39]+1
  70 Close            4    0    0               00 
  71 SetCookie        2    1    2               00 
  72 ParseSchema      2    0    0 tbl_name='c' AND type!='trigger' 00 
  73 Halt             0    0    0               00 
  74 Transaction      2    1    1 0             01 usesStmtJournal=0
  75 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  76 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.x(
    t3 UNIQUE ON CONFLICT REPLACE, 
    tr1 UNIQUE ON CONFLICT IGNORE,
    tr2 INTEGER PRIMARY KEY ON CONFLICT FAIL
  )]
VDBE Program Listing:
   0 Init             0   60    0               00 Start at 60
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 Integer          0   11    0               00 r[11]=0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
  16 String8          0    6    0 index         00 r[6]='index'
  17 String8          0    7    0 sqlite_autoindex_x_1 00 r[7]='sqlite_autoindex_x_1'
  18 String8          0    8    0 x             00 r[8]='x'
  19 Copy             4    9    0               00 r[9]=r[4]
  20 Null             0   10    0               00 r[10]=NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
  23 AddImm          11    1    0               00 r[11]=r[11]+1
  24 Close            1    0    0               00 
  25 Noop             0   39    0               00 
  26 CreateIndex      2   13    0               00 r[13]=root iDb=2
  27 Integer          0   20    0               00 r[20]=0
  28 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  29 NewRowid         2   14    0               00 r[14]=rowid
  30 String8          0   15    0 index         00 r[15]='index'
  31 String8          0   16    0 sqlite_autoindex_x_2 00 r[16]='sqlite_autoindex_x_2'
  32 String8          0   17    0 x             00 r[17]='x'
  33 Copy            13   18    0               00 r[18]=r[13]
  34 Null             0   19    0               00 r[19]=NULL
  35 MakeRecord      15    5   21 BBBDB         00 r[21]=mkrec(r[15..19])
  36 Insert           2   21   14               18 intkey=r[14] data=r[21]
  37 AddImm          20    1    0               00 r[20]=r[20]+1
  38 Close            2    0    0               00 
  39 Close            0    0    0               00 
  40 Null             0   22   23               00 r[22..23]=NULL
  41 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  42 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  43 MustBeInt        1   46    0               00 
  44 NotExists        3   46    1               00 intkey=r[1]; pk
  45 Rowid            3   23    0               00 r[23]=rowid
  46 Integer          0   30    0               00 r[30]=0
  47 IsNull          23   56    0               00 if r[23]==NULL goto 56
  48 String8          0   24    0 table         00 r[24]='table'
  49 String8          0   25    0 x             00 r[25]='x'
  50 String8          0   26    0 x             00 r[26]='x'
  51 Copy             2   27    0               00 r[27]=r[2]
  52 String8          0   28    0 CREATE TABLE x(
    t3 UNIQUE ON CONFLICT REPLACE, 
    tr1 UNIQUE ON CONFLICT IGNORE,
    tr2 INTEGER PRIMARY KEY ON CONFLICT FAIL
  ) 00 r[28]='CREATE TABLE x(
    t3 UNIQUE ON CONFLICT REPLACE, 
    tr1 UNIQUE ON CONFLICT IGNORE,
    t
  53 MakeRecord      24    5   29 BBBDB         00 r[29]=mkrec(r[24..28])
  54 Insert           3   29   23               00 intkey=r[23] data=r[29]
  55 AddImm          30    1    0               00 r[30]=r[30]+1
  56 Close            3    0    0               00 
  57 SetCookie        2    1    3               00 
  58 ParseSchema      2    0    0 tbl_name='x' AND type!='trigger' 00 
  59 Halt             0    0    0               00 
  60 Transaction      2    1    2 0             01 usesStmtJournal=0
  61 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  62 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
   6 IfNot            1   11    1               00 
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
  10 ResultRow        4    1    0               00 output=r[4]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0    5 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
  18 Integer         14    7    0               00 r[7]=14
  19 Goto             0    1    0               00 
SQL: [CREATE INDEX vacuum_db.b ON t1(a*a)]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
   3 Integer          0    8    0               00 r[8]=0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
   6 String8          0    3    0 index         00 r[3]='index'
   7 String8          0    4    0 b             00 r[4]='b'
   8 String8          0    5    0 t1            00 r[5]='t1'
   9 Copy             1    6    0               00 r[6]=r[1]
  10 String8          0    7    0 CREATE INDEX b ON t1(a*a) 00 r[7]='CREATE INDEX b ON t1(a*a)'
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
  13 AddImm           8    1    0               00 r[8]=r[8]+1
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  17 Rewind           1   24    0               00 
  18 Column           1    0   13               00 r[13]=t1.a
  19 Multiply        13   13   11               00 r[11]=r[13]*r[13]
  20 Rowid            1   12    0               00 r[12]=rowid
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
  22 SorterInsert     3   10    0               00 
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    4               00 
  34 ParseSchema      2    0    0 name='b' AND type='index' 00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      2    1    3 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
   9 Copy             1    5    0               00 r[5]=r[1]
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    4 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
  19 String8          0    4    0 index         00 r[4]='index'
  20 Goto             0    1    0               00 
SQL: [CREATE INDEX vacuum_db.r1 ON t1 (lower(a))]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
   3 Integer          0    8    0               00 r[8]=0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
   6 String8          0    3    0 index         00 r[3]='index'
   7 String8          0    4    0 r1            00 r[4]='r1'
   8 String8          0    5    0 t1            00 r[5]='t1'
   9 Copy             1    6    0               00 r[6]=r[1]
  10 String8          0    7    0 CREATE INDEX r1 ON t1 (lower(a)) 00 r[7]='CREATE INDEX r1 ON t1 (lower(a))'
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
  13 AddImm           8    1    0               00 r[8]=r[8]+1
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  17 Rewind           1   24    0               00 
  18 Column           1    0   13               00 r[13]=t1.a
  19 Function0        0   13   11 lower(1)      01 r[11]=func(r[13])
  20 Rowid            1   12    0               00 r[12]=rowid
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
  22 SorterInsert     3   10    0               00 
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    5               00 
  34 ParseSchema      2    0    0 name='r1' AND type='index' 00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      2    1    4 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
   9 Copy             1    5    0               00 r[5]=r[1]
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    5 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 r1            00 r[2]='r1'
  19 String8          0    4    0 index         00 r[4]='index'
  20 Goto             0    1    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
   6 IfNot            1   11    1               00 
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
  10 ResultRow        4    1    0               00 output=r[4]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0    5 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
  18 Integer         21    7    0               00 r[7]=21
  19 Goto             0    1    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Program Listing:
   0 Init             0   24    0               00 Start at 24
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
   6 Column           0    1    3               00 r[3]=sqlite_master.name
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
  10 Integer          1    5    0               00 r[5]=1
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
  12 Copy             3   12    0               00 r[12]=r[3]
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
  16 Copy             3   12    0               00 r[12]=r[3]
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
  20 ResultRow        7    1    0               00 output=r[7]
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
  24 Transaction      0    0    5 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
  28 Integer          0    6    0               00 r[6]=0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
  31 String8          0   14    0 ;             00 r[14]=';'
  32 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Program Listing:
   0 Init             0   40    0               00 Start at 40
   1 InitCoroutine    3   10    2               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=t1.a
   6 Yield            3    0    0               00 
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
  10 Integer          0    4    0               00 r[4]=0
  11 OpenWrite        1    2    2 1             00 root=2 iDb=2; t1
  12 OpenWrite        2   11    2 k(2,,)        00 root=11 iDb=2; r1
  13 OpenWrite        3   10    2 k(2,,)        00 root=10 iDb=2; b
  14 OpenWrite        4    3    2 k(2,-,)       00 root=3 iDb=2; sqlite_autoindex_t1_1
  15 Yield            3   34    0               00 
  16 NewRowid         1    1    0               00 r[1]=rowid
  17 Copy             2   10    0               00 r[10]=r[2]
  18 Function0        0   10    8 lower(1)      01 r[8]=func(r[10]); r1 column 0
  19 IntCopy          1    9    0               00 r[9]=r[1]; rowid
  20 MakeRecord       8    2    5               00 r[5]=mkrec(r[8..9]); for r1
  21 Multiply         2    2    8               00 r[8]=r[2]*r[2]; b column 0
  22 MakeRecord       8    2    6               00 r[6]=mkrec(r[8..9]); for b
  23 SCopy            2    8    0               00 r[8]=r[2]; a
  24 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t1_1
  25 NoConflict       4   27    8 1             00 key=r[8]
  26 Halt          1555    2    0 t1.a          02 
  27 IdxInsert        2    5    0               10 key=r[5]
  28 IdxInsert        3    6    0               10 key=r[6]
  29 IdxInsert        4    7    0               10 key=r[7]
  30 MakeRecord       2    1   11               00 r[11]=mkrec(r[2])
  31 Insert           1   11    1 t1            1B intkey=r[1] data=r[11]
  32 AddImm           4    1    0               00 r[4]=r[4]+1
  33 Goto             0   15    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 Close            4    0    0               00 
  38 ResultRow        4    1    0               00 output=r[4]
  39 Halt             0    0    0               00 
  40 Transaction      0    0    5 0             01 usesStmtJournal=1
  41 Transaction      2    1    5 0             01 usesStmtJournal=1
  42 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  43 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  44 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.'c' SELECT * FROM main.'c';]
VDBE Program Listing:
   0 Init             0   51    0               00 Start at 51
   1 InitCoroutine    5   12    2               00 
   2 OpenRead         1    5    0 k(1,)         00 root=5 iDb=0; sqlite_autoindex_c_3
   3 Explain          0    0    0 SCAN TABLE c  00 
   4 Rewind           1   10    6 0             00 
   5 Column           1    1    2               00 r[2]=c.t2
   6 Column           1    2    3               00 r[3]=c.w
   7 Column           1    0    4               00 r[4]=c.abc
   8 Yield            5    0    0               00 
   9 Next             1    5    0               01 
  10 Close            1    0    0               00 
  11 EndCoroutine     5    0    0               00 
  12 Integer          0    6    0               00 r[6]=0
  13 OpenWrite        3    6    2 k(2,,)        00 root=6 iDb=2; sqlite_autoindex_c_2
  14 OpenWrite        4    5    2 k(2,,)        00 root=5 iDb=2; sqlite_autoindex_c_1
  15 OpenWrite        5    4    2 k(1,)         00 root=4 iDb=2; sqlite_autoindex_c_3
  16 Yield            5   46    0               00 
  17 Null             0    1    0               00 r[1]=NULL
  18 HaltIfNull    1299    2    4 c.abc         01 if r[4]=null halt
  19 Affinity         2    3    0 AAD           00 affinity(r[2..4])
  20 SCopy            3   10    0               00 r[10]=r[3]; w
  21 SCopy            4   11    0               00 r[11]=r[4]; abc
  22 MakeRecord      10    2    7               00 r[7]=mkrec(r[10..11]); for sqlite_autoindex_c_2
  23 NoConflict       3   25   10 1             00 key=r[10]
  24 Halt          2067    3    0 c.w           02 
  25 SCopy            2   10    0               00 r[10]=r[2]; t2
  26 SCopy            4   11    0               00 r[11]=r[4]; abc
  27 MakeRecord      10    2    8               00 r[8]=mkrec(r[10..11]); for sqlite_autoindex_c_1
  28 NoConflict       4   30   10 1             00 key=r[10]
  29 Goto             0   45    0               00 
  30 SCopy            4   14    0               00 r[14]=r[4]; abc
  31 SCopy            2   15    0               00 r[15]=r[2]; t2
  32 SCopy            3   16    0               00 r[16]=r[3]; w
  33 MakeRecord      14    3    9               00 r[9]=mkrec(r[14..16]); for sqlite_autoindex_c_3
  34 NoConflict       5   41   14 1             00 key=r[14]
  35 Column           5    2   10               00 r[10]=c.w
  36 Column           5    0   11               00 r[11]=c.abc
  37 IdxDelete        3   10    2               00 key=r[10..11]
  38 Column           5    1   10               00 r[10]=c.t2
  39 IdxDelete        4   10    2               00 key=r[10..11]
  40 Delete           5    0    0 c             00 
  41 IdxInsert        3    7    0               00 key=r[7]
  42 IdxInsert        4    8    0               00 key=r[8]
  43 IdxInsert        5    9    0               01 key=r[9]
  44 AddImm           6    1    0               00 r[6]=r[6]+1
  45 Goto             0   16    0               00 
  46 Close            3    0    0               00 
  47 Close            4    0    0               00 
  48 Close            5    0    0               00 
  49 ResultRow        6    1    0               00 output=r[6]
  50 Halt             0    0    0               00 
  51 Transaction      0    0    5 0             01 usesStmtJournal=1
  52 Transaction      2    1    5 0             01 usesStmtJournal=1
  53 TableLock        0    5    0 c             00 iDb=0 root=5 write=0
  54 TableLock        2    4    1 c             00 iDb=2 root=4 write=1
  55 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.'x' SELECT * FROM main.'x';]
VDBE Program Listing:
   0 Init             0   52    0               00 Start at 52
   1 InitCoroutine    5   12    2               00 
   2 OpenRead         0    9    0 2             00 root=9 iDb=0; x
   3 Explain          0    0    0 SCAN TABLE x  00 
   4 Rewind           0   10    0               00 
   5 Column           0    0    2               00 r[2]=x.t3
   6 Column           0    1    3               00 r[3]=x.tr1
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Yield            5    0    0               00 
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 EndCoroutine     5    0    0               00 
  12 Integer          0    6    0               00 r[6]=0
  13 OpenWrite        1    7    2 3             00 root=7 iDb=2; x
  14 OpenWrite        2    9    2 k(2,,)        00 root=9 iDb=2; sqlite_autoindex_x_2
  15 OpenWrite        3    8    2 k(2,,)        00 root=8 iDb=2; sqlite_autoindex_x_1
  16 Yield            5   47    0               00 
  17 Copy             4    1    0               00 r[1]=r[4]
  18 NotNull          1   20    0               00 if r[1]!=NULL goto 20
  19 NewRowid         1    1    0               00 r[1]=rowid
  20 MustBeInt        1    0    0               00 
  21 SoftNull         4    0    0               00 r[4]=NULL
  22 NotExists        1   24    1               00 intkey=r[1]
  23 Halt          1555    3    0 x.tr2         02 
  24 Affinity         2    3    0 AAD           00 affinity(r[2..4])
  25 SCopy            3    9    0               00 r[9]=r[3]; tr1
  26 IntCopy          1   10    0               00 r[10]=r[1]; rowid
  27 MakeRecord       9    2    7               00 r[7]=mkrec(r[9..10]); for sqlite_autoindex_x_2
  28 NoConflict       2   30    9 1             00 key=r[9]
  29 Goto             0   46    0               00 
  30 SCopy            2    9    0               00 r[9]=r[2]; t3
  31 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_x_1
  32 NoConflict       3   41    9 1             00 key=r[9]
  33 IdxRowid         3   12    0               00 r[12]=rowid
  34 NotExists        1   41   12 1             00 intkey=r[12]
  35 Column           1    1   13               00 r[13]=x.tr1
  36 Rowid            1   14    0               00 r[14]=rowid
  37 IdxDelete        2   13    2               00 key=r[13..14]
  38 Column           1    0   13               00 r[13]=x.t3
  39 IdxDelete        3   13    2               00 key=r[13..14]
  40 Delete           1    0    0 x             00 
  41 IdxInsert        2    7    0               00 key=r[7]
  42 IdxInsert        3    8    0               00 key=r[8]
  43 MakeRecord       2    3   15               00 r[15]=mkrec(r[2..4])
  44 Insert           1   15    1 x             03 intkey=r[1] data=r[15]
  45 AddImm           6    1    0               00 r[6]=r[6]+1
  46 Goto             0   16    0               00 
  47 Close            1    0    0               00 
  48 Close            2    0    0               00 
  49 Close            3    0    0               00 
  50 ResultRow        6    1    0               00 output=r[6]
  51 Halt             0    0    0               00 
  52 Transaction      0    0    5 0             01 usesStmtJournal=0
  53 Transaction      2    1    5 0             01 usesStmtJournal=0
  54 TableLock        0    9    0 x             00 iDb=0 root=9 write=0
  55 TableLock        2    7    1 x             00 iDb=2 root=7 write=1
  56 Goto             0    1    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
   6 Copy             1    7    0               00 r[7]=r[1]
   7 Function0        0    7    6 quote(1)      01 r[6]=func(r[7])
   8 Concat           6    5    4               00 r[4]=r[5]+r[6]
   9 Concat           8    4    3               00 r[3]=r[4]+r[8]
  10 ResultRow        3    1    0               00 output=r[3]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      2    0    5 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
  18 String8          0    8    0 ;             00 r[8]=';'
  19 Goto             0    1    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Program Listing:
   0 Init             0   18    0               00 Start at 18
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
   6 Copy             1    9    0               00 r[9]=r[1]
   7 Function0        0    9    8 quote(1)      01 r[8]=func(r[9])
   8 Concat           8    7    6               00 r[6]=r[7]+r[8]
   9 Concat          10    6    5               00 r[5]=r[6]+r[10]
  10 Copy             1    9    0               00 r[9]=r[1]
  11 Function0        0    9    6 quote(1)      01 r[6]=func(r[9])
  12 Concat           6    5    4               00 r[4]=r[5]+r[6]
  13 Concat          11    4    3               00 r[3]=r[4]+r[11]
  14 ResultRow        3    1    0               00 output=r[3]
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
  18 Transaction      2    0    5 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
  23 String8          0   11    0 ;             00 r[11]=';'
  24 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Program Listing:
   0 Init             0   31    0               00 Start at 31
   1 InitCoroutine    7   20    2               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
  11 Copy             8    2    0               00 r[2]=r[8]
  12 Column           0    1    3               00 r[3]=sqlite_master.name
  13 Column           0    2    4               00 r[4]=sqlite_master.tbl_name
  14 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  15 Column           0    4    6               00 r[6]=sqlite_master.sql
  16 Yield            7    0    0               00 
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
  20 Integer          0   14    0               00 r[14]=0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
  23 NewRowid         1    1    0               00 r[1]=rowid
  24 MakeRecord       2    5   15 BBBDB         00 r[15]=mkrec(r[2..6])
  25 Insert           1   15    1 sqlite_master 1B intkey=r[1] data=r[15]
  26 AddImm          14    1    0               00 r[14]=r[14]+1
  27 Goto             0   22    0               00 
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
  30 Halt             0    0    0               00 
  31 Transaction      0    0    5 0             01 usesStmtJournal=0
  32 Transaction      2    1    5 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
  36 String8          0   11    0 trigger       00 r[11]='trigger'
  37 String8          0   12    0 table         00 r[12]='table'
  38 Integer          0   13    0               00 r[13]=0
  39 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    6 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
SQL: [;SELECT count(*), sum(a) FROM t1;]
VDBE Program Listing:
   0 Init             0   15    0               00 Start at 15
   1 Null             0    1    3               00 r[1..3]=NULL
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    9    0               00 
   5 AggStep0         0    0    1 count(0)      00 accum=r[1] step(r[0])
   6 Column           0    0    4               00 r[4]=t1.a
   7 AggStep0         0    4    2 sum(1)        01 accum=r[2] step(r[4])
   8 Next             0    5    0               01 
   9 Close            0    0    0               00 
  10 AggFinal         1    0    0 count(0)      00 accum=r[1] N=0
  11 AggFinal         2    1    0 sum(1)        00 accum=r[2] N=1
  12 Copy             1    5    1               00 r[5..6]=r[1..2]
  13 ResultRow        5    2    0               00 output=r[5..6]
  14 Halt             0    0    0               00 
  15 Transaction      0    0    6 1             01 usesStmtJournal=0
  16 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  17 Goto             0    1    0               00 
SQL: [;UPDATE c SET abc=9223372036854775806, abc=100000;]
VDBE Program Listing:
   0 Init             0   69    0               00 Start at 69
   1 Null             0   13    0               00 r[13]=NULL
   2 OpenEphemeral    4    1    0 k(1,)         00 nColumn=1
   3 OpenRead         5    6    0 k(2,,)        00 root=6 iDb=0; sqlite_autoindex_c_2
   4 Explain          0    0    0 SCAN TABLE c USING COVERING INDEX sqlite_autoindex_c_2 00 
   5 Rewind           5   10   15 0             00 
   6 Column           5    1   13               00 r[13]=c.abc
   7 MakeRecord      13    1   14 D             00 r[14]=mkrec(r[13])
   8 IdxInsert        4   14    0               00 key=r[14]
   9 Next             5    6    0               01 
  10 Close            5    0    0               00 
  11 Integer          0   15    0               00 r[15]=0
  12 OpenWrite        1    6    0 k(2,,)        00 root=6 iDb=0; sqlite_autoindex_c_2
  13 OpenWrite        2    5    0 k(2,,)        00 root=5 iDb=0; sqlite_autoindex_c_1
  14 OpenWrite        3    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_c_3
  15 Rewind           4   64    0               00 
  16 RowKey           4   14    0               00 r[14]=key
  17 NotFound         3   63   14 0             00 key=r[14]
  18 Null             0    6    0               00 r[6]=NULL
  19 Null             0    7    0               00 r[7]=NULL
  20 Column           3    0    8               00 r[8]=c.abc
  21 Column           3    1   10               00 r[10]=c.t2
  22 Column           3    2   11               00 r[11]=c.w
  23 Integer       100000   12    0               00 r[12]=100000
  24 HaltIfNull    1299    2   12 c.abc         01 if r[12]=null halt
  25 Affinity        10    3    0 AAD           00 affinity(r[10..12])
  26 SCopy           11   16    0               00 r[16]=r[11]; w
  27 SCopy           12   17    0               00 r[17]=r[12]; abc
  28 MakeRecord      16    2    1               00 r[1]=mkrec(r[16..17]); for sqlite_autoindex_c_2
  29 NoConflict       1   33   16 1             00 key=r[16]
  30 Column           1    1   18               00 r[18]=c.abc
  31 Eq               8   33   18 (BINARY)      90 if r[8]==r[18] goto 33
  32 Halt          2067    3    0 c.w           02 
  33 SCopy           10   16    0               00 r[16]=r[10]; t2
  34 SCopy           12   17    0               00 r[17]=r[12]; abc
  35 MakeRecord      16    2    2               00 r[2]=mkrec(r[16..17]); for sqlite_autoindex_c_1
  36 NoConflict       2   40   16 1             00 key=r[16]
  37 Column           2    1   19               00 r[19]=c.abc
  38 Eq               8   40   19 (BINARY)      90 if r[8]==r[19] goto 40
  39 Goto             0   63    0               00 
  40 SCopy           12   20    0               00 r[20]=r[12]; abc
  41 SCopy           10   21    0               00 r[21]=r[10]; t2
  42 SCopy           11   22    0               00 r[22]=r[11]; w
  43 MakeRecord      20    3    3               00 r[3]=mkrec(r[20..22]); for sqlite_autoindex_c_3
  44 NoConflict       3   52   20 1             00 key=r[20]
  45 Eq               8   52   20 (BINARY)      90 if r[8]==r[20] goto 52
  46 Column           3    2   16               00 r[16]=c.w
  47 Column           3    0   17               00 r[17]=c.abc
  48 IdxDelete        1   16    2               00 key=r[16..17]
  49 Column           3    1   16               00 r[16]=c.t2
  50 IdxDelete        2   16    2               00 key=r[16..17]
  51 Delete           3    0    0 c             00 
  52 NotFound         3   59   14 0             00 key=r[14]
  53 Column           3    2   20               00 r[20]=c.w
  54 Column           3    0   21               00 r[21]=c.abc
  55 IdxDelete        1   20    2               00 key=r[20..21]
  56 Column           3    1   20               00 r[20]=c.t2
  57 IdxDelete        2   20    2               00 key=r[20..21]
  58 Delete           3    0    0               00 
  59 IdxInsert        1    1    0               00 key=r[1]
  60 IdxInsert        2    2    0               00 key=r[2]
  61 IdxInsert        3    3    0               01 key=r[3]
  62 AddImm          15    1    0               00 r[15]=r[15]+1
  63 Next             4   16    0               00 
  64 Close            1    0    0               00 
  65 Close            2    0    0               00 
  66 Close            3    0    0               00 
  67 ResultRow       15    1    0               00 output=r[15]
  68 Halt             0    0    0               00 
  69 Transaction      0    1    6 1             01 usesStmtJournal=1
  70 TableLock        0    4    1 c             00 iDb=0 root=4 write=1
  71 Goto             0    1    0               00 
SQL: [;
;VACUUM;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [ATTACH ':memory:' AS vacuum_db;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0 :memory:      00 r[1]=':memory:'
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
   3 Null             0    3    0               00 r[3]=NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Program Listing:
   0 Init             0   19    0               00 Start at 19
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
   6 Column           0    1    3               00 r[3]=sqlite_master.name
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
  10 Integer          1    5    0               00 r[5]=1
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
  15 ResultRow        7    1    0               00 output=r[7]
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
  19 Transaction      0    0    6 1             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
  23 Integer          0    6    0               00 r[6]=0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
  25 Integer         14   10    0               00 r[10]=14
  26 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.t1(a PRIMARY KEY DESC)]
VDBE Program Listing:
   0 Init             0   46    0               00 Start at 46
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 Integer          0   11    0               00 r[11]=0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
  16 String8          0    6    0 index         00 r[6]='index'
  17 String8          0    7    0 sqlite_autoindex_t1_1 00 r[7]='sqlite_autoindex_t1_1'
  18 String8          0    8    0 t1            00 r[8]='t1'
  19 Copy             4    9    0               00 r[9]=r[4]
  20 Null             0   10    0               00 r[10]=NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
  23 AddImm          11    1    0               00 r[11]=r[11]+1
  24 Close            1    0    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
  27 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
  30 NotExists        2   32    1               00 intkey=r[1]; pk
  31 Rowid            2   14    0               00 r[14]=rowid
  32 Integer          0   21    0               00 r[21]=0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
  34 String8          0   15    0 table         00 r[15]='table'
  35 String8          0   16    0 t1            00 r[16]='t1'
  36 String8          0   17    0 t1            00 r[17]='t1'
  37 Copy             2   18    0               00 r[18]=r[2]
  38 String8          0   19    0 CREATE TABLE t1(a PRIMARY KEY DESC) 00 r[19]='CREATE TABLE t1(a PRIMARY KEY DESC)'
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
  41 AddImm          21    1    0               00 r[21]=r[21]+1
  42 Close            2    0    0               00 
  43 SetCookie        2    1    1               00 
  44 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
  45 Halt             0    0    0               00 
  46 Transaction      2    1    0 0             01 usesStmtJournal=0
  47 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  48 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.c(
    t2 UNIQUE ON CONFLICT IGNORE,
    w UNIQUE ON CONFLICT FAIL,
    abc INT PRIMARY KEY ON CONFLICT REPLACE
  ) WITHOUT ROWID]
VDBE Program Listing:
   0 Init             0   74    0               00 Start at 74
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateIndex      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 Integer          0   11    0               00 r[11]=0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
  16 String8          0    6    0 index         00 r[6]='index'
  17 String8          0    7    0 sqlite_autoindex_c_1 00 r[7]='sqlite_autoindex_c_1'
  18 String8          0    8    0 c             00 r[8]='c'
  19 Copy             4    9    0               00 r[9]=r[4]
  20 Null             0   10    0               00 r[10]=NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
  23 AddImm          11    1    0               00 r[11]=r[11]+1
  24 Close            1    0    0               00 
  25 Noop             0   39    0               00 
  26 CreateIndex      2   13    0               00 r[13]=root iDb=2
  27 Integer          0   20    0               00 r[20]=0
  28 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  29 NewRowid         2   14    0               00 r[14]=rowid
  30 String8          0   15    0 index         00 r[15]='index'
  31 String8          0   16    0 sqlite_autoindex_c_2 00 r[16]='sqlite_autoindex_c_2'
  32 String8          0   17    0 c             00 r[17]='c'
  33 Copy            13   18    0               00 r[18]=r[13]
  34 Null             0   19    0               00 r[19]=NULL
  35 MakeRecord      15    5   21 BBBDB         00 r[21]=mkrec(r[15..19])
  36 Insert           2   21   14               18 intkey=r[14] data=r[21]
  37 AddImm          20    1    0               00 r[20]=r[20]+1
  38 Close            2    0    0               00 
  39 Goto             0   53    0               00 
  40 CreateIndex      2   22    0               00 r[22]=root iDb=2
  41 Integer          0   29    0               00 r[29]=0
  42 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  43 NewRowid         3   23    0               00 r[23]=rowid
  44 String8          0   24    0 index         00 r[24]='index'
  45 String8          0   25    0 sqlite_autoindex_c_3 00 r[25]='sqlite_autoindex_c_3'
  46 String8          0   26    0 c             00 r[26]='c'
  47 Copy            22   27    0               00 r[27]=r[22]
  48 Null             0   28    0               00 r[28]=NULL
  49 MakeRecord      24    5   30 BBBDB         00 r[30]=mkrec(r[24..28])
  50 Insert           3   30   23               18 intkey=r[23] data=r[30]
  51 AddImm          29    1    0               00 r[29]=r[29]+1
  52 Close            3    0    0               00 
  53 Close            0    0    0               00 
  54 Null             0   31   32               00 r[31..32]=NULL
  55 OpenWrite        4    1    2 5             00 root=1 iDb=2; sqlite_master
  56 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  57 MustBeInt        1   60    0               00 
  58 NotExists        4   60    1               00 intkey=r[1]; pk
  59 Rowid            4   32    0               00 r[32]=rowid
  60 Integer          0   39    0               00 r[39]=0
  61 IsNull          32   70    0               00 if r[32]==NULL goto 70
  62 String8          0   33    0 table         00 r[33]='table'
  63 String8          0   34    0 c             00 r[34]='c'
  64 String8          0   35    0 c             00 r[35]='c'
  65 Copy             2   36    0               00 r[36]=r[2]
  66 String8          0   37    0 CREATE TABLE c(
    t2 UNIQUE ON CONFLICT IGNORE,
    w UNIQUE ON CONFLICT FAIL,
    abc INT PRIMARY KEY ON CONFLICT REPLACE
  ) WITHOUT ROWID 00 r[37]='CREATE TABLE c(
    t2 UNIQUE ON CONFLICT IGNORE,
    w UNIQUE ON CONFLICT FAIL,
    abc INT
  67 MakeRecord      33    5   38 BBBDB         00 r[38]=mkrec(r[33..37])
  68 Insert           4   38   32               00 intkey=r[32] data=r[38]
  69 AddImm          39    1    0               00 r[39]=r[39]+1
  70 Close            4    0    0               00 
  71 SetCookie        2    1    2               00 
  72 ParseSchema      2    0    0 tbl_name='c' AND type!='trigger' 00 
  73 Halt             0    0    0               00 
  74 Transaction      2    1    1 0             01 usesStmtJournal=0
  75 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  76 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 c             00 r[2]='c'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [CREATE TABLE vacuum_db.x(
    t3 UNIQUE ON CONFLICT REPLACE, 
    tr1 UNIQUE ON CONFLICT IGNORE,
    tr2 INTEGER PRIMARY KEY ON CONFLICT FAIL
  )]
VDBE Program Listing:
   0 Init             0   60    0               00 Start at 60
   1 ReadCookie       2    3    2               00 
   2 If               3    5    0               00 
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateTable      2    2    0               00 r[2]=root iDb=2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
   8 Blob             6    3    0              00 r[3]= (len=6)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
  10 Close            0    0    0               00 
  11 Noop             0   25    0               00 
  12 CreateIndex      2    4    0               00 r[4]=root iDb=2
  13 Integer          0   11    0               00 r[11]=0
  14 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  15 NewRowid         1    5    0               00 r[5]=rowid
  16 String8          0    6    0 index         00 r[6]='index'
  17 String8          0    7    0 sqlite_autoindex_x_1 00 r[7]='sqlite_autoindex_x_1'
  18 String8          0    8    0 x             00 r[8]='x'
  19 Copy             4    9    0               00 r[9]=r[4]
  20 Null             0   10    0               00 r[10]=NULL
  21 MakeRecord       6    5   12 BBBDB         00 r[12]=mkrec(r[6..10])
  22 Insert           1   12    5               18 intkey=r[5] data=r[12]
  23 AddImm          11    1    0               00 r[11]=r[11]+1
  24 Close            1    0    0               00 
  25 Noop             0   39    0               00 
  26 CreateIndex      2   13    0               00 r[13]=root iDb=2
  27 Integer          0   20    0               00 r[20]=0
  28 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  29 NewRowid         2   14    0               00 r[14]=rowid
  30 String8          0   15    0 index         00 r[15]='index'
  31 String8          0   16    0 sqlite_autoindex_x_2 00 r[16]='sqlite_autoindex_x_2'
  32 String8          0   17    0 x             00 r[17]='x'
  33 Copy            13   18    0               00 r[18]=r[13]
  34 Null             0   19    0               00 r[19]=NULL
  35 MakeRecord      15    5   21 BBBDB         00 r[21]=mkrec(r[15..19])
  36 Insert           2   21   14               18 intkey=r[14] data=r[21]
  37 AddImm          20    1    0               00 r[20]=r[20]+1
  38 Close            2    0    0               00 
  39 Close            0    0    0               00 
  40 Null             0   22   23               00 r[22..23]=NULL
  41 OpenWrite        3    1    2 5             00 root=1 iDb=2; sqlite_master
  42 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  43 MustBeInt        1   46    0               00 
  44 NotExists        3   46    1               00 intkey=r[1]; pk
  45 Rowid            3   23    0               00 r[23]=rowid
  46 Integer          0   30    0               00 r[30]=0
  47 IsNull          23   56    0               00 if r[23]==NULL goto 56
  48 String8          0   24    0 table         00 r[24]='table'
  49 String8          0   25    0 x             00 r[25]='x'
  50 String8          0   26    0 x             00 r[26]='x'
  51 Copy             2   27    0               00 r[27]=r[2]
  52 String8          0   28    0 CREATE TABLE x(
    t3 UNIQUE ON CONFLICT REPLACE, 
    tr1 UNIQUE ON CONFLICT IGNORE,
    tr2 INTEGER PRIMARY KEY ON CONFLICT FAIL
  ) 00 r[28]='CREATE TABLE x(
    t3 UNIQUE ON CONFLICT REPLACE, 
    tr1 UNIQUE ON CONFLICT IGNORE,
    t
  53 MakeRecord      24    5   29 BBBDB         00 r[29]=mkrec(r[24..28])
  54 Insert           3   29   23               00 intkey=r[23] data=r[29]
  55 AddImm          30    1    0               00 r[30]=r[30]+1
  56 Close            3    0    0               00 
  57 SetCookie        2    1    3               00 
  58 ParseSchema      2    0    0 tbl_name='x' AND type!='trigger' 00 
  59 Halt             0    0    0               00 
  60 Transaction      2    1    2 0             01 usesStmtJournal=0
  61 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  62 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
   9 Column           0    1    5               00 r[5]=sqlite_master.name
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    3 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
  19 String8          0    4    0 trigger       00 r[4]='trigger'
  20 Goto             0    1    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
   6 IfNot            1   11    1               00 
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
  10 ResultRow        4    1    0               00 output=r[4]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0    6 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
  18 Integer         14    7    0               00 r[7]=14
  19 Goto             0    1    0               00 
SQL: [CREATE INDEX vacuum_db.b ON t1(a*a)]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
   3 Integer          0    8    0               00 r[8]=0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
   6 String8          0    3    0 index         00 r[3]='index'
   7 String8          0    4    0 b             00 r[4]='b'
   8 String8          0    5    0 t1            00 r[5]='t1'
   9 Copy             1    6    0               00 r[6]=r[1]
  10 String8          0    7    0 CREATE INDEX b ON t1(a*a) 00 r[7]='CREATE INDEX b ON t1(a*a)'
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
  13 AddImm           8    1    0               00 r[8]=r[8]+1
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  17 Rewind           1   24    0               00 
  18 Column           1    0   13               00 r[13]=t1.a
  19 Multiply        13   13   11               00 r[11]=r[13]*r[13]
  20 Rowid            1   12    0               00 r[12]=rowid
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
  22 SorterInsert     3   10    0               00 
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    4               00 
  34 ParseSchema      2    0    0 name='b' AND type='index' 00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      2    1    3 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
   9 Copy             1    5    0               00 r[5]=r[1]
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    4 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 b             00 r[2]='b'
  19 String8          0    4    0 index         00 r[4]='index'
  20 Goto             0    1    0               00 
SQL: [CREATE INDEX vacuum_db.r1 ON t1 (lower(a))]
VDBE Program Listing:
   0 Init             0   37    0               00 Start at 37
   1 Noop             0   36    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
   3 Integer          0    8    0               00 r[8]=0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
   6 String8          0    3    0 index         00 r[3]='index'
   7 String8          0    4    0 r1            00 r[4]='r1'
   8 String8          0    5    0 t1            00 r[5]='t1'
   9 Copy             1    6    0               00 r[6]=r[1]
  10 String8          0    7    0 CREATE INDEX r1 ON t1 (lower(a)) 00 r[7]='CREATE INDEX r1 ON t1 (lower(a))'
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
  13 AddImm           8    1    0               00 r[8]=r[8]+1
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    2 1             00 root=2 iDb=2; t1
  17 Rewind           1   24    0               00 
  18 Column           1    0   13               00 r[13]=t1.a
  19 Function0        0   13   11 lower(1)      01 r[11]=func(r[13])
  20 Rowid            1   12    0               00 r[12]=rowid
  21 MakeRecord      11    2   10               00 r[10]=mkrec(r[11..12])
  22 SorterInsert     3   10    0               00 
  23 Next             1   18    0               00 
  24 OpenWrite        2    1    2 k(2,,)        11 root=1 iDb=2
  25 SorterSort       3   30    0               00 
  26 SorterData       3   10    2               00 r[10]=data
  27 Last             2    0   -1               00 
  28 IdxInsert        2   10    0               10 key=r[10]
  29 SorterNext       3   26    0               00 
  30 Close            1    0    0               00 
  31 Close            2    0    0               00 
  32 Close            3    0    0               00 
  33 SetCookie        2    1    5               00 
  34 ParseSchema      2    0    0 name='r1' AND type='index' 00 
  35 Expire           0    0    0               00 
  36 Halt             0    0    0               00 
  37 Transaction      2    1    4 0             01 usesStmtJournal=0
  38 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  39 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  40 Goto             0    1    0               00 
VDBE Program Listing:
   0 Init             0   16    0               00 Start at 16
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
   7 Column           0    0    3               00 r[3]=sqlite_master.type
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
   9 Copy             1    5    0               00 r[5]=r[1]
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
  12 ResultRow        5    3    0               00 output=r[5..7]
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  16 Transaction      2    0    5 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 r1            00 r[2]='r1'
  19 String8          0    4    0 index         00 r[4]='index'
  20 Goto             0    1    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
   6 IfNot            1   11    1               00 
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
  10 ResultRow        4    1    0               00 output=r[4]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      0    0    6 1             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
  18 Integer         21    7    0               00 r[7]=21
  19 Goto             0    1    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Program Listing:
   0 Init             0   24    0               00 Start at 24
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
   6 Column           0    1    3               00 r[3]=sqlite_master.name
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
  10 Integer          1    5    0               00 r[5]=1
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
  12 Copy             3   12    0               00 r[12]=r[3]
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
  16 Copy             3   12    0               00 r[12]=r[3]
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
  20 ResultRow        7    1    0               00 output=r[7]
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
  24 Transaction      0    0    6 1             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
  28 Integer          0    6    0               00 r[6]=0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
  31 String8          0   14    0 ;             00 r[14]=';'
  32 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Program Listing:
   0 Init             0   40    0               00 Start at 40
   1 InitCoroutine    3   10    2               00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Column           0    0    2               00 r[2]=t1.a
   6 Yield            3    0    0               00 
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 EndCoroutine     3    0    0               00 
  10 Integer          0    4    0               00 r[4]=0
  11 OpenWrite        1    2    2 1             00 root=2 iDb=2; t1
  12 OpenWrite        2   11    2 k(2,,)        00 root=11 iDb=2; r1
  13 OpenWrite        3   10    2 k(2,,)        00 root=10 iDb=2; b
  14 OpenWrite        4    3    2 k(2,-,)       00 root=3 iDb=2; sqlite_autoindex_t1_1
  15 Yield            3   34    0               00 
  16 NewRowid         1    1    0               00 r[1]=rowid
  17 Copy             2   10    0               00 r[10]=r[2]
  18 Function0        0   10    8 lower(1)      01 r[8]=func(r[10]); r1 column 0
  19 IntCopy          1    9    0               00 r[9]=r[1]; rowid
  20 MakeRecord       8    2    5               00 r[5]=mkrec(r[8..9]); for r1
  21 Multiply         2    2    8               00 r[8]=r[2]*r[2]; b column 0
  22 MakeRecord       8    2    6               00 r[6]=mkrec(r[8..9]); for b
  23 SCopy            2    8    0               00 r[8]=r[2]; a
  24 MakeRecord       8    2    7               00 r[7]=mkrec(r[8..9]); for sqlite_autoindex_t1_1
  25 NoConflict       4   27    8 1             00 key=r[8]
  26 Halt          1555    2    0 t1.a          02 
  27 IdxInsert        2    5    0               10 key=r[5]
  28 IdxInsert        3    6    0               10 key=r[6]
  29 IdxInsert        4    7    0               10 key=r[7]
  30 MakeRecord       2    1   11               00 r[11]=mkrec(r[2])
  31 Insert           1   11    1 t1            1B intkey=r[1] data=r[11]
  32 AddImm           4    1    0               00 r[4]=r[4]+1
  33 Goto             0   15    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 Close            4    0    0               00 
  38 ResultRow        4    1    0               00 output=r[4]
  39 Halt             0    0    0               00 
  40 Transaction      0    0    6 1             01 usesStmtJournal=1
  41 Transaction      2    1    5 0             01 usesStmtJournal=1
  42 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  43 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  44 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.'c' SELECT * FROM main.'c';]
VDBE Program Listing:
   0 Init             0   51    0               00 Start at 51
   1 InitCoroutine    5   12    2               00 
   2 OpenRead         1    4    0 k(1,)         00 root=4 iDb=0; sqlite_autoindex_c_3
   3 Explain          0    0    0 SCAN TABLE c  00 
   4 Rewind           1   10    6 0             00 
   5 Column           1    1    2               00 r[2]=c.t2
   6 Column           1    2    3               00 r[3]=c.w
   7 Column           1    0    4               00 r[4]=c.abc
   8 Yield            5    0    0               00 
   9 Next             1    5    0               01 
  10 Close            1    0    0               00 
  11 EndCoroutine     5    0    0               00 
  12 Integer          0    6    0               00 r[6]=0
  13 OpenWrite        3    6    2 k(2,,)        00 root=6 iDb=2; sqlite_autoindex_c_2
  14 OpenWrite        4    5    2 k(2,,)        00 root=5 iDb=2; sqlite_autoindex_c_1
  15 OpenWrite        5    4    2 k(1,)         00 root=4 iDb=2; sqlite_autoindex_c_3
  16 Yield            5   46    0               00 
  17 Null             0    1    0               00 r[1]=NULL
  18 HaltIfNull    1299    2    4 c.abc         01 if r[4]=null halt
  19 Affinity         2    3    0 AAD           00 affinity(r[2..4])
  20 SCopy            3   10    0               00 r[10]=r[3]; w
  21 SCopy            4   11    0               00 r[11]=r[4]; abc
  22 MakeRecord      10    2    7               00 r[7]=mkrec(r[10..11]); for sqlite_autoindex_c_2
  23 NoConflict       3   25   10 1             00 key=r[10]
  24 Halt          2067    3    0 c.w           02 
  25 SCopy            2   10    0               00 r[10]=r[2]; t2
  26 SCopy            4   11    0               00 r[11]=r[4]; abc
  27 MakeRecord      10    2    8               00 r[8]=mkrec(r[10..11]); for sqlite_autoindex_c_1
  28 NoConflict       4   30   10 1             00 key=r[10]
  29 Goto             0   45    0               00 
  30 SCopy            4   14    0               00 r[14]=r[4]; abc
  31 SCopy            2   15    0               00 r[15]=r[2]; t2
  32 SCopy            3   16    0               00 r[16]=r[3]; w
  33 MakeRecord      14    3    9               00 r[9]=mkrec(r[14..16]); for sqlite_autoindex_c_3
  34 NoConflict       5   41   14 1             00 key=r[14]
  35 Column           5    2   10               00 r[10]=c.w
  36 Column           5    0   11               00 r[11]=c.abc
  37 IdxDelete        3   10    2               00 key=r[10..11]
  38 Column           5    1   10               00 r[10]=c.t2
  39 IdxDelete        4   10    2               00 key=r[10..11]
  40 Delete           5    0    0 c             00 
  41 IdxInsert        3    7    0               00 key=r[7]
  42 IdxInsert        4    8    0               00 key=r[8]
  43 IdxInsert        5    9    0               01 key=r[9]
  44 AddImm           6    1    0               00 r[6]=r[6]+1
  45 Goto             0   16    0               00 
  46 Close            3    0    0               00 
  47 Close            4    0    0               00 
  48 Close            5    0    0               00 
  49 ResultRow        6    1    0               00 output=r[6]
  50 Halt             0    0    0               00 
  51 Transaction      0    0    6 1             01 usesStmtJournal=1
  52 Transaction      2    1    5 0             01 usesStmtJournal=1
  53 TableLock        0    4    0 c             00 iDb=0 root=4 write=0
  54 TableLock        2    4    1 c             00 iDb=2 root=4 write=1
  55 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.'x' SELECT * FROM main.'x';]
VDBE Program Listing:
   0 Init             0   52    0               00 Start at 52
   1 InitCoroutine    5   12    2               00 
   2 OpenRead         0    7    0 2             00 root=7 iDb=0; x
   3 Explain          0    0    0 SCAN TABLE x  00 
   4 Rewind           0   10    0               00 
   5 Column           0    0    2               00 r[2]=x.t3
   6 Column           0    1    3               00 r[3]=x.tr1
   7 Rowid            0    4    0               00 r[4]=rowid
   8 Yield            5    0    0               00 
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 EndCoroutine     5    0    0               00 
  12 Integer          0    6    0               00 r[6]=0
  13 OpenWrite        1    7    2 3             00 root=7 iDb=2; x
  14 OpenWrite        2    9    2 k(2,,)        00 root=9 iDb=2; sqlite_autoindex_x_2
  15 OpenWrite        3    8    2 k(2,,)        00 root=8 iDb=2; sqlite_autoindex_x_1
  16 Yield            5   47    0               00 
  17 Copy             4    1    0               00 r[1]=r[4]
  18 NotNull          1   20    0               00 if r[1]!=NULL goto 20
  19 NewRowid         1    1    0               00 r[1]=rowid
  20 MustBeInt        1    0    0               00 
  21 SoftNull         4    0    0               00 r[4]=NULL
  22 NotExists        1   24    1               00 intkey=r[1]
  23 Halt          1555    3    0 x.tr2         02 
  24 Affinity         2    3    0 AAD           00 affinity(r[2..4])
  25 SCopy            3    9    0               00 r[9]=r[3]; tr1
  26 IntCopy          1   10    0               00 r[10]=r[1]; rowid
  27 MakeRecord       9    2    7               00 r[7]=mkrec(r[9..10]); for sqlite_autoindex_x_2
  28 NoConflict       2   30    9 1             00 key=r[9]
  29 Goto             0   46    0               00 
  30 SCopy            2    9    0               00 r[9]=r[2]; t3
  31 MakeRecord       9    2    8               00 r[8]=mkrec(r[9..10]); for sqlite_autoindex_x_1
  32 NoConflict       3   41    9 1             00 key=r[9]
  33 IdxRowid         3   12    0               00 r[12]=rowid
  34 NotExists        1   41   12 1             00 intkey=r[12]
  35 Column           1    1   13               00 r[13]=x.tr1
  36 Rowid            1   14    0               00 r[14]=rowid
  37 IdxDelete        2   13    2               00 key=r[13..14]
  38 Column           1    0   13               00 r[13]=x.t3
  39 IdxDelete        3   13    2               00 key=r[13..14]
  40 Delete           1    0    0 x             00 
  41 IdxInsert        2    7    0               00 key=r[7]
  42 IdxInsert        3    8    0               00 key=r[8]
  43 MakeRecord       2    3   15               00 r[15]=mkrec(r[2..4])
  44 Insert           1   15    1 x             03 intkey=r[1] data=r[15]
  45 AddImm           6    1    0               00 r[6]=r[6]+1
  46 Goto             0   16    0               00 
  47 Close            1    0    0               00 
  48 Close            2    0    0               00 
  49 Close            3    0    0               00 
  50 ResultRow        6    1    0               00 output=r[6]
  51 Halt             0    0    0               00 
  52 Transaction      0    0    6 1             01 usesStmtJournal=0
  53 Transaction      2    1    5 0             01 usesStmtJournal=0
  54 TableLock        0    7    0 x             00 iDb=0 root=7 write=0
  55 TableLock        2    7    1 x             00 iDb=2 root=7 write=1
  56 Goto             0    1    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Program Listing:
   0 Init             0   14    0               00 Start at 14
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
   6 Copy             1    7    0               00 r[7]=r[1]
   7 Function0        0    7    6 quote(1)      01 r[6]=func(r[7])
   8 Concat           6    5    4               00 r[4]=r[5]+r[6]
   9 Concat           8    4    3               00 r[3]=r[4]+r[8]
  10 ResultRow        3    1    0               00 output=r[3]
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
  14 Transaction      2    0    5 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
  18 String8          0    8    0 ;             00 r[8]=';'
  19 Goto             0    1    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Program Listing:
   0 Init             0   18    0               00 Start at 18
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
   6 Copy             1    9    0               00 r[9]=r[1]
   7 Function0        0    9    8 quote(1)      01 r[8]=func(r[9])
   8 Concat           8    7    6               00 r[6]=r[7]+r[8]
   9 Concat          10    6    5               00 r[5]=r[6]+r[10]
  10 Copy             1    9    0               00 r[9]=r[1]
  11 Function0        0    9    6 quote(1)      01 r[6]=func(r[9])
  12 Concat           6    5    4               00 r[4]=r[5]+r[6]
  13 Concat          11    4    3               00 r[3]=r[4]+r[11]
  14 ResultRow        3    1    0               00 output=r[3]
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
  18 Transaction      2    0    5 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
  23 String8          0   11    0 ;             00 r[11]=';'
  24 Goto             0    1    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Program Listing:
   0 Init             0   31    0               00 Start at 31
   1 InitCoroutine    7   20    2               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
  11 Copy             8    2    0               00 r[2]=r[8]
  12 Column           0    1    3               00 r[3]=sqlite_master.name
  13 Column           0    2    4               00 r[4]=sqlite_master.tbl_name
  14 Column           0    3    5               00 r[5]=sqlite_master.rootpage
  15 Column           0    4    6               00 r[6]=sqlite_master.sql
  16 Yield            7    0    0               00 
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
  20 Integer          0   14    0               00 r[14]=0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
  23 NewRowid         1    1    0               00 r[1]=rowid
  24 MakeRecord       2    5   15 BBBDB         00 r[15]=mkrec(r[2..6])
  25 Insert           1   15    1 sqlite_master 1B intkey=r[1] data=r[15]
  26 AddImm          14    1    0               00 r[14]=r[14]+1
  27 Goto             0   22    0               00 
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
  30 Halt             0    0    0               00 
  31 Transaction      0    0    6 1             01 usesStmtJournal=0
  32 Transaction      2    1    5 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
  36 String8          0   11    0 trigger       00 r[11]='trigger'
  37 String8          0   12    0 table         00 r[12]='table'
  38 Integer          0   13    0               00 r[13]=0
  39 Goto             0    1    0               00 
SQL: [;
;PRAGMA vdbe_trace=off;]
VDBE Program Listing:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Program Listing:
   0 Init             0   12    0               00 Start at 12
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
   8 ResultRow        1    3    0               00 output=r[1..3]
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
  12 Transaction      0    0    7 2             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
SQL: [;UPDATE OR REPLACE t1 SET a=(SELECT a FROM t1 WHERE a=t1.a);]
VDBE Program Listing:
   0 Init             0   73    0               00 Start at 73
   1 Null             0    4    5               00 r[4..5]=NULL
   2 OpenRead         0    2    0 0             00 root=2 iDb=0; t1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    5    0               00 r[5]=rowid
   6 RowSetAdd        4    5    0               00 rowset(4)=r[5]
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    7    0               00 r[7]=0
  10 OpenWrite        0    2    0 1             00 root=2 iDb=0; t1
  11 OpenWrite        1   11    0 k(2,,)        00 root=11 iDb=0; r1
  12 OpenWrite        2   10    0 k(2,,)        00 root=10 iDb=0; b
  13 OpenWrite        3    3    0 k(2,-,)       00 root=3 iDb=0; sqlite_autoindex_t1_1
  14 RowSetRead       4   67    5               00 r[5]=rowset(4)
  15 NotExists        0   14    5               00 intkey=r[5]
  16 Once             0   28    0               00 
  17 Null             0    8    0               00 r[8]=NULL; Init subquery result
  18 Integer          1    9    0               00 r[9]=1; LIMIT counter
  19 OpenRead         4    2    0 1             00 root=2 iDb=0; t1
  20 Explain          0    0    0 SCAN TABLE t1 00 
  21 Rewind           4   27    0               00 
  22 Column           4    0   10               00 r[10]=t1.a
  23 Ne              10   26   10 (BINARY)      51 if r[10]!=r[10] goto 26
  24 Copy            10    8    0               00 r[8]=r[10]
  25 DecrJumpZero     9   27    0               00 if (--r[9])==0 goto 27
  26 Next             4   22    0               01 
  27 Close            4    0    0               00 
  28 SCopy            8    6    0               00 r[6]=r[8]
  29 Copy             6   14    0               00 r[14]=r[6]
  30 Function0        0   14   12 lower(1)      01 r[12]=func(r[14]); r1 column 0
  31 IntCopy          5   13    0               00 r[13]=r[5]; rowid
  32 MakeRecord      12    2    1               00 r[1]=mkrec(r[12..13]); for r1
  33 Multiply         6    6   12               00 r[12]=r[6]*r[6]; b column 0
  34 MakeRecord      12    2    2               00 r[2]=mkrec(r[12..13]); for b
  35 SCopy            6   12    0               00 r[12]=r[6]; a
  36 MakeRecord      12    2    3               00 r[3]=mkrec(r[12..13]); for sqlite_autoindex_t1_1
  37 NoConflict       3   51   12 1             00 key=r[12]
  38 IdxRowid         3   15    0               00 r[15]=rowid
  39 Eq              15   51    5               90 if r[15]==r[5] goto 51
  40 NotExists        0   51   15 1             00 intkey=r[15]
  41 Column           0    0   18               00 r[18]=t1.a
  42 Function0        0   18   16 lower(1)      01 r[16]=func(r[18])
  43 Rowid            0   17    0               00 r[17]=rowid
  44 IdxDelete        1   16    2               00 key=r[16..17]
  45 Column           0    0   11               00 r[11]=t1.a
  46 Multiply        11   11   16               00 r[16]=r[11]*r[11]
  47 IdxDelete        2   16    2               00 key=r[16..17]
  48 Column           0    0   16               00 r[16]=t1.a
  49 IdxDelete        3   16    2               00 key=r[16..17]
  50 Delete           0    0    0 t1            00 
  51 NotExists        0   60    5               00 intkey=r[5]
  52 Copy            11   20    0               00 r[20]=r[11]
  53 Function0        0   20   16 lower(1)      01 r[16]=func(r[20])
  54 Rowid            0   17    0               00 r[17]=rowid
  55 IdxDelete        1   16    2               00 key=r[16..17]
  56 Multiply        11   11   16               00 r[16]=r[11]*r[11]
  57 IdxDelete        2   16    2               00 key=r[16..17]
  58 Column           0    0   16               00 r[16]=t1.a
  59 IdxDelete        3   16    2               00 key=r[16..17]
  60 IdxInsert        1    1    0               00 key=r[1]
  61 IdxInsert        2    2    0               00 key=r[2]
  62 IdxInsert        3    3    0               00 key=r[3]
  63 MakeRecord       6    1   19               00 r[19]=mkrec(r[6])
  64 Insert           0   19    5 t1            05 intkey=r[5] data=r[19]
  65 AddImm           7    1    0               00 r[7]=r[7]+1
  66 Goto             0   14    0               00 
  67 Close            1    0    0               00 
  68 Close            2    0    0               00 
  69 Close            3    0    0               00 
  70 Close            0    0    0               00 
  71 ResultRow        7    1    0               00 output=r[7]
  72 Halt             0    0    0               00 
  73 Transaction      0    1    7 2             01 usesStmtJournal=0
  74 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  75 Goto             0    1    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f392b923859 in __GI_abort () at abort.c:79
#2  0x00007f392b923729 in __assert_fail_base (fmt=0x7f392bab9588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x20a438 "memIsValid(pCtx->argv[i])", file=0x222c23 "sqlite3.c", line=78348, function=<optimized out>)
    at assert.c:92
#3  0x00007f392b934fd6 in __GI___assert_fail (assertion=0x20a438 "memIsValid(pCtx->argv[i])", file=0x222c23 "sqlite3.c", line=78348, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e29a2 in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:78348
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffefb54f708) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 32245] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
