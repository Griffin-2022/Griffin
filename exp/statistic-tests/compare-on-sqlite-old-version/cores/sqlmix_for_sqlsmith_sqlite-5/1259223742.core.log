GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000655,sig:06,src:025700+025460,time:25055852,execs:4264248,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL-trace: ;PRAGMA sql_trace=on;
SQL-trace: ;
;SELECT printf('|%,d|%,d|',123456,-123456);
SQL-trace: ;
;VACUUM
;
SQL-trace: ATTACH '' AS vacuum_db;
SQL-trace: PRAGMA vacuum_db.synchronous=OFF
SQL-trace: BEGIN;
SQL-trace: SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: CREATE TABLE vacuum_db."t1"(
  a INTEGER PRIMARY KEY,
  abc INT,
  t2 INT,
  w TEXT,
  b TEXT,
  c TEXT
)
SQL-trace: CREATE TABLE vacuum_db.r1(x INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t3 TEXT NOT NULL,tr1 TEXT NOT NULL DEFAULT '',tr2 TEXT NOT NULL DEFAULT '',d VARCHAR(1) NOT NULL DEFAULT 'tr1' CHECK (d IN ('1', '2', 'tr1', 'S', 'I', 'O')),t1i1 TEXT NOT NULL DEFAULT '',t2i1 INT NOT NULL DEFAULT 2,i1 INTEGER NOT NULL DEFAULT 0, t0 TEXT NOT NULL DEFAULT '')
SQL-trace: SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' 
SQL-trace: CREATE INDEX vacuum_db.a0 ON t1(a) WHERE a IS NOT NULL
SQL-trace: SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %'
SQL-trace: SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0
SQL-trace: INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';
SQL-trace: INSERT INTO vacuum_db.'r1' SELECT * FROM main.'r1';
SQL-trace: SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' 
SQL-trace: DELETE FROM vacuum_db.'sqlite_sequence';
SQL-trace: SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';
SQL-trace: INSERT INTO vacuum_db.'sqlite_sequence' SELECT * FROM main.'sqlite_sequence';
SQL-trace: INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)
SQL-trace: ;ANALYZE;
SQL-trace: SELECT tbl,idx,stat FROM 'main'.sqlite_stat1
SQL-trace: SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;
SQL-trace: ;
;DELETE FROM t1 WHERE t2 BETWEEN 8 AND 12;
SQL-trace: INSERT INTO "main"."t1"(c,a,a,a,b) VALUES(1,0,'rack',nullif('rack','rack'),'RC')
;
SQL-trace: INSERT INTO "main"."t1"(t2,b,t2,b,b) VALUES(1,0,'racket',nullif('racket','racket'),'RCAD')
;
SQL-trace: INSERT INTO "main"."t1"(c,b,abc,c,abc) VALUES(1,0,'racketeer',nullif('racketeer','racketeer'),'RCADR')
;
SQL-trace: ;
;CREATE INDEX b1 ON t1(t2);
SQL-trace: SELECT idx, stat FROM sqlite_stat1 ORDER BY idx;
SQL-trace: SELECT ALL w, c, w||c FROM t1 
;
SQL-trace: SELECT abc, abc, abc||abc FROM t1 WHERE abc!='abc' 
;
SQL-trace: ;
;DROP INDEX b1;
SQL-trace: INSERT INTO "main"."t1"(a,abc,abc,c,a) VALUES(1,0,'radiant',nullif('radiant','radiant'),'RDAMD')
;
SQL-trace: ;
;CREATE INDEX b1 ON t1(a,a);
SQL-trace: INSERT INTO "main"."t1"(a,a,a,a,a) VALUES(1,0,'radiate',nullif('radiate','radiate'),'RDADA')
;
SQL-trace: ;
;SELECT printf('(%10.6Q)','הנה מה־טוב ומה־נעים שבת אחים גם־יחד');
SQL-trace: SELECT ALL c, c, c||c FROM t1 WHERE c=='b1'
;
SQL-trace: ;SELECT * from r1;
SQL-trace: SELECT count(*), max(a) FROM t1 GROUP BY a HAVING count(*)=2
;
SQL-trace: INSERT INTO "main"."t1"(c,c,c,c,c) VALUES(1,0,'radioactive',nullif('radioactive','radioactive'),'RDACDABA')
;
SQL-trace: ;SELECT * FROM r1;
SQL-trace: INSERT INTO "main"."t1"(t2,t2,t2,t2,t2) VALUES(1,0,'radiology',nullif('radiology','radiology'),'RDLCA')
;
SQL-trace: ;SELECT * FROM t1 LEFT JOIN r1 ON (c=99) ORDER BY c;
SQL-trace: ;
;SELECT abc FROM t1 WHERE abc=3 AND 2=t2 AND abc=1 ORDER BY abc DESC;
SQL-trace: ;CREATE INDEX t0b1 ON t1(b) WHERE t2<>99;
SQL-trace: SELECT DISTINCT count(*), max(w) FROM t1 WHERE 0
           GROUP BY w HAVING count(*)=2
;
SQL-trace: INSERT INTO "main"."t1"(b,b,t2,t2,t2) VALUES(1,0,'radios',nullif('radios','radios'),'RDAC')
;
SQL-trace: INSERT INTO "main"."t1"(abc,abc,b,b,b) VALUES(1,0,'radix',nullif('radix','radix'),'RDAC')
;
SQL-trace: ;;CREATE TABLE y(z3,c0);
SQL-trace: SELECT 't0b1'||i1||'t0b1' alias FROM r1
;
SQL-trace: INSERT INTO "main"."r1"(d,d,d,d,d) VALUES(1,0,'radon',nullif('radon','radon'),'RDAM')
;
SQL-trace: ;CREATE INDEX c1 ON t1(a) WHERE a=1;
SQL-trace: ;CREATE INDEX log ON t1(b) WHERE b NOT NULL;
SQL-trace: INSERT INTO "main"."r1"(t3,t3,t3,i1,t3) VALUES(1,0,'ragged',nullif('ragged','ragged'),'RCAD')
;

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f5f07cce859 in __GI_abort () at abort.c:79
#2  0x00007f5f07cce729 in __assert_fail_base (fmt=0x7f5f07e64588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=<optimized out>) at assert.c:92
#3  0x00007f5f07cdffd6 in __GI___assert_fail (assertion=0x212bb5 "0", file=0x222c23 "sqlite3.c", line=125392, function=0x2266f4 "int termIsEquivalence(Parse *, Expr *)") at assert.c:101
#4  0x0000000000398c39 in exprAnalyze (pSrc=<optimized out>, pWC=<optimized out>, idxTerm=<optimized out>) at sqlite3.c:125392
#5  0x000000000038c95f in sqlite3WhereBegin (pParse=<optimized out>, pTabList=<optimized out>, pWhere=<optimized out>, pOrderBy=<optimized out>, pDistinctSet=0x176e660, wctrlFlags=0, iAuxArg=320) at sqlite3.c:125921
#6  0x0000000000328d02 in sqlite3Select (pParse=<optimized out>, p=<optimized out>, pDest=<optimized out>) at sqlite3.c:118028
#7  0x00000000003034ae in yy_reduce (yypParser=0x17f1be0, yyruleno=<optimized out>) at sqlite3.c:133175
#8  0x00000000002fef8e in sqlite3Parser (yyp=0x17f1be0, yymajor=<optimized out>, yyminor=..., pParse=<optimized out>) at sqlite3.c:134258
#9  0x00000000002fc544 in sqlite3RunParser (pParse=0x17582c0, 
    zSql=0x17f08c0 "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) INNER JOIN t1 USING (a) \n;SELECT * FROM y NATURAL JOIN y\n;INSERT INTO \"main\".\"r1\"(x,x,tr2,x,tr2) VALUES(1,0,'railers',nullif('railers','railers'),'RL"..., pzErrMsg=0x7fff0d9393f8) at sqlite3.c:135186
#10 0x00000000002fac4e in sqlite3Prepare (db=0x1756850, 
    zSql=0x175d06c "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) INNER JOIN t1 USING (a) \n;SELECT * FROM y NATURAL JOIN y\n;INSERT INTO \"main\".\"r1\"(x,x,tr2,x,tr2) VALUES(1,0,'railers',nullif('railers','railers'),'RL"..., nBytes=<optimized out>, saveSqlFlag=1, pReprepare=<optimized out>, ppStmt=0x7fff0d939528, pzTail=0x7fff0d939510) at sqlite3.c:112589
#11 0x00000000002fa0f4 in sqlite3LockAndPrepare (db=0x1756850, 
    zSql=0x175d06c "SELECT * FROM (SELECT a COLLATE nocase, a FROM t1) INNER JOIN t1 USING (a) \n;SELECT * FROM y NATURAL JOIN y\n;INSERT INTO \"main\".\"r1\"(x,x,tr2,x,tr2) VALUES(1,0,'railers',nullif('railers','railers'),'RL"..., nBytes=4881, saveSqlFlag=1, pOld=0x0, ppStmt=<optimized out>, pzTail=0x7fff0d939510) at sqlite3.c:112688
#12 0x000000000028f38c in sqlite3_prepare_v2 (db=0x2, zSql=0x7fff0d9389e0 "", nBytes=0, ppStmt=0x7fff0d939528, pzTail=<optimized out>) at sqlite3.c:112764
#13 0x000000000024b100 in main (argc=1, argv=0x7fff0d9396d8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 32182] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
