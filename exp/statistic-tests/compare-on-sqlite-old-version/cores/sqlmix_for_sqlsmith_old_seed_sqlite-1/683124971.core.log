GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000150,sig:06,src:008753+006217,time:20302169,execs:2888496,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT * FROM (SELECT 123), (SELECT 456) ON likely(0 OR 1) OR 0;]
VDBE Trace:
   0 Init             0   33    0               00 Start at 33
  33 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  34 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  35 Or              13   12    2               00 r[2]=(r[13] || r[12])
REG[13] =  i:1
REG[12] =  i:0
REG[2] =  i:1
  36 Goto             0    1    0               00 
   1 Integer         10    1    0               00 r[1]=10
REG[1] =  i:10
   2 Once             0   10    0               00 materialize "sqlite_sq_2018AC0"
   3 OpenEphemeral    0    1    0               00 nColumn=1
   4 If               2    6    0               00 
REG[2] =  i:1
   6 Integer        123    3    0               00 r[3]=123
REG[3] =  i:123
   7 MakeRecord       3    1    4               00 r[4]=mkrec(r[3])
REG[4] =  s3[02017B..{](8)
   8 NewRowid         0    5    0               00 r[5]=rowid
REG[5] =  i:1
   9 Insert           0    4    5               08 intkey=r[5] data=r[4]
REG[4] =  s3[02017B..{](8)
REG[5] =  i:1
  10 Return           1    0    0               00 end sqlite_sq_2018AC0
REG[1] =  i:10
  11 Integer         20    6    0               00 r[6]=20
REG[6] =  i:20
  12 Once             1   20    0               00 materialize "sqlite_sq_2018CC0"
  13 OpenEphemeral    1    1    0               00 nColumn=1
  14 If               2   16    0               00 
REG[2] =  i:1
  16 Integer        456    7    0               00 r[7]=456
REG[7] =  i:456
  17 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s4[020201C8....](8)
  18 NewRowid         1    9    0               00 r[9]=rowid
REG[9] =  i:1
  19 Insert           1    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s4[020201C8....](8)
REG[9] =  i:1
  20 Return           6    0    0               00 end sqlite_sq_2018CC0
REG[6] =  i:20
  21 If               2   23    0               00 
REG[2] =  i:1
  23 Explain          0    0    0 SCAN SUBQUERY 1 00 
  24 Rewind           0   32    0               00 
  25 Explain          0    1    1 SCAN SUBQUERY 2 00 
  26 Rewind           1   31    0               00 
  27 Column           0    0   10               00 r[10]=sqlite_sq_2018AC0.123
REG[10] =  i:123
  28 Column           1    0   11               00 r[11]=sqlite_sq_2018CC0.456
REG[11] =  i:456
  29 ResultRow       10    2    0               00 output=r[10..11]
REG[10] =  i:123
REG[11] =  i:456
  30 Next             1   27    0               01 
  31 Next             0   25    0               01 
  32 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 0             01 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s54[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
VALUES(1),(2),(3) EXCEPT VALUES(1),(3);]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 OpenEphemeral    1    1    0 k(1,B)        00 nColumn=1
   2 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
   3 MakeRecord       1    1    2               00 r[2]=mkrec(r[1])
REG[2] =  s2[0209..](8)
   4 IdxInsert        1    2    0               00 key=r[2]
REG[2] =  s2[0209..](8)
   5 Integer          2    1    0               00 r[1]=2
REG[1] =  i:2
   6 MakeRecord       1    1    2               00 r[2]=mkrec(r[1])
REG[2] =  s3[020102...](8)
   7 IdxInsert        1    2    0               00 key=r[2]
REG[2] =  s3[020102...](8)
   8 Integer          3    1    0               00 r[1]=3
REG[1] =  i:3
   9 MakeRecord       1    1    2               00 r[2]=mkrec(r[1])
REG[2] =  s3[020103...](8)
  10 IdxInsert        1    2    0               00 key=r[2]
REG[2] =  s3[020103...](8)
  11 InitCoroutine    3   17   12               00 sqlite_sq_2017A40
  17 Explain          6    0    0 SCAN SUBQUERY 7 00 
  18 InitCoroutine    3    0   12               00 
  19 Yield            3   23    0               00 next row of "sqlite_sq_2017A40"
REG[3] =  i:11
REG[3] =  i:19
  12 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
  13 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:13
  20 Copy             4    1    0               00 r[1]=r[4]; sqlite_sq_2017A40.
REG[1] =  i:1
  21 IdxDelete        1    1    1               00 key=r[1]
  22 Goto             0   19    0               00 
  19 Yield            3   23    0               00 next row of "sqlite_sq_2017A40"
REG[3] =  i:13
REG[3] =  i:19
  14 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  15 Yield            3    0    0               00 
REG[3] =  i:19
REG[3] =  i:15
  20 Copy             4    1    0               00 r[1]=r[4]; sqlite_sq_2017A40.
REG[1] =  i:3
  21 IdxDelete        1    1    1               00 key=r[1]
  22 Goto             0   19    0               00 
  19 Yield            3   23    0               00 next row of "sqlite_sq_2017A40"
REG[3] =  i:15
REG[3] =  i:19
  16 EndCoroutine     3    0    0               00 
REG[3] =  i:19
  23 Rewind           1   27    0               00 
  24 Column           1    0    6               00 r[6]=
REG[6] =  i:2
  25 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:2
  26 Next             1   24    0               00 
  27 Noop             1    0    0               00 
  28 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX x 
      ON t1(a, a, a);]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      0    1    1 0             01 usesStmtJournal=1
  40 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  41 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  42 Goto             0    1    0               00 
   1 Noop             0   38    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:3
   3 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX x 
      ON t1(a, a, a) 00 r[7]='CREATE UNIQUE INDEX x 
      ON t1(a, a, a)'
REG[7] =   t43[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    3 k(3,,,)       00 
  14 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; t1
  15 Rewind           1   23    0               00 
  23 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  24 SorterSort       3   32    0               00 
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 Close            3    0    0               00 
  35 SetCookie        0    1    2               00 
  36 ParseSchema      0    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:3
REG[7] =   s43[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  37 Expire           0    0    0               00 
  38 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s54[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s54[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s41[t1(a, b, PRIMAR](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s41[t1(a, b, PRIMAR](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s64[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s64[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      2    1    0 0             01 usesStmtJournal=0
  43 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateIndex      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Goto             0   23    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:1
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:1
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:1
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 t1            00 r[15]='t1'
REG[15] =   t2[t1](8)
  33 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  35 String8          0   18    0 CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID 00 r[18]='CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID'
REG[18] =   t54[CREATE TABLE t1](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s70[0617111101797461626C657431743102.....ytablet1t1.](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s70[0617111101797461626C657431743102.....ytablet1t1.](8)
REG[13] =  i:1
  38 Close            2    0    0               00 
  39 SetCookie        2    1    1               00 
  40 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s54[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s54[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s43[CREATE UNIQUE I](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s54[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s43[CREATE UNIQUE I](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s43[CREATE UNIQUE I](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s43[CREATE UNIQUE I](8)
REG[7] =  i:21
REG[1] =   s23[x .      ON t1(](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s23[x .      ON t1(](8)
REG[5] =   t30[CREATE UNIQUE I](8)
REG[4] =   s53[CREATE UNIQUE I](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s53[CREATE UNIQUE I](8)
SQL: [CREATE UNIQUE INDEX vacuum_db.x 
      ON t1(a, a, a)]
VDBE Trace:
   0 Init             0   39    0               00 Start at 39
  39 Transaction      2    1    1 0             01 usesStmtJournal=1
  40 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  41 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  42 Goto             0    1    0               00 
   1 Noop             0   38    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:3
   3 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   4 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   6 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   7 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   8 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
   9 String8          0    7    0 CREATE UNIQUE INDEX x 
      ON t1(a, a, a) 00 r[7]='CREATE UNIQUE INDEX x 
      ON t1(a, a, a)'
REG[7] =   t43[CREATE UNIQUE I](8)
  10 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
  11 Insert           0    8    2               18 intkey=r[2] data=r[8]
REG[8] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
REG[2] =  i:2
  12 Close            0    0    0               00 
  13 SorterOpen       3    0    3 k(3,,,)       00 
  14 OpenRead         1    2    2 k(2,,)        00 root=2 iDb=2; t1
  15 Rewind           1   23    0               00 
  23 OpenWrite        2    1    2 k(3,,,)       11 root=1 iDb=2
  24 SorterSort       3   32    0               00 
  32 Close            1    0    0               00 
  33 Close            2    0    0               00 
  34 Close            3    0    0               00 
  35 SetCookie        2    1    2               00 
  36 ParseSchema      2    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:3
REG[7] =   s43[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  37 Expire           0    0    0               00 
  38 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   21    0               00 Start at 21
  21 Transaction      0    0    2 0             01 usesStmtJournal=0
  22 Transaction      2    1    2 0             01 usesStmtJournal=0
  23 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  24 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  25 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 k(2,,)        00 root=2 iDb=2; t1
   2 OpenRead         0    3    0 k(3,,,)       00 root=3 iDb=0; x
   3 OpenWrite        1    3    2 k(3,,,)       01 root=3 iDb=2; x
   4 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Close            1    0    0               00 
  11 OpenRead         0    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  12 OpenWrite        1    2    2 k(2,,)        01 root=2 iDb=2; sqlite_autoindex_t1_1
  13 Rewind           0   18    0               00 
  18 Close            0    0    0               00 
  19 Noop             1    0    0               00 
  20 Halt             0    0    0               00 
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    2 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[x](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    2 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[x](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    0    2 0             01 usesStmtJournal=0
  29 Transaction      2    1    2 0             01 usesStmtJournal=0
  30 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  31 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  32 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  33 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  34 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  35 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  36 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  21 Yield            7   26    0               00 
REG[7] =  i:1
REG[7] =  i:21
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:21
  26 Noop             1    0    0               00 
  27 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:3
REG[3] =   s43[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1 SELECT a+1, a FROM t1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    1    3 1             01 usesStmtJournal=1
  46 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  47 Integer          1    6    0               00 r[6]=1
REG[6] =  i:1
  48 Goto             0    1    0               00 
   1 InitCoroutine    4   12    2               00 
  12 OpenEphemeral    2    2    0               00 nColumn=2
  13 Yield            4   18    0               00 
REG[4] =  i:1
REG[4] =  i:13
   2 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           1   10    5 0             00 
  10 Close            1    0    0               00 
  11 EndCoroutine     4    0    0               00 
REG[4] =  i:13
  18 OpenWrite        4    3    0 k(3,,,)       00 root=3 iDb=0; x
  19 OpenWrite        5    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  20 Rewind           2   41    0               00 
  41 Close            2    0    0               00 
  42 Close            4    0    0               00 
  43 Noop             5    0    0               00 
  44 Halt             0    0    0               00 
SQL: [;
SELECT count(*) FROM t1 ;]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    0    3 1             01 usesStmtJournal=0
   8 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
   9 Goto             0    1    0               00 
   1 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0
   2 Count            1    1    0               00 r[1]=count()
REG[1] =  i:0
   3 Close            1    0    0               00 
   4 Copy             1    2    0               00 r[2]=r[1]
REG[2] =  i:0
   5 ResultRow        2    1    0               00 output=r[2]
REG[2] =  i:0
   6 Halt             0    0    0               00 
SQL: [INSERT INTO t1(a,a) VALUES(33,456);]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    1    3 1             01 usesStmtJournal=0
  25 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  26 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  27 Goto             0    1    0               00 
   1 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; x
   2 OpenWrite        2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   3 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   4 Integer         33    2    0               00 r[2]=33
REG[2] =  i:33
   5 HaltIfNull    1299    2    2 t1.a          01 if r[2]=null halt
REG[2] =  i:33
   6 HaltIfNull    1299    2    3 t1.b          01 if r[3]=null halt
REG[3] =  NULL
SQL: [;
SELECT t3.a FROM 
    (SELECT a,max(a) AS a FROM t1 WHERE a>=5 GROUP BY a) AS t2
    CROSS JOIN t1 AS t3
  WHERE t2.a=t3.a AND t2.a=t3.a
  ORDER BY t3.a;]
VDBE Trace:
   0 Init             0   69    0               00 Start at 69
  69 Transaction      0    0    3 1             01 usesStmtJournal=0
  70 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  71 Goto             0    1    0               00 
   1 InitCoroutine    1   39    2               00 sqlite_sq_2018D40
  39 SorterOpen       5    3    0 k(1,B)        00 
  40 OpenRead         6    3    0 k(3,,,)       02 root=3 iDb=0; x
  41 Explain          0    0    0 SCAN SUBQUERY 1 AS t2 00 
  42 InitCoroutine    1    0    2               00 
  43 Yield            1   61    0               00 next row of "sqlite_sq_2018D40"
REG[1] =  i:1
REG[1] =  i:43
   2 Noop             3    1    0               00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   36    0               00 
REG[7] =  i:6
  36 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  37 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         4    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   8 Explain          1    0    0 SEARCH TABLE t1 USING PRIMARY KEY (a>?) 00 
   9 Integer          5   10    0               00 r[10]=5
REG[10] =  i:5
  10 SeekGE           4   25   10 1             00 key=r[10]
REG[10] =  i:5
  25 Close            4    0    0               00 
  26 Gosub            6   30    0               00 output final row
REG[6] =  i:26
  30 IfPos            4   32    0               00 if r[4]>0 then r[4]-=0, goto 32; Groupby result generator entry point
REG[4] =  i:0
  31 Return           6    0    0               00 
REG[6] =  i:26
  27 Goto             0   38    0               00 
  38 EndCoroutine     1    0    0               00 
REG[1] =  i:43
  61 Close            6    0    0               00 
  62 OpenPseudo       7   22    3               00 3 columns in r[22]
  63 SorterSort       5   68    0               00 
  68 Halt             0    0    0               00 
SQL: [SELECT b, b FROM t1
    INTERSECT
    SELECT b, b FROM t1
    ORDER BY 1
  ;]
VDBE Trace:
   0 Init             0   65    0               00 Start at 65
  65 Transaction      0    0    3 1             01 usesStmtJournal=0
  66 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  67 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 InitCoroutine    4   23    3               00 left SELECT
  23 InitCoroutine    5   59   24               00 right SELECT
  59 Yield            4   64    0               00 
REG[4] =  i:2
REG[4] =  i:59
   3 SorterOpen       2    5    0 k(2,B,B)      00 
   4 OpenRead         3    3    0 k(3,,,)       00 root=3 iDb=0; x
   5 Explain          1    0    0 SCAN TABLE t1 USING COVERING INDEX x 00 
   6 Rewind           3   14    8 0             00 
  14 Close            3    0    0               00 
  15 OpenPseudo       4   13    5               00 5 columns in r[13]
  16 SorterSort       2   22    0               00 
  22 EndCoroutine     4    0    0               00 
REG[4] =  i:59
  64 Halt             0    0    0               00 
SQL: [CREATE TABLE t6(t2 int,c int);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    3 1             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:3
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 t6            00 r[7]='t6'
REG[7] =   t2[t6](8)
  21 String8          0    8    0 t6            00 r[8]='t6'
REG[8] =   t2[t6](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  23 String8          0   10    0 CREATE TABLE t6(t2 int,c int) 00 r[10]='CREATE TABLE t6(t2 int,c int)'
REG[10] =   t29[CREATE TABLE t6](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s45[0617111101477461626C657436743604.....Gtablet6t6.](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s45[0617111101477461626C657436743604.....Gtablet6t6.](8)
REG[5] =  i:3
  26 Close            1    0    0               00 
  27 SetCookie        0    1    4               00 
  28 ParseSchema      0    0    0 tbl_name='t6' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t6            00 r[2]='t6'
REG[2] =   t2[t6](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t6](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t6](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s29[CREATE TABLE t6](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t6](8)
REG[6] =  i:4
REG[7] =   s29[CREATE TABLE t6](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [INSERT INTO t6 VALUES(1,2);]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    1    4 1             01 usesStmtJournal=0
  10 TableLock        0    4    1 t6            00 iDb=0 root=4 write=1
  11 Goto             0    1    0               00 
   1 OpenWrite        0    4    0 2             00 root=4 iDb=0; t6
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
   5 MakeRecord       2    2    4 DD            00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03090102....](8)
   6 Insert           0    4    1 t6            1B intkey=r[1] data=r[4]
REG[4] =  s4[03090102....](8)
REG[1] =  i:1
   7 Noop             0    0    0               00 
   8 Halt             0    0    0               00 
SQL: [PRAGMA count_changes=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 ORDER BY a;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    4 1             01 usesStmtJournal=0
  12 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  13 Goto             0    1    0               00 
   1 Noop             1    4    0               00 
   2 OpenRead         2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           2    9    1 0             00 
   9 Close            2    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
INSERT INTO t1(a,a) VALUES(777,128);]
VDBE Trace:
   0 Init             0   27    0               00 Start at 27
  27 Transaction      0    1    4 1             01 usesStmtJournal=0
  28 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  29 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  30 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; x
   3 OpenWrite        2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   4 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   5 Integer        777    2    0               00 r[2]=777
REG[2] =  i:777
   6 HaltIfNull    1299    2    2 t1.a          01 if r[2]=null halt
REG[2] =  i:777
   7 HaltIfNull    1299    2    3 t1.b          01 if r[3]=null halt
REG[3] =  NULL
SQL: [UPDATE t1 SET b=b+1 WHERE b==8;]
VDBE Trace:
   0 Init             0   58    0               00 Start at 58
  58 Transaction      0    1    4 1             01 usesStmtJournal=1
  59 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  60 Integer          8   14    0               00 r[14]=8
REG[14] =  i:8
  61 Integer          1   16    0               00 r[16]=1
REG[16] =  i:1
  62 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 OpenEphemeral    3    2    0 k(2,,)        00 nColumn=2
   3 OpenRead         4    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   4 Explain          0    0    0 SCAN TABLE t1 00 
   5 Rewind           4   13   13 0             00 
  13 Close            4    0    0               00 
  14 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  15 OpenWrite        1    3    0 k(3,,,)       00 root=3 iDb=0; x
  16 OpenWrite        2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  17 Rewind           3   54    0               00 
  54 Close            1    0    0               00 
  55 Close            2    0    0               00 
  56 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:0
  57 Halt             0    0    0               00 
SQL: [SELECT * FROM t1 WHERE b==778 ORDER BY b,b;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    4 1             01 usesStmtJournal=0
  14 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  15 Integer        778    2    0               00 r[2]=778
REG[2] =  i:778
  16 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           2   11    1 0             00 
  11 Close            2    0    0               00 
  12 Halt             0    0    0               00 
SQL: [UPDATE t1 SET b=b-1 WHERE a==8 and b>800;]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    4 1             01 usesStmtJournal=1
  55 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  56 Integer        800   17    0               00 r[17]=800
REG[17] =  i:800
  57 Integer          1   19    0               00 r[19]=1
REG[19] =  i:1
  58 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 Noop             3    2    0               00 
   3 OpenWrite        1    3    0 k(3,,,)       02 root=3 iDb=0; x
   4 Explain          0    0    0 SEARCH TABLE t1 USING COVERING INDEX x (a=? AND a=? AND a=?) 00 
   5 Integer          8   13    0               00 r[13]=8
REG[13] =  i:8
   6 Integer          8   14    0               00 r[14]=8
REG[14] =  i:8
   7 Integer          8   15    0               00 r[15]=8
REG[15] =  i:8
   8 SeekGE           1   14   13 3             00 key=r[13..15]
REG[13] =  i:8
  14 Integer          0   18    0               00 r[18]=0
REG[18] =  i:0
  15 OpenWrite        2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  16 NotFound         2   51   10 2             00 key=r[10..11]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f8fb2002859 in __GI_abort () at abort.c:79
#2  0x00007f8fb2002729 in __assert_fail_base (fmt=0x7f8fb2198588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=<optimized out>)
    at assert.c:92
#3  0x00007f8fb2013fd6 in __GI___assert_fail (assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e29eb in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:80649
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffdf0d858b8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 121305] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
