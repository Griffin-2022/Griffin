GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000129,sig:06,src:008753+008935,time:17372271,execs:2369344,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [PRAGMA foreign_keys = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 0             01 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA foreign_keys = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX x 
      ON t1(b, b, b);]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    1 0             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  44 Goto             0    1    0               00 
   1 Noop             0   40    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:3
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   8 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
  10 String8          0    7    0 CREATE UNIQUE INDEX x 
      ON t1(b, b, b) 00 r[7]='CREATE UNIQUE INDEX x 
      ON t1(b, b, b)'
REG[7] =   t43[CREATE UNIQUE I](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
REG[2] =  i:2
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    3 k(3,,,)       00 
  16 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; t1
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  26 SorterSort       3   34    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 SetCookie        0    1    2               00 
  38 ParseSchema      0    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:3
REG[7] =   s43[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  39 Expire           0    0    0               00 
  40 Halt             0    0    0               00 
SQL: [VACUUM;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      2    0    0 0             00 usesStmtJournal=0
  13 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [PRAGMA vacuum_db.synchronous=OFF]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [BEGIN;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       0    0    0               00 
SQL: [SELECT 'CREATE TABLE vacuum_db.' || substr(sql,14)   FROM sqlite_master WHERE type='table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   19    0               00 Start at 19
  19 Transaction      0    0    2 0             01 usesStmtJournal=0
  20 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  23 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  24 String8          0    8    0 CREATE TABLE vacuum_db. 00 r[8]='CREATE TABLE vacuum_db.'
REG[8] =   t23[CREATE TABLE va](8)
  25 Integer         14   10    0               00 r[10]=14
REG[10] =  i:14
  26 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   17    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   16    3 (BINARY)      52 if r[4]==r[3] goto 16
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   16    5               51 if r[6]<=r[5] goto 16
REG[6] =  i:0
REG[5] =  i:2
  12 Column           0    4    9               00 r[9]=sqlite_master.sql
REG[9] =   s54[CREATE TABLE t1](8)
  13 Function0        2    9    5 substr(2)     02 r[5]=func(r[9..10])
REG[9] =   s54[CREATE TABLE t1](8)
REG[10] =  i:14
REG[5] =   s41[t1(a, b, PRIMAR](8)
  14 Concat           5    8    7               00 r[7]=r[8]+r[5]
REG[5] =   s41[t1(a, b, PRIMAR](8)
REG[8] =   t23[CREATE TABLE va](8)
REG[7] =   s64[CREATE TABLE va](8)
  15 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s64[CREATE TABLE va](8)
SQL: [CREATE TABLE vacuum_db.t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID]
VDBE Trace:
   0 Init             0   46    0               00 Start at 46
  46 Transaction      2    1    0 0             01 usesStmtJournal=0
  47 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  48 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateIndex      2    2    0               00 r[2]=root iDb=2
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Goto             0   25    0               00 
  25 Close            0    0    0               00 
  26 Null             0   13   14               00 r[13..14]=NULL
REG[13] =  NULL
  27 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  28 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  29 MustBeInt        1   32    0               00 
REG[1] =  i:1
  30 NotExists        2   32    1               00 intkey=r[1]; pk
REG[1] =  i:1
  31 Rowid            2   14    0               00 r[14]=rowid
REG[14] =  i:1
  32 Integer          0   21    0               00 r[21]=0
REG[21] =  i:0
  33 IsNull          14   42    0               00 if r[14]==NULL goto 42
REG[14] =  i:1
  34 String8          0   15    0 table         00 r[15]='table'
REG[15] =   t5[table](8)
  35 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  36 String8          0   17    0 t1            00 r[17]='t1'
REG[17] =   t2[t1](8)
  37 Copy             2   18    0               00 r[18]=r[2]
REG[18] =  i:2
  38 String8          0   19    0 CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID 00 r[19]='CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID'
REG[19] =   t54[CREATE TABLE t1](8)
  39 MakeRecord      15    5   20 BBBDB         00 r[20]=mkrec(r[15..19])
REG[20] =  s70[0617111101797461626C657431743102.....ytablet1t1.](8)
  40 Insert           2   20   14               00 intkey=r[14] data=r[20]
REG[20] =  s70[0617111101797461626C657431743102.....ytablet1t1.](8)
REG[14] =  i:1
  41 AddImm          21    1    0               00 r[21]=r[21]+1
REG[21] =  i:0
  42 Close            2    0    0               00 
  43 SetCookie        2    1    1               00 
  44 ParseSchema      2    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    1 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s54[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  45 Halt             0    0    0               00 
  16 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   16    1 (BINARY)      52 if r[2]!=r[1] goto 16
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  16 Next             0    4    0               01 
  17 Close            0    0    0               00 
  18 Halt             0    0    0               00 
SQL: [SELECT 'CREATE INDEX vacuum_db.' || substr(sql,14)  FROM sqlite_master WHERE sql LIKE 'CREATE INDEX %' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE INDEX % 00 r[2]='CREATE INDEX %'
REG[2] =   t14[CREATE INDEX %](8)
  17 String8          0    5    0 CREATE INDEX vacuum_db. 00 r[5]='CREATE INDEX vacuum_db.'
REG[5] =   t23[CREATE INDEX va](8)
  18 Integer         14    7    0               00 r[7]=14
REG[7] =  i:14
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s54[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t14[CREATE INDEX %](8)
REG[3] =   s43[CREATE UNIQUE I](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'CREATE UNIQUE INDEX vacuum_db.' || substr(sql,21)   FROM sqlite_master WHERE sql LIKE 'CREATE UNIQUE INDEX %']
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 CREATE UNIQUE INDEX % 00 r[2]='CREATE UNIQUE INDEX %'
REG[2] =   t21[CREATE UNIQUE I](8)
  17 String8          0    5    0 CREATE UNIQUE INDEX vacuum_db. 00 r[5]='CREATE UNIQUE INDEX vacuum_db.'
REG[5] =   t30[CREATE UNIQUE I](8)
  18 Integer         21    7    0               00 r[7]=21
REG[7] =  i:21
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   5 Function0        1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s54[CREATE TABLE t1](8)
REG[1] =  i:0
   6 IfNot            1   11    1               00 
REG[1] =  i:0
  11 Next             0    4    0               01 
   4 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   5 Function         1    2    1 like(2)       02 r[1]=func(r[2..3])
REG[2] =   t21[CREATE UNIQUE I](8)
REG[3] =   s43[CREATE UNIQUE I](8)
REG[1] =  i:1
   6 IfNot            1   11    1               00 
REG[1] =  i:1
   7 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s43[CREATE UNIQUE I](8)
   8 Function0        2    6    1 substr(2)     02 r[1]=func(r[6..7])
REG[6] =   s43[CREATE UNIQUE I](8)
REG[7] =  i:21
REG[1] =   s23[x .      ON t1(](8)
   9 Concat           1    5    4               00 r[4]=r[5]+r[1]
REG[1] =   s23[x .      ON t1(](8)
REG[5] =   t30[CREATE UNIQUE I](8)
REG[4] =   s53[CREATE UNIQUE I](8)
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s53[CREATE UNIQUE I](8)
SQL: [CREATE UNIQUE INDEX vacuum_db.x 
      ON t1(b, b, b)]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      2    1    1 0             01 usesStmtJournal=1
  42 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  43 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  44 Goto             0    1    0               00 
   1 Noop             0   40    0               00 
   2 CreateIndex      2    1    0               00 r[1]=root iDb=2
REG[1] =  i:3
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    2 5             00 root=1 iDb=2; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:2
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 x             00 r[4]='x'
REG[4] =   t1[x](8)
   8 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:3
  10 String8          0    7    0 CREATE UNIQUE INDEX x 
      ON t1(b, b, b) 00 r[7]='CREATE UNIQUE INDEX x 
      ON t1(b, b, b)'
REG[7] =   t43[CREATE UNIQUE I](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s58[06170F110163696E6465787874310343.....cindexxt1.C](8)
REG[2] =  i:2
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    3 k(3,,,)       00 
  16 OpenRead         1    2    2 k(2,,)        00 root=2 iDb=2; t1
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    2 k(3,,,)       11 root=1 iDb=2
  26 SorterSort       3   34    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 SetCookie        2    1    2               00 
  38 ParseSchema      2    0    0 name='x' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      2    0    2 0             00 usesStmtJournal=0
  17 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s43[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:3
REG[7] =   s43[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  39 Expire           0    0    0               00 
  40 Halt             0    0    0               00 
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';'FROM main.sqlite_master WHERE type = 'table' AND name!='sqlite_sequence'   AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   24    0               00 Start at 24
  24 Transaction      0    0    2 0             01 usesStmtJournal=0
  25 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  26 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  27 String8          0    4    0 sqlite_sequence 00 r[4]='sqlite_sequence'
REG[4] =   t15[sqlite_sequence](8)
  28 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  29 String8          0   10    0 INSERT INTO vacuum_db. 00 r[10]='INSERT INTO vacuum_db.'
REG[10] =   t22[INSERT INTO vac](8)
  30 String8          0   13    0  SELECT * FROM main. 00 r[13]=' SELECT * FROM main.'
REG[13] =   t20[ SELECT * FROM ](8)
  31 String8          0   14    0 ;             00 r[14]=';'
REG[14] =   t1[;](8)
  32 Goto             0    1    0               00 
   1 OpenRead         0    1    0 4             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   22    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s2[t1](8)
   7 Eq               4   21    3 (BINARY)      52 if r[4]==r[3] goto 21
REG[4] =   t15[sqlite_sequence](8)
REG[3] =   s2[t1](8)
   8 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
   9 NotNull          5   11    0               00 if r[5]!=NULL goto 11
REG[5] =  i:2
  11 Le               6   21    5               51 if r[6]<=r[5] goto 21
REG[6] =  i:0
REG[5] =  i:2
  12 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  13 Function0        0   12   11 quote(1)      01 r[11]=func(r[12])
REG[12] =   s2[t1](8)
REG[11] =   z4['t1'](8)
  14 Concat          11   10    9               00 r[9]=r[10]+r[11]
REG[11] =   z4['t1'](8)
REG[10] =   t22[INSERT INTO vac](8)
REG[9] =   s26[INSERT INTO vac](8)
  15 Concat          13    9    8               00 r[8]=r[9]+r[13]
REG[13] =   t20[ SELECT * FROM ](8)
REG[9] =   s26[INSERT INTO vac](8)
REG[8] =   s46[INSERT INTO vac](8)
  16 Copy             3   12    0               00 r[12]=r[3]
REG[12] =   s2[t1](8)
  17 Function0        0   12    9 quote(1)      01 r[9]=func(r[12])
REG[12] =   s2[t1](8)
REG[9] =   z4['t1'](8)
  18 Concat           9    8    5               00 r[5]=r[8]+r[9]
REG[9] =   z4['t1'](8)
REG[8] =   s46[INSERT INTO vac](8)
REG[5] =   s50[INSERT INTO vac](8)
  19 Concat          14    5    7               00 r[7]=r[5]+r[14]
REG[14] =   t1[;](8)
REG[5] =   s50[INSERT INTO vac](8)
REG[7] =   s51[INSERT INTO vac](8)
  20 ResultRow        7    1    0               00 output=r[7]
REG[7] =   s51[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t1' SELECT * FROM main.'t1';]
VDBE Trace:
   0 Init             0   38    0               00 Start at 38
  38 Transaction      0    0    2 0             01 usesStmtJournal=1
  39 Transaction      2    1    2 0             01 usesStmtJournal=1
  40 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  41 TableLock        2    2    1 t1            00 iDb=2 root=2 write=1
  42 Goto             0    1    0               00 
   1 InitCoroutine    4   11    2               00 
  11 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
  12 OpenWrite        3    3    2 k(3,,,)       00 root=3 iDb=2; x
  13 OpenWrite        4    2    2 k(2,,)        00 root=2 iDb=2; sqlite_autoindex_t1_1
  14 Yield            4   34    0               00 
REG[4] =  i:1
REG[4] =  i:14
   2 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   3 Explain          0    0    0 SCAN TABLE t1 00 
   4 Rewind           1    9    5 0             00 
   9 Close            1    0    0               00 
  10 EndCoroutine     4    0    0               00 
REG[4] =  i:14
  34 Close            3    0    0               00 
  35 Close            4    0    0               00 
  36 ResultRow        5    1    0               00 output=r[5]
REG[5] =  i:0
  21 Next             0    4    0               01 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[index](8)
   5 Ne               2   21    1 (BINARY)      52 if r[2]!=r[1] goto 21
REG[2] =   t5[table](8)
REG[1] =   s5[index](8)
  21 Next             0    4    0               01 
  22 Close            0    0    0               00 
  23 Halt             0    0    0               00 
SQL: [SELECT 'DELETE FROM vacuum_db.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name='sqlite_sequence' ]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      2    0    2 0             01 usesStmtJournal=0
  15 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  16 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  17 String8          0    5    0 DELETE FROM vacuum_db. 00 r[5]='DELETE FROM vacuum_db.'
REG[5] =   t22[DELETE FROM vac](8)
  18 String8          0    8    0 ;             00 r[8]=';'
REG[8] =   t1[;](8)
  19 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   12    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  11 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   5 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[x](8)
  11 Next             0    4    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
SQL: [SELECT 'INSERT INTO vacuum_db.' || quote(name) || ' SELECT * FROM main.' || quote(name) || ';' FROM vacuum_db.sqlite_master WHERE name=='sqlite_sequence';]
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      2    0    2 0             01 usesStmtJournal=0
  19 TableLock        2    1    0 sqlite_master 00 iDb=2 root=1 write=0
  20 String8          0    2    0 sqlite_sequence 00 r[2]='sqlite_sequence'
REG[2] =   t15[sqlite_sequence](8)
  21 String8          0    7    0 INSERT INTO vacuum_db. 00 r[7]='INSERT INTO vacuum_db.'
REG[7] =   t22[INSERT INTO vac](8)
  22 String8          0   10    0  SELECT * FROM main. 00 r[10]=' SELECT * FROM main.'
REG[10] =   t20[ SELECT * FROM ](8)
  23 String8          0   11    0 ;             00 r[11]=';'
REG[11] =   t1[;](8)
  24 Goto             0    1    0               00 
   1 OpenRead         0    1    2 2             00 root=1 iDb=2; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   16    0               00 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s2[t1](8)
  15 Next             0    4    0               01 
   4 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   5 Ne               2   15    1 (BINARY)      52 if r[2]!=r[1] goto 15
REG[2] =   t15[sqlite_sequence](8)
REG[1] =   s1[x](8)
  15 Next             0    4    0               01 
  16 Close            0    0    0               00 
  17 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master   SELECT type, name, tbl_name, rootpage, sql    FROM main.sqlite_master   WHERE type='view' OR type='trigger'      OR (type='table' AND rootpage=0)]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    0    2 0             01 usesStmtJournal=0
  32 Transaction      2    1    2 0             01 usesStmtJournal=0
  33 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  34 TableLock        2    1    1 sqlite_master 00 iDb=2 root=1 write=1
  35 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  36 String8          0   11    0 trigger       00 r[11]='trigger'
REG[11] =   t7[trigger](8)
  37 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  38 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  39 Goto             0    1    0               00 
   1 InitCoroutine    7   20    2               00 
  20 Integer          0   14    0               00 r[14]=0
REG[14] =  i:0
  21 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  22 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:22
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   18    0               00 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[table](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[table](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[table](8)
   9 Column           0    3   10               00 r[10]=sqlite_master.rootpage
REG[10] =  i:2
  10 Ne              13   17   10 (BINARY)      54 if r[13]!=r[10] goto 17
REG[13] =  i:0
REG[10] =  i:2
  17 Next             0    5    0               01 
   5 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[index](8)
   6 Eq               9   11    8 (BINARY)      42 if r[9]==r[8] goto 11
REG[9] =   t4[view](8)
REG[8] =   s5[index](8)
   7 Eq              11   11    8 (BINARY)      42 if r[11]==r[8] goto 11
REG[11] =   t7[trigger](8)
REG[8] =   s5[index](8)
   8 Ne              12   17    8 (BINARY)      52 if r[12]!=r[8] goto 17
REG[12] =   t5[table](8)
REG[8] =   s5[index](8)
  17 Next             0    5    0               01 
  18 Close            0    0    0               00 
  19 EndCoroutine     7    0    0               00 
REG[7] =  i:22
  28 Close            1    0    0               00 
  29 ResultRow       14    1    0               00 output=r[14]
REG[14] =  i:0
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s43[CREATE UNIQUE I](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:3
REG[3] =   s43[CREATE UNIQUE I](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    0 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
CREATE TABLE t6(t2, c);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    3 1             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:3
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 t6            00 r[7]='t6'
REG[7] =   t2[t6](8)
  22 String8          0    8    0 t6            00 r[8]='t6'
REG[8] =   t2[t6](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  24 String8          0   10    0 CREATE TABLE t6(t2, c) 00 r[10]='CREATE TABLE t6(t2, c)'
REG[10] =   t22[CREATE TABLE t6](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s38[0617111101397461626C657436743604.....9tablet6t6.](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s38[0617111101397461626C657436743604.....9tablet6t6.](8)
REG[5] =  i:3
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    4               00 
  30 ParseSchema      0    0    0 tbl_name='t6' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t6            00 r[2]='t6'
REG[2] =   t2[t6](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t6](8)
REG[1] =   s2[t6](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t6](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE t6](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t6](8)
REG[6] =  i:4
REG[7] =   s22[CREATE TABLE t6](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [CREATE INDEX x1 ON t1(b);]
VDBE Trace:
   0 Init             0   36    0               00 Start at 36
  36 Transaction      0    1    4 1             01 usesStmtJournal=0
  37 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  38 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  39 Goto             0    1    0               00 
   1 Noop             0   35    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:5
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:4
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 x1            00 r[4]='x1'
REG[4] =   t2[x1](8)
   8 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:5
  10 String8          0    7    0 CREATE INDEX x1 ON t1(b) 00 r[7]='CREATE INDEX x1 ON t1(b)'
REG[7] =   t24[CREATE INDEX x1](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s40[06171111013D696E6465787831743105.....=indexx1t1.](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s40[06171111013D696E6465787831743105.....=indexx1t1.](8)
REG[2] =  i:4
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    1 k(2,,)        00 
  16 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; t1
  17 Rewind           1   23    0               00 
  23 OpenWrite        2    1    0 k(2,,)        11 root=1 iDb=0
  24 SorterSort       3   29    0               00 
  29 Close            1    0    0               00 
  30 Close            2    0    0               00 
  31 Close            3    0    0               00 
  32 SetCookie        0    1    5               00 
  33 ParseSchema      0    0    0 name='x1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[x1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[x1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s24[CREATE INDEX x1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[x1](8)
REG[6] =  i:5
REG[7] =   s24[CREATE INDEX x1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  34 Expire           0    0    0               00 
  35 Halt             0    0    0               00 
SQL: [WITH cnt(i) AS (
      SELECT 1 UNION ALL SELECT i+1 FROM cnt WHERE i<20
    )
    INSERT INTO t6 SELECT i, randomblob(800) FROM cnt;]
VDBE Trace:
   0 Init             0   43    0               00 Start at 43
  43 Transaction      0    1    5 1             01 usesStmtJournal=0
  44 TableLock        0    4    1 t6            00 iDb=0 root=4 write=1
  45 Integer         20   11    0               00 r[11]=20
REG[11] =  i:20
  46 Integer          1   13    0               00 r[13]=1
REG[13] =  i:1
  47 Integer        800   14    0               00 r[14]=800
REG[14] =  i:800
  48 Goto             0    1    0               00 
   1 InitCoroutine    4   32    2               00 
  32 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  33 OpenWrite        3    4    0 2             00 root=4 iDb=0; t6
  34 Yield            4   40    0               00 
REG[4] =  i:1
REG[4] =  i:34
   2 InitCoroutine    5   24    3               00 cnt
  24 Explain          0    0    0 SCAN SUBQUERY 1 00 
  25 InitCoroutine    5    0    3               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:2
REG[5] =  i:26
   3 OpenPseudo       1    6    1               00 1 columns in r[6]
   4 OpenEphemeral    2    1    0               00 nColumn=1; Queue table
   5 Integer          1    7    0               00 r[7]=1
REG[7] =  i:1
   6 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s2[0209..](8)
   7 NewRowid         2    9    0               00 r[9]=rowid
REG[9] =  i:1
   8 Insert           2    8    9               08 intkey=r[9] data=r[8]
REG[8] =  s2[0209..](8)
REG[9] =  i:1
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s2[0209..](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:1
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:1
  28 Function0        1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[B39ECBA41458FAE7A66F1A6C02E48A07.....X...o.l....](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:1
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s804[04098C4CB39ECBA41458FAE7A66F1A6C...L.....X...o.l](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s804[04098C4CB39ECBA41458FAE7A66F1A6C...L.....X...o.l](8)
REG[1] =  i:1
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:0
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:1
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:1
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:1
REG[7] =  i:2
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020102...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020102...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020102...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:2
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:2
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[DED9C91B25476AC19EA63768664CAD4F....%Gj...7hfL.O](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:2
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C02DED9C91B25476AC19EA637...L.....%Gj...7](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C02DED9C91B25476AC19EA637...L.....%Gj...7](8)
REG[1] =  i:2
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:1
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:2
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:2
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:2
REG[7] =  i:3
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020103...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020103...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020103...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:3
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:3
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[DB3CEE1065EC433DDFB8747AB6D7F87E.<..e.C=..tz...~](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:3
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C03DB3CEE1065EC433DDFB874...L..<..e.C=..t](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C03DB3CEE1065EC433DDFB874...L..<..e.C=..t](8)
REG[1] =  i:3
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:2
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:3
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:3
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:3
REG[7] =  i:4
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020104...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020104...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020104...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:4
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:4
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[462D7351737E25E8C948E1E8179CA83CF-sQs~%..H.....<](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:4
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C04462D7351737E25E8C948E1...L.F-sQs~%..H.](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C04462D7351737E25E8C948E1...L.F-sQs~%..H.](8)
REG[1] =  i:4
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:3
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:4
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:4
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:4
REG[7] =  i:5
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020105...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020105...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020105...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:5
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:5
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[E38CF524933476C86C1834C7226B8480...$.4v.l.4."k..](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:5
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C05E38CF524933476C86C1834...L....$.4v.l.4](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C05E38CF524933476C86C1834...L....$.4v.l.4](8)
REG[1] =  i:5
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:4
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:5
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:5
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:5
REG[7] =  i:6
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020106...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020106...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020106...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:6
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:6
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[AA550FE3AEFA7C6A87F5B9E4BCE9051E.U....|j........](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:6
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C06AA550FE3AEFA7C6A87F5B9...L..U....|j...](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C06AA550FE3AEFA7C6A87F5B9...L..U....|j...](8)
REG[1] =  i:6
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:5
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:6
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:6
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:6
REG[7] =  i:7
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020107...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020107...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020107...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:7
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:7
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[C7E46458A8591537B0166A5E994B57E3..dX.Y.7..j^.KW.](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:7
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C07C7E46458A8591537B0166A...L...dX.Y.7..j](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C07C7E46458A8591537B0166A...L...dX.Y.7..j](8)
REG[1] =  i:7
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:6
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:7
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:7
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:7
REG[7] =  i:8
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020108...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020108...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020108...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:8
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:8
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[D211E126C756CC1AB2F5EAEC0CED8D47...&.V.........G](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:8
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C08D211E126C756CC1AB2F5EA...L....&.V.....](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C08D211E126C756CC1AB2F5EA...L....&.V.....](8)
REG[1] =  i:8
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:7
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:8
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:8
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:8
REG[7] =  i:9
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020109...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020109...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020109...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:9
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:9
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[117F7DC0EF8C07F0048E0E48464DE6DD..}........HFM..](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:9
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C09117F7DC0EF8C07F0048E0E...L...}........](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C09117F7DC0EF8C07F0048E0E...L...}........](8)
REG[1] =  i:9
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:8
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:9
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:9
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:9
REG[7] =  i:10
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010A...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[02010A...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010A...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:10
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:10
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[7BC11D0722FD2710F0333C62C32BB4C9{...".'..3<b.+..](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:10
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C0A7BC11D0722FD2710F0333C...L.{...".'..3<](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C0A7BC11D0722FD2710F0333C...L.{...".'..3<](8)
REG[1] =  i:10
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:9
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:10
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:10
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:10
REG[7] =  i:11
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010B...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[02010B...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010B...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:11
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:11
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[AF40699C73D967EF5C9D11DE2E65C9EC.@i.s.g.\....e..](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:11
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C0BAF40699C73D967EF5C9D11...L..@i.s.g.\..](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C0BAF40699C73D967EF5C9D11...L..@i.s.g.\..](8)
REG[1] =  i:11
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:10
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:11
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:11
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:11
REG[7] =  i:12
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010C...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[02010C...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010C...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:12
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:12
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[DC61337BBC6AA230A32BF82494570BD7.a3{.j.0.+.$.W..](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:12
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C0CDC61337BBC6AA230A32BF8...L..a3{.j.0.+.](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C0CDC61337BBC6AA230A32BF8...L..a3{.j.0.+.](8)
REG[1] =  i:12
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:11
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:12
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:12
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:12
REG[7] =  i:13
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010D...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[02010D...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010D...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:13
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:13
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[B0CDD4067CA5059D5AA92098E230E7DF....|...Z. ..0..](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:13
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C0DB0CDD4067CA5059D5AA920...L.....|...Z. ](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C0DB0CDD4067CA5059D5AA920...L.....|...Z. ](8)
REG[1] =  i:13
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:12
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:13
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:13
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:13
REG[7] =  i:14
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010E...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[02010E...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010E...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:14
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:14
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[4E496F868ECABF0EE99E24B5F8A37E22NIo.......$...~"](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:14
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C0E4E496F868ECABF0EE99E24...L.NIo.......$](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C0E4E496F868ECABF0EE99E24...L.NIo.......$](8)
REG[1] =  i:14
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:13
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:14
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:14
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:14
REG[7] =  i:15
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[02010F...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[02010F...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[02010F...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:15
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:15
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[09E3DCA3722E86DD803CDC1B06A20566....r....<.....f](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:15
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C0F09E3DCA3722E86DD803CDC...L.....r....<.](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C0F09E3DCA3722E86DD803CDC...L.....r....<.](8)
REG[1] =  i:15
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:14
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:15
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:15
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:15
REG[7] =  i:16
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020110...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020110...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020110...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:16
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:16
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[952191BC487193F8832899C063ED47C4.!..Hq...(..c.G.](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:16
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C10952191BC487193F8832899...L..!..Hq...(.](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C10952191BC487193F8832899...L..!..Hq...(.](8)
REG[1] =  i:16
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:15
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:16
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:16
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:16
REG[7] =  i:17
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020111...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020111...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020111...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:17
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:17
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[25B5506A83500BC39C465A4AC4F21B8D%.Pj.P...FZJ....](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:17
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C1125B5506A83500BC39C465A...L.%.Pj.P...FZ](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C1125B5506A83500BC39C465A...L.%.Pj.P...FZ](8)
REG[1] =  i:17
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:16
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:17
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:17
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:17
REG[7] =  i:18
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020112...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020112...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020112...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:18
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:18
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[3A2A43E111425C5B743FA0FC4DA057E7:*C..B\[t?..M.W.](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:18
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C123A2A43E111425C5B743FA0...L.:*C..B\[t?.](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C123A2A43E111425C5B743FA0...L.:*C..B\[t?.](8)
REG[1] =  i:18
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:17
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:18
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:18
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:18
REG[7] =  i:19
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020113...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020113...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020113...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:19
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:19
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[81663BAF0A061CE1A004A80FA9A7291D.f;...........).](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:19
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C1381663BAF0A061CE1A004A8...L..f;........](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C1381663BAF0A061CE1A004A8...L..f;........](8)
REG[1] =  i:19
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:18
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:19
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:19
  18 Add             13    9    7               00 r[7]=r[13]+r[9]
REG[13] =  i:1
REG[9] =  i:19
REG[7] =  i:20
  19 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s3[020114...](8)
  20 NewRowid         2   12    0               00 r[12]=rowid
REG[12] =  i:1
  21 Insert           2    8   12               08 intkey=r[12] data=r[8]
REG[8] =  s3[020114...](8)
REG[12] =  i:1
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  10 NullRow          1    0    0               00 
  11 RowData          2    6    0               00 r[6]=data
REG[6] =  s3[020114...](8)
  12 Delete           2    0    0               00 
  13 Column           1    0   10               00 r[10]=
REG[10] =  i:20
  14 Yield            5    0    0               00 
REG[5] =  i:26
REG[5] =  i:14
  27 Copy            10    2    0               00 r[2]=r[10]; cnt.i
REG[2] =  i:20
  28 Function         1   14    3 randomblob(1) 01 r[3]=func(r[14])
REG[14] =  i:800
REG[3] =  z800[72C971BAEEA605E6C3E12BB5AAB2B92Br.q.......+....+](8)
  29 Yield            4    0    0               00 
REG[4] =  i:34
REG[4] =  i:29
  35 NewRowid         3    1    0               00 r[1]=rowid
REG[1] =  i:20
  36 MakeRecord       2    2   16               00 r[16]=mkrec(r[2..3])
REG[16] =  s805[04018C4C1472C971BAEEA605E6C3E12B...L.r.q.......+](8)
  37 Insert           3   16    1 t6            1B intkey=r[1] data=r[16]
REG[16] =  s805[04018C4C1472C971BAEEA605E6C3E12B...L.r.q.......+](8)
REG[1] =  i:20
  38 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:19
  39 Goto             0   34    0               00 
  34 Yield            4   40    0               00 
REG[4] =  i:29
REG[4] =  i:34
  30 Goto             0   26    0               00 
  26 Yield            5   31    0               00 next row of "cnt"
REG[5] =  i:14
REG[5] =  i:26
  15 Explain          3    0    0 SCAN TABLE cnt 00 
  16 Column           1    0    9               00 r[9]=cnt.i
REG[9] =  i:20
  17 Ge              11   22    9 (BINARY)      51 if r[11]>=r[9] goto 22
REG[11] =  i:20
REG[9] =  i:20
  22 Goto             0    9    0               00 
   9 Rewind           2   23    0               00 
  23 EndCoroutine     5    0    0               00 
REG[5] =  i:26
  31 EndCoroutine     4    0    0               00 
REG[4] =  i:34
  40 Close            3    0    0               00 
  41 ResultRow       15    1    0               00 output=r[15]
REG[15] =  i:20
  42 Halt             0    0    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='x1' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t6](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t6](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'x1'
    ;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      0    0    5 1             01 usesStmtJournal=0
  18 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  19 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  20 String8          0    3    0 view          00 r[3]='view'
REG[3] =   t4[view](8)
  21 String8          0    4    0 sqliteX_%     00 r[4]='sqliteX_%'
REG[4] =   t9[sqliteX_%](8)
  22 String8          0    6    0 x1            00 r[6]='x1'
REG[6] =   t2[x1](8)
  23 Goto             0    1    0               00 
   1 OpenRead         0    1    0 2             00 root=1 iDb=0; sqlite_master
   2 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   15    0               00 
   4 Noop             0    0    0               00 begin IN expr
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Eq               1    8    2 (BINARY)      42 if r[1]==r[2] goto 8
REG[1] =   s5[table](8)
REG[2] =   t5[table](8)
   8 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
   9 Function0        5    4    1 like(3)       03 r[1]=func(r[4..6])
REG[4] =   t9[sqliteX_%](8)
REG[5] =   s2[t1](8)
REG[6] =   t2[x1](8)
SQL: [UPDATE t1 SET b = randomblob(799) WHERE b=$b ;]
VDBE Trace:
   0 Init             0   63    0               00 Start at 63
  63 Transaction      0    1    5 1             01 usesStmtJournal=1
  64 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  65 Integer        799   18    0               00 r[18]=799
REG[18] =  i:799
  66 Goto             0    1    0               00 
   1 Null             0   11    0               00 r[11]=NULL
REG[11] =  NULL
   2 Noop             4    2    0               00 
   3 OpenWrite        2    3    0 k(3,,,)       02 root=3 iDb=0; x
   4 Explain          0    0    0 SEARCH TABLE t1 USING COVERING INDEX x (b=? AND b=? AND b=?) 00 
   5 Variable         1   14    0 $b            00 r[14]=parameter(1,$b)
REG[14] =  NULL
   6 IsNull          14   15    0               00 if r[14]==NULL goto 15
REG[14] =  NULL
  15 Integer          0   17    0               00 r[17]=0
REG[17] =  i:0
  16 OpenWrite        1    5    0 k(2,,)        00 root=5 iDb=0; x1
  17 OpenWrite        3    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  18 NotFound         3   59   11 2             00 key=r[11..12]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f2755247859 in __GI_abort () at abort.c:79
#2  0x00007f2755247729 in __assert_fail_base (fmt=0x7f27553dd588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=<optimized out>)
    at assert.c:92
#3  0x00007f2755258fd6 in __GI___assert_fail (assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e29eb in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:80649
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffdbac39338) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 121158] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
