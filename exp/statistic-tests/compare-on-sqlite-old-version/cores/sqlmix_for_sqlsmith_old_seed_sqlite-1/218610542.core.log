GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000195,sig:06,src:009909+009719,time:30993715,execs:4746753,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;
PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    0 0             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID;]
VDBE Trace:
   0 Init             0   42    0               00 Start at 42
  42 Transaction      0    1    0 0             01 usesStmtJournal=0
  43 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  44 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateIndex      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Goto             0   23    0               00 
  23 Close            0    0    0               00 
  24 Null             0   12   13               00 r[12..13]=NULL
REG[12] =  NULL
  25 OpenWrite        2    1    0 5             00 root=1 iDb=0; sqlite_master
  26 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  27 MustBeInt        1   30    0               00 
REG[1] =  i:1
  28 NotExists        2   30    1               00 intkey=r[1]; pk
REG[1] =  i:1
  29 Rowid            2   13    0               00 r[13]=rowid
REG[13] =  i:1
  30 IsNull          13   38    0               00 if r[13]==NULL goto 38
REG[13] =  i:1
  31 String8          0   14    0 table         00 r[14]='table'
REG[14] =   t5[table](8)
  32 String8          0   15    0 t1            00 r[15]='t1'
REG[15] =   t2[t1](8)
  33 String8          0   16    0 t1            00 r[16]='t1'
REG[16] =   t2[t1](8)
  34 Copy             2   17    0               00 r[17]=r[2]
REG[17] =  i:2
  35 String8          0   18    0 CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID 00 r[18]='CREATE TABLE t1(a, b, PRIMARY KEY(a, b)) WITHOUT ROWID'
REG[18] =   t54[CREATE TABLE t1](8)
  36 MakeRecord      14    5   19 BBBDB         00 r[19]=mkrec(r[14..18])
REG[19] =  s70[0617111101797461626C657431743102.....ytablet1t1.](8)
  37 Insert           2   19   13               00 intkey=r[13] data=r[19]
REG[19] =  s70[0617111101797461626C657431743102.....ytablet1t1.](8)
REG[13] =  i:1
  38 Close            2    0    0               00 
  39 SetCookie        0    1    1               00 
  40 ParseSchema      0    0    0 tbl_name='t1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[t1](8)
REG[1] =   s2[t1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[t1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:2
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s54[CREATE TABLE t1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[t1](8)
REG[6] =  i:2
REG[7] =   s54[CREATE TABLE t1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  41 Halt             0    0    0               00 
SQL: [;
CREATE TABLE x(t6, t2);]
VDBE Trace:
   0 Init             0   30    0               00 Start at 30
  30 Transaction      0    1    1 0             01 usesStmtJournal=0
  31 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:2
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:2
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  18 IsNull           5   26    0               00 if r[5]==NULL goto 26
REG[5] =  i:2
  19 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  20 String8          0    7    0 x             00 r[7]='x'
REG[7] =   t1[x](8)
  21 String8          0    8    0 x             00 r[8]='x'
REG[8] =   t1[x](8)
  22 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  23 String8          0   10    0 CREATE TABLE x(t6, t2) 00 r[10]='CREATE TABLE x(t6, t2)'
REG[10] =   t22[CREATE TABLE x(](8)
  24 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s36[06170F0F01397461626C657878034352.....9tablexx.CR](8)
  25 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s36[06170F0F01397461626C657878034352.....9tablexx.CR](8)
REG[5] =  i:2
  26 Close            1    0    0               00 
  27 SetCookie        0    1    2               00 
  28 ParseSchema      0    0    0 tbl_name='x' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    2 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x             00 r[2]='x'
REG[2] =   t1[x](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[x](8)
REG[1] =   s1[x](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[x](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:3
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s22[CREATE TABLE x(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[x](8)
REG[6] =  i:3
REG[7] =   s22[CREATE TABLE x(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  29 Halt             0    0    0               00 
SQL: [;
PRAGMA count_changes = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [CREATE TEMP TRIGGER c INSERT ON t1 BEGIN 
      INSERT INTO t1(a, a, a) VALUES(new.a, new.a, new.a);
    END;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    1    0 0             01 usesStmtJournal=0
  17 TableLock        1    1    1 sqlite_temp_master 00 iDb=1 root=1 write=1
  18 Goto             0    1    0               00 
   1 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   2 OpenWrite        0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   5 String8          0    3    0 c             00 r[3]='c'
REG[3] =   t1[c](8)
   6 String8          0    4    0 t1            00 r[4]='t1'
REG[4] =   t2[t1](8)
   7 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   8 String8          0    6    0 CREATE TRIGGER c INSERT ON t1 BEGIN 
      INSERT INTO t1(a, a, a) VALUES(new.a, new.a, new.a);
    END 00 r[6]='CREATE TRIGGER c INSERT ON t1 BEGIN 
      INSERT INTO t1(a, a, a) VALUES(new.a, new.a, new.a
REG[6] =   t103[CREATE TRIGGER ](8)
   9 MakeRecord       2    5    8 BBBDB         00 r[8]=mkrec(r[2..6])
REG[8] =  s121[071B0F1101815B747269676765726374......[triggerct](8)
  10 Insert           0    8    1               18 intkey=r[1] data=r[8]
REG[8] =  s121[071B0F1101815B747269676765726374......[triggerct](8)
REG[1] =  i:1
  11 AddImm           7    1    0               00 r[7]=r[7]+1
REG[7] =  i:0
  12 Close            0    0    0               00 
  13 SetCookie        1    1    1               00 
  14 ParseSchema      1    0    0 type='trigger' AND name='c' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      1    0    1 0             00 usesStmtJournal=0
  17 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  18 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  19 String8          0    4    0 c             00 r[4]='c'
REG[4] =   t1[c](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    3               00 r[3]=sqlite_temp_master.name
REG[3] =   s1[c](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t1[c](8)
REG[3] =   s1[c](8)
   9 Copy             3    5    0               00 r[5]=r[3]
REG[5] =   s1[c](8)
  10 Column           0    3    6               00 r[6]=sqlite_temp_master.rootpage
REG[6] =  i:0
  11 Column           0    4    7               00 r[7]=sqlite_temp_master.sql
REG[7] =   s103[CREATE TRIGGER ](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[c](8)
REG[6] =  i:0
REG[7] =   s103[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [INSERT INTO x VALUES(19,6);]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    2 0             01 usesStmtJournal=0
  13 TableLock        0    3    1 x             00 iDb=0 root=3 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    3    0 2             00 root=3 iDb=0; x
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   4 Integer         19    2    0               00 r[2]=19
REG[2] =  i:19
   5 Integer          6    3    0               00 r[3]=6
REG[3] =  i:6
   6 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301011306.....](8)
   7 Insert           0    5    1 x             1B intkey=r[1] data=r[5]
REG[5] =  s5[0301011306.....](8)
REG[1] =  i:1
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [INSERT INTO x VALUES(9,5);]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    2 0             01 usesStmtJournal=0
  13 TableLock        0    3    1 x             00 iDb=0 root=3 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    3    0 2             00 root=3 iDb=0; x
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   4 Integer          9    2    0               00 r[2]=9
REG[2] =  i:9
   5 Integer          5    3    0               00 r[3]=5
REG[3] =  i:5
   6 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s5[0301010905.....](8)
   7 Insert           0    5    1 x             1B intkey=r[1] data=r[5]
REG[5] =  s5[0301010905.....](8)
REG[1] =  i:2
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    2 0             01 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE x(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:3
REG[3] =   s22[CREATE TABLE x(](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [;
SELECT
    SrcWord, t1.a
    FROM 
      (SELECT 'FACTORING' AS SrcWord UNION SELECT 'SWIMMING' AS SrcWord )
    LEFT JOIN 
      t1
    WHERE t1.a= (
      SELECT BeginningId FROM (
        SELECT SrcWord, a.a as BeginningId, a.a || E.a As Connected
        FROM t1 a LEFT JOIN t1 E ON a.a=E.a
        WHERE Connected=SrcWord LIMIT 1
      )
    )
;]
VDBE Trace:
   0 Init             0   83    0               00 Start at 83
  83 Transaction      0    0    2 0             01 usesStmtJournal=0
  84 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  85 Goto             0    1    0               00 
   1 InitCoroutine    1   15    2               00 sqlite_sq_2435900
  15 OpenRead         6    2    0 k(2,,)        02 root=2 iDb=0; sqlite_autoindex_t1_1
  16 Explain          0    0    0 SCAN SUBQUERY 1 00 
  17 InitCoroutine    1    0    2               00 
  18 Yield            1   81    0               00 next row of "sqlite_sq_2435900"
REG[1] =  i:1
REG[1] =  i:18
   2 OpenEphemeral    5    1    0 k(1,B)        00 nColumn=1
   3 String8          0    2    0 FACTORING     00 r[2]='FACTORING'
REG[2] =   t9[FACTORING](8)
   4 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s11[021F464143544F52494E47..FACTORING](8)
   5 IdxInsert        5    3    0               00 key=r[3]
REG[3] =  s11[021F464143544F52494E47..FACTORING](8)
   6 String8          0    2    0 SWIMMING      00 r[2]='SWIMMING'
REG[2] =   t8[SWIMMING](8)
   7 MakeRecord       2    1    3               00 r[3]=mkrec(r[2])
REG[3] =  s10[021D5357494D4D494E47..SWIMMING](8)
   8 IdxInsert        5    3    0               00 key=r[3]
REG[3] =  s10[021D5357494D4D494E47..SWIMMING](8)
   9 Rewind           5   13    0               00 
  10 Column           5    0    4               00 r[4]=SrcWord
REG[4] =   s9[FACTORING](8)
  11 Yield            1    0    0               00 
REG[1] =  i:18
REG[1] =  i:11
  19 Explain          0    1    1 SEARCH TABLE t1 USING PRIMARY KEY (a=?) 00 
  20 Integer          0    5    0               00 r[5]=0; init LEFT JOIN no-match flag
REG[5] =  i:0
  21 Null             0    7    0               00 r[7]=NULL; Init subquery result
REG[7] =  NULL
  22 InitCoroutine    8   52   23               00 sqlite_sq_2435680
  52 Integer          1   19    0               00 r[19]=1; LIMIT counter
REG[19] =  i:1
  53 Explain          4    0    0 SCAN SUBQUERY 5 00 
  54 InitCoroutine    8    0   23               00 
  55 Yield            8   59    0               00 next row of "sqlite_sq_2435680"
REG[8] =  i:22
REG[8] =  i:55
  23 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  24 OpenRead         7    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  25 OpenRead         8    2    0 k(2,,)        02 root=2 iDb=0; sqlite_autoindex_t1_1
  26 Explain          5    0    0 SCAN TABLE t1 AS a 00 
  27 Rewind           7   49   10 0             00 
  49 Close            7    0    0               00 
  50 Close            8    0    0               00 
  51 EndCoroutine     8    0    0               00 
REG[8] =  i:55
  59 IsNull           7   77    0               00 if r[7]==NULL goto 77
REG[7] =  NULL
  77 IfPos            5   80    0               00 if r[5]>0 then r[5]-=0, goto 80
REG[5] =  i:0
  78 NullRow          6    0    0               00 
  79 Goto             0   62    0               00 
  62 Integer          1    5    0               00 r[5]=1; record LEFT JOIN hit
REG[5] =  i:1
  63 Column           6    0    6               00 r[6]=t1.a
REG[6] =  NULL
  64 Null             0   21    0               00 r[21]=NULL; Init subquery result
REG[21] =  NULL
  65 Integer          1   22    0               00 r[22]=1; LIMIT counter
REG[22] =  i:1
  66 Explain          6    0    0 SCAN SUBQUERY 5 00 
  67 InitCoroutine    8    0   23               00 
  68 Yield            8   72    0               00 next row of "sqlite_sq_2435680"
REG[8] =  i:22
REG[8] =  i:68
  23 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  24 OpenRead         7    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  25 OpenRead         8    2    0 k(2,,)        02 root=2 iDb=0; sqlite_autoindex_t1_1
  26 Explain          5    0    0 SCAN TABLE t1 AS a 00 
  27 Rewind           7   49   10 0             00 
  49 Close            7    0    0               00 
  50 Close            8    0    0               00 
  51 EndCoroutine     8    0    0               00 
REG[8] =  i:68
  72 Ne              21   76    6 (BINARY)      51 if r[21]!=r[6] goto 76
REG[21] =  NULL
REG[6] =  NULL
  76 Next             6   61    0               00 
  77 IfPos            5   80    0               00 if r[5]>0 then r[5]-=0, goto 80
REG[5] =  i:1
  80 Goto             0   18    0               00 
  18 Yield            1   81    0               00 next row of "sqlite_sq_2435900"
REG[1] =  i:11
REG[1] =  i:18
  12 Next             5   10    0               00 
  10 Column           5    0    4               00 r[4]=SrcWord
REG[4] =   s8[SWIMMING](8)
  11 Yield            1    0    0               00 
REG[1] =  i:18
REG[1] =  i:11
  19 Explain          0    1    1 SEARCH TABLE t1 USING PRIMARY KEY (a=?) 00 
  20 Integer          0    5    0               00 r[5]=0; init LEFT JOIN no-match flag
REG[5] =  i:0
  21 Null             0    7    0               00 r[7]=NULL; Init subquery result
REG[7] =  NULL
  22 InitCoroutine    8   52   23               00 sqlite_sq_2435680
  52 Integer          1   19    0               00 r[19]=1; LIMIT counter
REG[19] =  i:1
  53 Explain          4    0    0 SCAN SUBQUERY 5 00 
  54 InitCoroutine    8    0   23               00 
  55 Yield            8   59    0               00 next row of "sqlite_sq_2435680"
REG[8] =  i:22
REG[8] =  i:55
  23 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  24 OpenRead         7    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  25 OpenRead         8    2    0 k(2,,)        02 root=2 iDb=0; sqlite_autoindex_t1_1
  26 Explain          5    0    0 SCAN TABLE t1 AS a 00 
  27 Rewind           7   49   10 0             00 
  49 Close            7    0    0               00 
  50 Close            8    0    0               00 
  51 EndCoroutine     8    0    0               00 
REG[8] =  i:55
  59 IsNull           7   77    0               00 if r[7]==NULL goto 77
REG[7] =  NULL
  77 IfPos            5   80    0               00 if r[5]>0 then r[5]-=0, goto 80
REG[5] =  i:0
  78 NullRow          6    0    0               00 
  79 Goto             0   62    0               00 
  62 Integer          1    5    0               00 r[5]=1; record LEFT JOIN hit
REG[5] =  i:1
  63 Column           6    0    6               00 r[6]=t1.a
REG[6] =  NULL
  64 Null             0   21    0               00 r[21]=NULL; Init subquery result
REG[21] =  NULL
  65 Integer          1   22    0               00 r[22]=1; LIMIT counter
REG[22] =  i:1
  66 Explain          6    0    0 SCAN SUBQUERY 5 00 
  67 InitCoroutine    8    0   23               00 
  68 Yield            8   72    0               00 next row of "sqlite_sq_2435680"
REG[8] =  i:22
REG[8] =  i:68
  23 Integer          1    9    0               00 r[9]=1; LIMIT counter
REG[9] =  i:1
  24 OpenRead         7    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  25 OpenRead         8    2    0 k(2,,)        02 root=2 iDb=0; sqlite_autoindex_t1_1
  26 Explain          5    0    0 SCAN TABLE t1 AS a 00 
  27 Rewind           7   49   10 0             00 
  49 Close            7    0    0               00 
  50 Close            8    0    0               00 
  51 EndCoroutine     8    0    0               00 
REG[8] =  i:68
  72 Ne              21   76    6 (BINARY)      51 if r[21]!=r[6] goto 76
REG[21] =  NULL
REG[6] =  NULL
  76 Next             6   61    0               00 
  77 IfPos            5   80    0               00 if r[5]>0 then r[5]-=0, goto 80
REG[5] =  i:1
  80 Goto             0   18    0               00 
  18 Yield            1   81    0               00 next row of "sqlite_sq_2435900"
REG[1] =  i:11
REG[1] =  i:18
  12 Next             5   10    0               00 
  13 Close            5    0    0               00 
  14 EndCoroutine     1    0    0               00 
REG[1] =  i:18
  81 Close            6    0    0               00 
  82 Halt             0    0    0               00 
SQL: [CREATE TABLE x1(x2, CHECK( xyzzy.x1.x2 BETWEEN 5 AND 10 ));]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    2 0             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:3
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:3
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:3
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 x1            00 r[7]='x1'
REG[7] =   t2[x1](8)
  22 String8          0    8    0 x1            00 r[8]='x1'
REG[8] =   t2[x1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  24 String8          0   10    0 CREATE TABLE x1(x2, CHECK( xyzzy.x1.x2 BETWEEN 5 AND 10 )) 00 r[10]='CREATE TABLE x1(x2, CHECK( xyzzy.x1.x2 BETWEEN 5 AND 10 ))'
REG[10] =   t58[CREATE TABLE x1](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[071711110181017461626C6578317831.......tablex1x1](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[071711110181017461626C6578317831.......tablex1x1](8)
REG[5] =  i:3
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    3               00 
  30 ParseSchema      0    0    0 tbl_name='x1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 0             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 x1            00 r[2]='x1'
REG[2] =   t2[x1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[x1](8)
REG[1] =   s2[x1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s2[x1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s58[CREATE TABLE x1](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[x1](8)
REG[6] =  i:4
REG[7] =   s58[CREATE TABLE x1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [INSERT INTO x VALUES(9,512);]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    1    3 0             01 usesStmtJournal=0
  13 TableLock        0    3    1 x             00 iDb=0 root=3 write=1
  14 Goto             0    1    0               00 
   1 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   2 OpenWrite        0    3    0 2             00 root=3 iDb=0; x
   3 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   4 Integer          9    2    0               00 r[2]=9
REG[2] =  i:9
   5 Integer        512    3    0               00 r[3]=512
REG[3] =  i:512
   6 MakeRecord       2    2    5               00 r[5]=mkrec(r[2..3])
REG[5] =  s6[030102090200......](8)
   7 Insert           0    5    1 x             1B intkey=r[1] data=r[5]
REG[5] =  s6[030102090200......](8)
REG[1] =  i:3
   8 AddImm           4    1    0               00 r[4]=r[4]+1
REG[4] =  i:0
   9 Close            0    0    0               00 
  10 ResultRow        4    1    0               00 output=r[4]
REG[4] =  i:1
  11 Halt             0    0    0               00 
SQL: [SELECT * FROM x ORDER BY t2;]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    0    3 0             01 usesStmtJournal=0
  21 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  22 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    3    0 2             00 root=3 iDb=0; x
   3 Explain          0    0    0 SCAN TABLE x  00 
   4 Rewind           0   11    0               00 
   5 Column           0    0    2               00 r[2]=x.t6
REG[2] =  i:19
   6 Column           0    1    3               00 r[3]=x.t2
REG[3] =  i:6
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:6
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s7[04010101061306.......](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s7[04010101061306.......](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=x.t6
REG[2] =  i:9
   6 Column           0    1    3               00 r[3]=x.t2
REG[3] =  i:5
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:5
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s7[04010101050905.......](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s7[04010101050905.......](8)
  10 Next             0    5    0               01 
   5 Column           0    0    2               00 r[2]=x.t6
REG[2] =  i:9
   6 Column           0    1    3               00 r[3]=x.t2
REG[3] =  i:512
   7 Copy             3    1    0               00 r[1]=r[3]
REG[1] =  i:512
   8 MakeRecord       1    3    4               00 r[4]=mkrec(r[1..3])
REG[4] =  s9[040201020200090200.........](8)
   9 SorterInsert     1    4    0               00 
REG[4] =  s9[040201020200090200.........](8)
  10 Next             0    5    0               01 
  11 Close            0    0    0               00 
  12 OpenPseudo       2    5    4               00 4 columns in r[5]
  13 SorterSort       1   19    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=t6
REG[2] =  i:9
  16 Column           2    2    3               00 r[3]=t2
REG[3] =  i:5
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:9
REG[3] =  i:5
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=t6
REG[2] =  i:19
  16 Column           2    2    3               00 r[3]=t2
REG[3] =  i:6
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:19
REG[3] =  i:6
  18 SorterNext       1   14    0               00 
  14 SorterData       1    5    2               00 r[5]=data
  15 Column           2    1    2               00 r[2]=t6
REG[2] =  i:9
  16 Column           2    2    3               00 r[3]=t2
REG[3] =  i:512
  17 ResultRow        2    2    0               00 output=r[2..3]
REG[2] =  i:9
REG[3] =  i:512
  18 SorterNext       1   14    0               00 
  19 Halt             0    0    0               00 
SQL: [PRAGMA default_cache_size;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Transaction      0    0    0               00 
   2 ReadCookie       0    1    3               00 
REG[1] =  i:0
   3 IfPos            1    9    0               00 if r[1]>0 then r[1]-=0, goto 9
REG[1] =  i:0
   4 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   5 Subtract         1    2    1               00 r[1]=r[2]-r[1]
REG[1] =  i:0
REG[2] =  i:0
REG[1] =  i:0
   6 IfPos            1    9    0               00 if r[1]>0 then r[1]-=0, goto 9
REG[1] =  i:0
   7 Integer       -2000    1    0               00 r[1]=-2000
REG[1] =  i:-2000
   8 Noop             0    0    0               00 
   9 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:-2000
  10 Halt             0    0    0               00 
SQL: [ALTER TABLE x1 RENAME TO y ;]
VDBE Trace:
   0 Init             0   49    0               00 Start at 49
  49 Transaction      0    1    3 0             01 usesStmtJournal=0
  50 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  51 String8          0    9    0 x1            00 r[9]='x1'
REG[9] =   t2[x1](8)
  52 String8          0   11    0 table         00 r[11]='table'
REG[11] =   t5[table](8)
  53 String8          0   13    0 index         00 r[13]='index'
REG[13] =   t5[index](8)
  54 String8          0   14    0 trigger       00 r[14]='trigger'
REG[14] =   t7[trigger](8)
  55 String8          0   16    0 sqlite_autoindex% 00 r[16]='sqlite_autoindex%'
REG[16] =   t17[sqlite_autoinde](8)
  56 String8          0   12    0 sqlite_autoindex_ 00 r[12]='sqlite_autoindex_'
REG[12] =   t17[sqlite_autoinde](8)
  57 String8          0   25    0 y             00 r[25]='y'
REG[25] =   t1[y](8)
  58 Concat          25   12   18               00 r[18]=r[12]+r[25]
REG[25] =   t1[y](8)
REG[12] =   t17[sqlite_autoinde](8)
REG[18] =   s18[sqlite_autoinde](8)
  59 Integer          2   25    0               00 r[25]=2
REG[25] =  i:2
  60 Integer         18   12    0               00 r[12]=18
REG[12] =  i:18
  61 Add             12   25   20               00 r[20]=r[12]+r[25]
REG[12] =  i:18
REG[25] =  i:2
REG[20] =  i:20
  62 String8          0   22    0 y             00 r[22]='y'
REG[22] =   t1[y](8)
  63 String8          0   24    0 y             00 r[24]='y'
REG[24] =   t1[y](8)
  64 Goto             0    1    0               00 
   1 SetCookie        0    1    4               00 
   2 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   3 OpenRead         0    1    0 3             00 root=1 iDb=0; sqlite_master
   4 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   5 Rewind           0   15    0               00 
   6 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s2[t1](8)
   7 Ne               9   14    8 (NOCASE)      52 if r[9]!=r[8] goto 14
REG[9] =   t2[x1](8)
REG[8] =   s2[t1](8)
  14 Next             0    6    0               01 
   6 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s1[x](8)
   7 Ne               9   14    8 (NOCASE)      52 if r[9]!=r[8] goto 14
REG[9] =   t2[x1](8)
REG[8] =   s1[x](8)
  14 Next             0    6    0               01 
   6 Column           0    2    8               00 r[8]=sqlite_master.tbl_name
REG[8] =   s2[x1](8)
   7 Ne               9   14    8 (NOCASE)      52 if r[9]!=r[8] goto 14
REG[9] =   t2[x1](8)
REG[8] =   s2[x1](8)
   8 Column           0    0   10               00 r[10]=sqlite_master.type
REG[10] =   s5[table](8)
   9 Eq              11   12   10 (BINARY)      42 if r[11]==r[10] goto 12
REG[11] =   t5[table](8)
REG[10] =   s5[table](8)
  12 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
  13 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:3
  14 Next             0    6    0               01 
  15 Close            0    0    0               00 
  16 Integer          0   15    0               00 r[15]=0
REG[15] =  i:0
  17 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
  18 RowSetRead       1   45    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  19 NotExists        0   18    2               00 intkey=r[2]
REG[2] =  i:3
  20 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
  21 Ne              11   24    3 (BINARY)      52 if r[11]!=r[3] goto 24
REG[11] =   t5[table](8)
REG[3] =   s5[table](8)
  22 String8          0    4    0 y             00 r[4]='y'
REG[4] =   t1[y](8)
  23 Goto             0   33    0               00 
  33 String8          0    5    0 y             00 r[5]='y'
REG[5] =   t1[y](8)
  34 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:4
  35 Ne              14   39    3 (BINARY)      52 if r[14]!=r[3] goto 39
REG[14] =   t7[trigger](8)
REG[3] =   s5[table](8)
  39 Column           0    4   23               00 r[23]=sqlite_master.sql
REG[23] =   s58[CREATE TABLE x1](8)
  40 Function0        2   23    7 sqlite_rename_table(2) 02 r[7]=func(r[23..24])
REG[23] =   s58[CREATE TABLE x1](8)
REG[24] =   t1[y](8)
REG[7] =   s59[CREATE TABLE "y](8)
  41 MakeRecord       3    5    8 BBBDB         00 r[8]=mkrec(r[3..7])
REG[8] =  s74[07170F0F0181037461626C6579790443.......tableyy.C](8)
  42 Insert           0    8    2               00 intkey=r[2] data=r[8]
REG[8] =  s74[07170F0F0181037461626C6579790443.......tableyy.C](8)
REG[2] =  i:3
  43 AddImm          15    1    0               00 r[15]=r[15]+1
REG[15] =  i:0
  44 Goto             0   18    0               00 
  18 RowSetRead       1   45    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:3
  45 Close            0    0    0               00 
  46 DropTable        0    0    0 x1            00 
  47 ParseSchema      0    0    0 tbl_name='y'  00 
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    4 0             00 usesStmtJournal=0
  15 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  16 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  17 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[y](8)
REG[1] =   s1[x](8)
  11 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[y](8)
   6 Ne               2   11    1 (BINARY)      52 if r[2]!=r[1] goto 11
REG[2] =   t1[y](8)
REG[1] =   s1[y](8)
   7 Column           0    1    3               00 r[3]=sqlite_master.name
REG[3] =   s1[y](8)
   8 Column           0    3    4               00 r[4]=sqlite_master.rootpage
REG[4] =  i:4
   9 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s59[CREATE TABLE "y](8)
  10 ResultRow        3    3    0               00 output=r[3..5]
REG[3] =   s1[y](8)
REG[4] =  i:4
REG[5] =   s59[CREATE TABLE "y](8)
  11 Next             0    5    0               01 
  12 Close            0    0    0               00 
  13 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    3 1             00 usesStmtJournal=0
  13 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s54[CREATE TABLE t1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t1](8)
REG[2] =  i:2
REG[3] =   s54[CREATE TABLE t1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s22[CREATE TABLE x(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  i:3
REG[3] =   s22[CREATE TABLE x(](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[x1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:4
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s58[CREATE TABLE x1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[x1](8)
REG[2] =  i:4
REG[3] =   s58[CREATE TABLE x1](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 1             00 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s103[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:0
REG[3] =   s103[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [PRAGMA journal_mode = WAL ;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 JournalMode      1    1    5               00 
REG[1] =   t6[delete](8)
   2 JournalMode      0    1    5               00 
REG[1] =   t6[memory](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t6[memory](8)
   4 Halt             0    0    0               00 
SQL: [PRAGMA temp.cache_size = 1;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Halt             0    0    0               00 
SQL: [SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid;]
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      1    0    1 1             01 usesStmtJournal=0
  13 TableLock        1    1    0 sqlite_temp_master 00 iDb=1 root=1 write=0
  14 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          0    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s1[c](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:0
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s103[CREATE TRIGGER ](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[c](8)
REG[2] =  i:0
REG[3] =   s103[CREATE TRIGGER ](8)
   9 Next             0    5    0               01 
  10 Close            0    0    0               00 
  11 Halt             0    0    0               00 
SQL: [ROLLBACK;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 AutoCommit       1    1    0               00 
SQL: [;
SELECT name, rootpage, sql FROM 'main'.sqlite_master WHERE tbl_name='y' AND type!='trigger' ORDER BY rowid;]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    3 1             01 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 y             00 r[2]='y'
REG[2] =   t1[y](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[y](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
SQL: [;
CREATE TABLE d(e,f,t3b);]
VDBE Trace:
   0 Init             0   32    0               00 Start at 32
  32 Transaction      0    1    3 1             01 usesStmtJournal=0
  33 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  34 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:5
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:4
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:4
  16 NotExists        1   18    1               00 intkey=r[1]; pk
REG[1] =  i:4
  17 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:4
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:4
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 d             00 r[7]='d'
REG[7] =   t1[d](8)
  22 String8          0    8    0 d             00 r[8]='d'
REG[8] =   t1[d](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:5
  24 String8          0   10    0 CREATE TABLE d(e,f,t3b) 00 r[10]='CREATE TABLE d(e,f,t3b)'
REG[10] =   t23[CREATE TABLE d(](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[06170F0F013B7461626C656464054352.....;tabledd.CR](8)
  26 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[06170F0F013B7461626C656464054352.....;tabledd.CR](8)
REG[5] =  i:4
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            1    0    0               00 
  29 SetCookie        0    1    4               00 
  30 ParseSchema      0    0    0 tbl_name='d' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    4 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 d             00 r[2]='d'
REG[2] =   t1[d](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t1[d](8)
REG[1] =   s1[d](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s1[d](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:5
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s23[CREATE TABLE d(](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s1[d](8)
REG[6] =  i:5
REG[7] =   s23[CREATE TABLE d(](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 Halt             0    0    0               00 
SQL: [CREATE UNIQUE INDEX p1 
      ON t1(a, a, a);]
VDBE Trace:
   0 Init             0   41    0               00 Start at 41
  41 Transaction      0    1    4 1             01 usesStmtJournal=1
  42 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  43 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  44 Goto             0    1    0               00 
   1 Noop             0   40    0               00 
   2 CreateIndex      0    1    0               00 r[1]=root iDb=0
REG[1] =  i:6
   3 Integer          0    8    0               00 r[8]=0
REG[8] =  i:0
   4 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   5 NewRowid         0    2    0               00 r[2]=rowid
REG[2] =  i:5
   6 String8          0    3    0 index         00 r[3]='index'
REG[3] =   t5[index](8)
   7 String8          0    4    0 p1            00 r[4]='p1'
REG[4] =   t2[p1](8)
   8 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
   9 Copy             1    6    0               00 r[6]=r[1]
REG[6] =  i:6
  10 String8          0    7    0 CREATE UNIQUE INDEX p1 
      ON t1(a, a, a) 00 r[7]='CREATE UNIQUE INDEX p1 
      ON t1(a, a, a)'
REG[7] =   t44[CREATE UNIQUE I](8)
  11 MakeRecord       3    5    9 BBBDB         00 r[9]=mkrec(r[3..7])
REG[9] =  s60[061711110165696E6465787031743106.....eindexp1t1.](8)
  12 Insert           0    9    2               18 intkey=r[2] data=r[9]
REG[9] =  s60[061711110165696E6465787031743106.....eindexp1t1.](8)
REG[2] =  i:5
  13 AddImm           8    1    0               00 r[8]=r[8]+1
REG[8] =  i:0
  14 Close            0    0    0               00 
  15 SorterOpen       3    0    3 k(3,,,)       00 
  16 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; t1
  17 Rewind           1   25    0               00 
  25 OpenWrite        2    1    0 k(3,,,)       11 root=1 iDb=0
  26 SorterSort       3   34    0               00 
  34 Close            1    0    0               00 
  35 Close            2    0    0               00 
  36 Close            3    0    0               00 
  37 SetCookie        0    1    5               00 
  38 ParseSchema      0    0    0 name='p1' AND type='index' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    5 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 p1            00 r[2]='p1'
REG[2] =   t2[p1](8)
  19 String8          0    4    0 index         00 r[4]='index'
REG[4] =   t5[index](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[p1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[p1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[p1](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[p1](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[p1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t2[p1](8)
REG[1] =   s2[p1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[index](8)
   8 Ne               4   13    3 (BINARY)      52 if r[4]!=r[3] goto 13
REG[4] =   t5[index](8)
REG[3] =   s5[index](8)
   9 Copy             1    5    0               00 r[5]=r[1]
REG[5] =   s2[p1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:6
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s44[CREATE UNIQUE I](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s2[p1](8)
REG[6] =  i:6
REG[7] =   s44[CREATE UNIQUE I](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  39 Expire           0    0    0               00 
  40 Halt             0    0    0               00 
SQL: [SELECT typeof( 
  CAST(-9223372036854775809.0 AS INT)
),  
  CAST(-9223372036854775809.0 AS INT)
;]
VDBE Trace:
   0 Init             0    6    0               00 Start at 6
   6 Real             0    3    0 -9.223372036854776e+18 00 r[3]=-9.223372036854776e+18
REG[3] =  r:-9.22337e+18
   7 Cast             3   68    0               00 affinity(r[3])
REG[3] =  r:-9.22337e+18
   8 Goto             0    1    0               00 
   1 Function0        1    3    1 typeof(1)     01 r[1]=func(r[3])
REG[3] =  i:-9223372036854775808
REG[1] =   t7[integer](8)
   2 Real             0    2    0 -9.223372036854776e+18 00 r[2]=-9.223372036854776e+18
REG[2] =  r:-9.22337e+18
   3 Cast             2   68    0               00 affinity(r[2])
REG[2] =  r:-9.22337e+18
   4 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =   t7[integer](8)
REG[2] =  i:-9223372036854775808
   5 Halt             0    0    0               00 
SQL: [;
SELECT t3.t2 FROM 
    (SELECT t2,max(t2) AS t2 FROM x WHERE t2>=5 GROUP BY t2) AS t2
    CROSS JOIN x AS t3
  WHERE t2.t2=t3.t2 AND t2.t2=t3.t2
  ORDER BY t3.t2;]
VDBE Trace:
   0 Init             0   80    0               00 Start at 80
  80 Transaction      0    0    5 1             01 usesStmtJournal=0
  81 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  82 Integer          5   11    0               00 r[11]=5
REG[11] =  i:5
  83 Goto             0    1    0               00 
   1 InitCoroutine    1   47    2               00 sqlite_sq_2435E80
  47 SorterOpen       5    3    0 k(1,B)        00 
  48 OpenRead         2    3    0 2             00 root=3 iDb=0; x
  49 Explain          0    0    0 SCAN SUBQUERY 1 AS t2 00 
  50 InitCoroutine    1    0    2               00 
  51 Yield            1   73    0               00 next row of "sqlite_sq_2435E80"
REG[1] =  i:1
REG[1] =  i:51
   2 SorterOpen       3    1    0 k(1,B)        00 
   3 Integer          0    5    0               00 r[5]=0; clear abort flag
REG[5] =  i:0
   4 Integer          0    4    0               00 r[4]=0; indicate accumulator empty
REG[4] =  i:0
   5 Null             0    8    8               00 r[8..8]=NULL
REG[8] =  NULL
   6 Gosub            7   44    0               00 
REG[7] =  i:6
  44 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  45 Return           7    0    0               00 
REG[7] =  i:6
   7 OpenRead         1    3    0 2             00 root=3 iDb=0; x
   8 Explain          1    0    0 SCAN TABLE x  00 
   9 Rewind           1   16    0               00 
  10 Column           1    1   10               00 r[10]=x.t2
REG[10] =  i:6
  11 Lt              11   15   10 (BINARY)      51 if r[11]<r[10] goto 15
REG[11] =  i:5
REG[10] =  i:6
  12 Column           1    1   12               00 r[12]=x.t2
REG[12] =  i:6
  13 MakeRecord      12    1   10               00 r[10]=mkrec(r[12])
REG[10] =  s3[020106...](8)
  14 SorterInsert     3   10    0               00 
REG[10] =  s3[020106...](8)
  15 Next             1   10    0               01 
  10 Column           1    1   10               00 r[10]=x.t2
REG[10] =  i:5
  11 Lt              11   15   10 (BINARY)      51 if r[11]<r[10] goto 15
REG[11] =  i:5
REG[10] =  i:5
  12 Column           1    1   12               00 r[12]=x.t2
REG[12] =  i:5
  13 MakeRecord      12    1   10               00 r[10]=mkrec(r[12])
REG[10] =  s3[020105...](8)
  14 SorterInsert     3   10    0               00 
REG[10] =  s3[020105...](8)
  15 Next             1   10    0               01 
  10 Column           1    1   10               00 r[10]=x.t2
REG[10] =  i:512
  11 Lt              11   15   10 (BINARY)      51 if r[11]<r[10] goto 15
REG[11] =  i:5
REG[10] =  i:512
  12 Column           1    1   12               00 r[12]=x.t2
REG[12] =  i:512
  13 MakeRecord      12    1   10               00 r[10]=mkrec(r[12])
REG[10] =  s4[02020200....](8)
  14 SorterInsert     3   10    0               00 
REG[10] =  s4[02020200....](8)
  15 Next             1   10    0               01 
  16 Close            1    0    0               00 
  17 OpenPseudo       4   10    1               00 1 columns in r[10]
  18 SorterSort       3   46    0               00 GROUP BY sort
  19 SorterData       3   10    4               00 r[10]=data
  20 Column           4    0    9               00 r[9]=
REG[9] =  i:5
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  NULL
REG[9] =  i:5
  22 Jump            23   27   23               00 
  23 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:5
  24 Gosub            6   38    0               00 output one row
REG[6] =  i:24
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:0
  39 Return           6    0    0               00 
REG[6] =  i:24
  25 IfPos            5   46    0               00 if r[5]>0 then r[5]-=0, goto 46; check abort flag
REG[5] =  i:0
  26 Gosub            7   44    0               00 reset accumulator
REG[7] =  i:26
  44 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  45 Return           7    0    0               00 
REG[7] =  i:26
  27 Column           4    0   12               00 r[12]=
REG[12] =  i:5
  28 CollSeq         13    0    0 (BINARY)      00 
  29 AggStep0         0   12    3 max(1)        01 accum=r[3] step(r[12])
REG[12] =  i:5
  30 If              13   32    0               00 
REG[13] =  i:0
  31 Column           4    0    2               00 r[2]=
REG[2] =  i:5
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       3   19    0               00 
  19 SorterData       3   10    4               00 r[10]=data
  20 Column           4    0    9               00 r[9]=
REG[9] =  i:6
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:5
REG[9] =  i:6
  22 Jump            23   27   23               00 
  23 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:6
  24 Gosub            6   38    0               00 output one row
REG[6] =  i:24
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:1
  40 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  41 Copy             2   14    1               00 r[14..15]=r[2..3]
REG[14] =  i:5
REG[15] =  i:5
  42 Yield            1    0    0               00 
REG[1] =  i:51
REG[1] =  i:42
  52 Once             0   60    0               00 
  53 OpenAutoindex    6    2    0 k(2,B,)       00 nColumn=2; for x
  54 Rewind           2   60    0               00 
  55 Column           2    1   17               00 r[17]=x.t2
REG[17] =  i:6
  56 Rowid            2   18    0               00 r[18]=rowid
REG[18] =  i:1
  57 MakeRecord      17    2   16               00 r[16]=mkrec(r[17..18])
REG[16] =  s4[03010906....](8)
  58 IdxInsert        6   16    0               10 key=r[16]
REG[16] =  s4[03010906....](8)
  59 Next             2   55    0               03 
  55 Column           2    1   17               00 r[17]=x.t2
REG[17] =  i:5
  56 Rowid            2   18    0               00 r[18]=rowid
REG[18] =  i:2
  57 MakeRecord      17    2   16               00 r[16]=mkrec(r[17..18])
REG[16] =  s5[0301010502.....](8)
  58 IdxInsert        6   16    0               10 key=r[16]
REG[16] =  s5[0301010502.....](8)
  59 Next             2   55    0               03 
  55 Column           2    1   17               00 r[17]=x.t2
REG[17] =  i:512
  56 Rowid            2   18    0               00 r[18]=rowid
REG[18] =  i:3
  57 MakeRecord      17    2   16               00 r[16]=mkrec(r[17..18])
REG[16] =  s6[030201020003......](8)
  58 IdxInsert        6   16    0               10 key=r[16]
REG[16] =  s6[030201020003......](8)
  59 Next             2   55    0               03 
  60 Explain          0    1    1 SEARCH TABLE x AS t3 USING AUTOMATIC COVERING INDEX (t2=?) 00 
  61 Copy            14   19    0               00 r[19]=r[14]; sqlite_sq_2435E80.t2
REG[19] =  i:5
  62 IsNull          19   72    0               00 if r[19]==NULL goto 72
REG[19] =  i:5
  63 SeekGE           6   72   19 1             00 key=r[19]
REG[19] =  i:5
  64 IdxGT            6   72   19 1             00 key=r[19]
  65 Column           6    0   16               00 r[16]=x.t2
REG[16] =  i:5
  66 Ne              16   71   19 (BINARY)      51 if r[16]!=r[19] goto 71
REG[16] =  i:5
REG[19] =  i:5
  67 Copy            16   21    0               00 r[21]=r[16]
REG[21] =  i:5
  68 Copy            21   20    0               00 r[20]=r[21]
REG[20] =  i:5
  69 MakeRecord      20    2   22               00 r[22]=mkrec(r[20..21])
REG[22] =  s5[0301010505.....](8)
  70 SorterInsert     5   22    0               00 
REG[22] =  s5[0301010505.....](8)
  71 Next             6   64    0               00 
  64 IdxGT            6   72   19 1             00 key=r[19]
  72 Goto             0   51    0               00 
  51 Yield            1   73    0               00 next row of "sqlite_sq_2435E80"
REG[1] =  i:42
REG[1] =  i:51
  43 Return           6    0    0               00 end groupby result generator
REG[6] =  i:24
  25 IfPos            5   46    0               00 if r[5]>0 then r[5]-=0, goto 46; check abort flag
REG[5] =  i:0
  26 Gosub            7   44    0               00 reset accumulator
REG[7] =  i:26
  44 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  45 Return           7    0    0               00 
REG[7] =  i:26
  27 Column           4    0   12               00 r[12]=
REG[12] =  i:6
  28 CollSeq         13    0    0 (BINARY)      00 
  29 AggStep          0   12    3 max(1)        01 accum=r[3] step(r[12])
REG[12] =  i:6
  30 If              13   32    0               00 
REG[13] =  i:0
  31 Column           4    0    2               00 r[2]=
REG[2] =  i:6
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       3   19    0               00 
  19 SorterData       3   10    4               00 r[10]=data
  20 Column           4    0    9               00 r[9]=
REG[9] =  i:512
  21 Compare          8    9    1 k(1,B)        00 r[8] <-> r[9]
REG[8] =  i:6
REG[9] =  i:512
  22 Jump            23   27   23               00 
  23 Move             9    8    1               00 r[8]=r[9]
REG[8] =  i:512
  24 Gosub            6   38    0               00 output one row
REG[6] =  i:24
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:1
  40 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  41 Copy             2   14    1               00 r[14..15]=r[2..3]
REG[14] =  i:6
REG[15] =  i:6
  42 Yield            1    0    0               00 
REG[1] =  i:51
REG[1] =  i:42
  52 Once             0   60    0               00 
  60 Explain          0    1    1 SEARCH TABLE x AS t3 USING AUTOMATIC COVERING INDEX (t2=?) 00 
  61 Copy            14   19    0               00 r[19]=r[14]; sqlite_sq_2435E80.t2
REG[19] =  i:6
  62 IsNull          19   72    0               00 if r[19]==NULL goto 72
REG[19] =  i:6
  63 SeekGE           6   72   19 1             00 key=r[19]
REG[19] =  i:6
  64 IdxGT            6   72   19 1             00 key=r[19]
  65 Column           6    0   16               00 r[16]=x.t2
REG[16] =  i:6
  66 Ne              16   71   19 (BINARY)      51 if r[16]!=r[19] goto 71
REG[16] =  i:6
REG[19] =  i:6
  67 Copy            16   21    0               00 r[21]=r[16]
REG[21] =  i:6
  68 Copy            21   20    0               00 r[20]=r[21]
REG[20] =  i:6
  69 MakeRecord      20    2   22               00 r[22]=mkrec(r[20..21])
REG[22] =  s5[0301010606.....](8)
  70 SorterInsert     5   22    0               00 
REG[22] =  s5[0301010606.....](8)
  71 Next             6   64    0               00 
  64 IdxGT            6   72   19 1             00 key=r[19]
  72 Goto             0   51    0               00 
  51 Yield            1   73    0               00 next row of "sqlite_sq_2435E80"
REG[1] =  i:42
REG[1] =  i:51
  43 Return           6    0    0               00 end groupby result generator
REG[6] =  i:24
  25 IfPos            5   46    0               00 if r[5]>0 then r[5]-=0, goto 46; check abort flag
REG[5] =  i:0
  26 Gosub            7   44    0               00 reset accumulator
REG[7] =  i:26
  44 Null             0    2    3               00 r[2..3]=NULL
REG[2] =  NULL
  45 Return           7    0    0               00 
REG[7] =  i:26
  27 Column           4    0   12               00 r[12]=
REG[12] =  i:512
  28 CollSeq         13    0    0 (BINARY)      00 
  29 AggStep          0   12    3 max(1)        01 accum=r[3] step(r[12])
REG[12] =  i:512
  30 If              13   32    0               00 
REG[13] =  i:0
  31 Column           4    0    2               00 r[2]=
REG[2] =  i:512
  32 Integer          1    4    0               00 r[4]=1; indicate data in accumulator
REG[4] =  i:1
  33 SorterNext       3   19    0               00 
  34 Gosub            6   38    0               00 output final row
REG[6] =  i:34
  38 IfPos            4   40    0               00 if r[4]>0 then r[4]-=0, goto 40; Groupby result generator entry point
REG[4] =  i:1
  40 AggFinal         3    1    0 max(1)        00 accum=r[3] N=1
  41 Copy             2   14    1               00 r[14..15]=r[2..3]
REG[14] =  i:512
REG[15] =  i:512
  42 Yield            1    0    0               00 
REG[1] =  i:51
REG[1] =  i:42
  52 Once             0   60    0               00 
  60 Explain          0    1    1 SEARCH TABLE x AS t3 USING AUTOMATIC COVERING INDEX (t2=?) 00 
  61 Copy            14   19    0               00 r[19]=r[14]; sqlite_sq_2435E80.t2
REG[19] =  i:512
  62 IsNull          19   72    0               00 if r[19]==NULL goto 72
REG[19] =  i:512
  63 SeekGE           6   72   19 1             00 key=r[19]
REG[19] =  i:512
  64 IdxGT            6   72   19 1             00 key=r[19]
  65 Column           6    0   16               00 r[16]=x.t2
REG[16] =  i:512
  66 Ne              16   71   19 (BINARY)      51 if r[16]!=r[19] goto 71
REG[16] =  i:512
REG[19] =  i:512
  67 Copy            16   21    0               00 r[21]=r[16]
REG[21] =  i:512
  68 Copy            21   20    0               00 r[20]=r[21]
REG[20] =  i:512
  69 MakeRecord      20    2   22               00 r[22]=mkrec(r[20..21])
REG[22] =  s7[03020202000200.......](8)
  70 SorterInsert     5   22    0               00 
REG[22] =  s7[03020202000200.......](8)
  71 Next             6   64    0               00 
  72 Goto             0   51    0               00 
  51 Yield            1   73    0               00 next row of "sqlite_sq_2435E80"
REG[1] =  i:42
REG[1] =  i:51
  43 Return           6    0    0               00 end groupby result generator
REG[6] =  i:34
  35 Goto             0   46    0               00 
  46 EndCoroutine     1    0    0               00 
REG[1] =  i:51
  73 OpenPseudo       7   23    3               00 3 columns in r[23]
  74 SorterSort       5   79    0               00 
  75 SorterData       5   23    7               00 r[23]=data
  76 Column           7    1   21               00 r[21]=t3.t2
REG[21] =  i:5
  77 ResultRow       21    1    0               00 output=r[21]
REG[21] =  i:5
  78 SorterNext       5   75    0               00 
  75 SorterData       5   23    7               00 r[23]=data
  76 Column           7    1   21               00 r[21]=t3.t2
REG[21] =  i:6
  77 ResultRow       21    1    0               00 output=r[21]
REG[21] =  i:6
  78 SorterNext       5   75    0               00 
  75 SorterData       5   23    7               00 r[23]=data
  76 Column           7    1   21               00 r[21]=t3.t2
REG[21] =  i:512
  77 ResultRow       21    1    0               00 output=r[21]
REG[21] =  i:512
  78 SorterNext       5   75    0               00 
  79 Halt             0    0    0               00 
SQL: [SAVEPOINT three;]
VDBE Trace:
   0 Init             0    0    0               00 Start at 0
   1 Savepoint        0    0    0 three         00 
   2 Halt             0    0    0               00 
SQL: [;
SELECT b-b=-1 FROM t1;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    5 1             01 usesStmtJournal=0
  12 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  13 Integer         -1    5    0               00 r[5]=-1
REG[5] =  i:-1
  14 Goto             0    1    0               00 
   1 OpenRead         1    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
   2 Explain          0    0    0 SCAN TABLE t1 00 
   3 Rewind           1    9    1 0             00 
   9 Close            1    0    0               00 
  10 Halt             0    0    0               00 
SQL: [;
ANALYZE sqlite_master;]
VDBE Trace:
   0 Init             0   35    0               00 Start at 35
  35 Transaction      0    1    5 1             01 usesStmtJournal=0
  36 TableLock        0    1    1 sqlite_master 00 iDb=0 root=1 write=1
  37 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateTable      0    2    0               00 r[2]=root iDb=0
REG[2] =  i:7
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......](8)
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......](8)
REG[1] =  i:6
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain          0    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 MustBeInt        1   18    0               00 
REG[1] =  i:6
  16 NotExists        3   18    1               00 intkey=r[1]; pk
REG[1] =  i:6
  17 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:6
  18 Integer          0   12    0               00 r[12]=0
REG[12] =  i:0
  19 IsNull           5   28    0               00 if r[5]==NULL goto 28
REG[5] =  i:6
  20 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  21 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  22 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  23 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:7
  24 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  25 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
  26 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit](8)
REG[5] =  i:6
  27 AddImm          12    1    0               00 r[12]=r[12]+1
REG[12] =  i:0
  28 Close            3    0    0               00 
  29 SetCookie        0    1    6               00 
  30 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    6 1             00 usesStmtJournal=0
  17 TableLock        0    1    0 sqlite_master 00 iDb=0 root=1 write=0
  18 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  19 String8          0    4    0 trigger       00 r[4]='trigger'
REG[4] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          0    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[x](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[x](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[x1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[x1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[d](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s1[d](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s2[t1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[2]!=r[1] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    3               00 r[3]=sqlite_master.type
REG[3] =   s5[table](8)
   8 Eq               4   13    3 (BINARY)      52 if r[4]==r[3] goto 13
REG[4] =   t7[trigger](8)
REG[3] =   s5[table](8)
   9 Column           0    1    5               00 r[5]=sqlite_master.name
REG[5] =   s12[sqlite_stat1](8)
  10 Column           0    3    6               00 r[6]=sqlite_master.rootpage
REG[6] =  i:7
  11 Column           0    4    7               00 r[7]=sqlite_master.sql
REG[7] =   s39[CREATE TABLE sq](8)
  12 ResultRow        5    3    0               00 output=r[5..7]
REG[5] =   s12[sqlite_stat1](8)
REG[6] =  i:7
REG[7] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Close            0    0    0               00 
  15 Halt             0    0    0               00 
  31 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  32 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 1             01 usesStmtJournal=0
  12 TableLock        0    7    0 sqlite_stat1  00 iDb=0 root=7 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  33 Expire           0    0    0               00 
  34 Halt             0    0    0               00 
SQL: [;
/* Fake the sqlite_stat1 table so that the query planner believes
  ** the table contains thousands of rows and that the first few
  ** columns are not selective. */
  ANALYZE;]
VDBE Trace:
   0 Init             0   76    0               00 Start at 76
  76 Transaction      0    1    6 1             01 usesStmtJournal=0
  77 TableLock        0    7    1 sqlite_stat1  00 iDb=0 root=7 write=1
  78 TableLock        0    5    0 d             00 iDb=0 root=5 write=0
  79 TableLock        0    4    0 x1            00 iDb=0 root=4 write=0
  80 TableLock        0    3    0 x             00 iDb=0 root=3 write=0
  81 TableLock        0    2    0 t1            00 iDb=0 root=2 write=0
  82 Goto             0    1    0               00 
   1 Clear            7    0    0               00 
   2 OpenWrite        0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   3 OpenRead         3    5    0 3             00 root=5 iDb=0; d
   4 String8          0    5    0 d             00 r[5]='d'; d
REG[5] =   t1[d](8)
   5 Count            3    7    0               00 r[7]=count()
REG[7] =  i:0
   6 IfNot            7   11    0               00 
REG[7] =  i:0
  11 OpenRead         3    4    0 1             00 root=4 iDb=0; x1
  12 String8          0    5    0 x1            00 r[5]='x1'; x1
REG[5] =   t2[x1](8)
  13 Count            3    7    0               00 r[7]=count()
REG[7] =  i:0
  14 IfNot            7   19    0               00 
REG[7] =  i:0
  19 OpenRead         3    3    0 2             00 root=3 iDb=0; x
  20 String8          0    5    0 x             00 r[5]='x'; x
REG[5] =   t1[x](8)
  21 Count            3    7    0               00 r[7]=count()
REG[7] =  i:3
  22 IfNot            7   27    0               00 
REG[7] =  i:3
  23 Null             0    6    0               00 r[6]=NULL
REG[6] =  NULL
  24 MakeRecord       5    3    4 BBB           00 r[4]=mkrec(r[5..7])
REG[4] =  s6[040F000F7833....x3](8)
  25 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  26 Insert           0    4    1               08 intkey=r[1] data=r[4]
REG[4] =  s6[040F000F7833....x3](8)
REG[1] =  i:1
  27 OpenRead         3    2    0 k(2,,)        00 root=2 iDb=0; t1
  28 String8          0    5    0 t1            00 r[5]='t1'
REG[5] =   t2[t1](8)
  29 String8          0    6    0 p1            00 r[6]='p1'; Analysis for t1.p1
REG[6] =   t2[p1](8)
  30 OpenRead         4    6    0 k(3,,,)       00 root=6 iDb=0; p1
  31 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  32 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  33 Function0        0    3    2 stat_init(2)  02 r[2]=func(r[3..4])
REG[3] =  i:4
REG[4] =  i:3
REG[2] =  z88[00000000000000000400000003000000................](8)
  34 Rewind           4   53    0               00 
  53 String8          0    6    0 t1            00 r[6]='t1'; Analysis for t1.t1
REG[6] =   t2[t1](8)
  54 OpenRead         4    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  55 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  56 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  57 Function0        0    3    2 stat_init(2)  02 r[2]=func(r[3..4])
REG[3] =  i:2
REG[4] =  i:2
REG[2] =  z88[00000000000000000200000002000000................](8)
  58 Rewind           4   73    0               00 
  73 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    6 1             01 usesStmtJournal=0
  12 TableLock        0    7    0 sqlite_stat1  00 iDb=0 root=7 write=0
  13 Goto             0    1    0               00 
   1 OpenRead         0    7    0 3             00 root=7 iDb=0; sqlite_stat1
   2 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_stat1.tbl
REG[1] =   s1[x](8)
   5 Column           0    1    2               00 r[2]=sqlite_stat1.idx
REG[2] =  NULL
   6 Column           0    2    3               00 r[3]=sqlite_stat1.stat
REG[3] =   s1[3](8)
   7 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[x](8)
REG[2] =  NULL
REG[3] =   s1[3](8)
   8 Next             0    4    0               01 
   9 Close            0    0    0               00 
  10 Halt             0    0    0               00 
  74 Expire           0    0    0               00 
  75 Halt             0    0    0               00 
SQL: [UPDATE sqlite_stat1 SET stat='500000 125000 1 noskipscan sz=100';]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    1    6 1             01 usesStmtJournal=0
  24 TableLock        0    7    1 sqlite_stat1  00 iDb=0 root=7 write=1
  25 Goto             0    1    0               00 
   1 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
   2 OpenRead         0    7    0 0             00 root=7 iDb=0; sqlite_stat1
   3 Explain          0    0    0 SCAN TABLE sqlite_stat1 00 
   4 Rewind           0    8    0               00 
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 RowSetAdd        1    2    0               00 rowset(1)=r[2]
REG[1] =  NULL
REG[2] =  i:1
   7 Next             0    5    0               01 
   8 Close            0    0    0               00 
   9 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  10 OpenWrite        0    7    0 3             00 root=7 iDb=0; sqlite_stat1
  11 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  12 NotExists        0   11    2               00 intkey=r[2]
REG[2] =  i:1
  13 Column           0    0    3               00 r[3]=sqlite_stat1.tbl
REG[3] =   s1[x](8)
  14 Column           0    1    4               00 r[4]=sqlite_stat1.idx
REG[4] =  NULL
  15 String8          0    5    0 500000 125000 1 noskipscan sz=100 00 r[5]='500000 125000 1 noskipscan sz=100'
REG[5] =   t33[500000 125000 1](8)
  16 MakeRecord       3    3    7               00 r[7]=mkrec(r[3..5])
REG[7] =  s38[040F004F783530303030302031323530...Ox500000 1250](8)
  17 Insert           0    7    2 sqlite_stat1  05 intkey=r[2] data=r[7]
REG[7] =  s38[040F004F783530303030302031323530...Ox500000 1250](8)
REG[2] =  i:1
  18 AddImm           6    1    0               00 r[6]=r[6]+1
REG[6] =  i:0
  19 Goto             0   11    0               00 
  11 RowSetRead       1   20    2               00 r[2]=rowset(1)
REG[1] =  (rowset)
REG[2] =  i:1
  20 Close            0    0    0               00 
  21 ResultRow        6    1    0               00 output=r[6]
REG[6] =  i:1
  22 Halt             0    0    0               00 
SQL: [UPDATE t1 SET a=a-1 WHERE a==8 and a>800;]
VDBE Trace:
   0 Init             0   54    0               00 Start at 54
  54 Transaction      0    1    6 1             01 usesStmtJournal=1
  55 TableLock        0    2    1 t1            00 iDb=0 root=2 write=1
  56 Integer        800   17    0               00 r[17]=800
REG[17] =  i:800
  57 Integer          1   19    0               00 r[19]=1
REG[19] =  i:1
  58 Goto             0    1    0               00 
   1 Null             0   10    0               00 r[10]=NULL
REG[10] =  NULL
   2 Noop             3    2    0               00 
   3 OpenWrite        1    6    0 k(3,,,)       02 root=6 iDb=0; p1
   4 Explain          0    0    0 SEARCH TABLE t1 USING COVERING INDEX p1 (a=? AND a=? AND a=?) 00 
   5 Integer          8   13    0               00 r[13]=8
REG[13] =  i:8
   6 Integer          8   14    0               00 r[14]=8
REG[14] =  i:8
   7 Integer          8   15    0               00 r[15]=8
REG[15] =  i:8
   8 SeekGE           1   14   13 3             00 key=r[13..15]
REG[13] =  i:8
  14 Integer          0   18    0               00 r[18]=0
REG[18] =  i:0
  15 OpenWrite        2    2    0 k(2,,)        00 root=2 iDb=0; sqlite_autoindex_t1_1
  16 NotFound         2   51   10 2             00 key=r[10..11]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007ff48b757859 in __GI_abort () at abort.c:79
#2  0x00007ff48b757729 in __assert_fail_base (fmt=0x7ff48b8ed588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=<optimized out>)
    at assert.c:92
#3  0x00007ff48b768fd6 in __GI___assert_fail (assertion=0x21f0e2 "memIsValid(&r.aMem[ii])", file=0x222c23 "sqlite3.c", line=80649, function=0x213a19 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003e29eb in sqlite3VdbeExec (p=<optimized out>) at sqlite3.c:80649
#5  0x000000000028b140 in sqlite3_step (pStmt=<optimized out>) at sqlite3.c:75131
#6  0x000000000024b5e9 in main (argc=1, argv=0x7ffe78d57a08) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 121687] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
