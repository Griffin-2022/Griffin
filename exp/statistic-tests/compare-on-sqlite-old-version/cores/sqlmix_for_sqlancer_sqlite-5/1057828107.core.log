GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000103,sig:06,src:021134+019592,time:2330170,execs:333285,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;
;CREATE TABLE c1(t1,a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 c1            00 r[7]='c1'
REG[7] =   t2[c1](8)
  20 String8          0    8    0 c1            00 r[8]='c1'
REG[8] =   t2[c1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE c1(t1,a) 00 r[10]='CREATE TABLE c1(t1,a)'
REG[10] =   t21[CREATE TABLE c1](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s37[0617111101377461626C656331633102.....7tablec1c1.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s37[0617111101377461626C656331633102.....7tablec1c1.]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='c1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t2[c1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[c1](8)
REG[1] =   s2[c1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[c1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s21[CREATE TABLE c1](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[c1](8)
REG[5] =  i:2
REG[6] =   s21[CREATE TABLE c1](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;SELECT c0, c0, typeof(c0), '|' FROM t0 ORDER BY +c0;]
VDBE Trace:
   0 Init             0   25    0               00 Start at 25
  25 Transaction      1    0    1 0             01 usesStmtJournal=0
  26 Goto             0    1    0               00 
   1 SorterOpen       1    6    0 k(1,B)        00 
   2 OpenRead         0    2    1 1             00 root=2 iDb=1; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   14    0               00 
  14 Explain         14    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  15 OpenPseudo       2    8    6               00 6 columns in r[8]
  16 SorterSort       1   24    0               00 
  24 Halt             0    0    0               00 
SQL: [;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_temp_master.name
REG[2] =   s2[t0](8)
   7 Column           0    2    3               00 r[3]=sqlite_temp_master.tbl_name
REG[3] =   s2[t0](8)
   8 Column           0    3    4               00 r[4]=sqlite_temp_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_temp_master.sql
REG[5] =   s27[CREATE TABLE t0](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t0](8)
REG[3] =   s2[t0](8)
REG[4] =  i:2
REG[5] =   s27[CREATE TABLE t0](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      1    0    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   12    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   6 Column           0    1    2               00 r[2]=sqlite_temp_master.name
REG[2] =   s2[t0](8)
   7 Column           0    2    3               00 r[3]=sqlite_temp_master.tbl_name
REG[3] =   s2[t0](8)
   8 Column           0    3    4               00 r[4]=sqlite_temp_master.rootpage
REG[4] =  i:2
   9 Column           0    4    5               00 r[5]=sqlite_temp_master.sql
REG[5] =   s27[CREATE TABLE t0](8)
  10 ResultRow        1    5    0               00 output=r[1..5]
REG[1] =   s5[table](8)
REG[2] =   s2[t0](8)
REG[3] =   s2[t0](8)
REG[4] =  i:2
REG[5] =   s27[CREATE TABLE t0](8)
  11 Next             0    5    0               01 
  12 Halt             0    0    0               00 
SQL: [SELECT*FROM"temp".sqlite_master WHERE tbl_name='t0' AND type!='trigger' ORDER BY rowid
;]
VDBE Trace:
   0 Init             0   17    0               00 Start at 17
  17 Transaction      1    0    1 0             01 usesStmtJournal=0
  18 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  19 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  20 Goto             0    1    0               00 
   1 Noop             1    7    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   16    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_temp_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   15    1 (BINARY)      52 if r[1]!=r[2] goto 15
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   8 Eq               3   15    1 (BINARY)      52 if r[1]==r[3] goto 15
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    0    4               00 r[4]=sqlite_temp_master.type
REG[4] =   s5[table](8)
  10 Column           0    1    5               00 r[5]=sqlite_temp_master.name
REG[5] =   s2[t0](8)
  11 Column           0    2    6               00 r[6]=sqlite_temp_master.tbl_name
REG[6] =   s2[t0](8)
  12 Column           0    3    7               00 r[7]=sqlite_temp_master.rootpage
REG[7] =  i:2
  13 Column           0    4    8               00 r[8]=sqlite_temp_master.sql
REG[8] =   s27[CREATE TABLE t0](8)
  14 ResultRow        4    5    0               00 output=r[4..8]
REG[4] =   s5[table](8)
REG[5] =   s2[t0](8)
REG[6] =   s2[t0](8)
REG[7] =  i:2
REG[8] =   s27[CREATE TABLE t0](8)
  15 Next             0    5    0               01 
  16 Halt             0    0    0               00 
SQL: [;
;SELECT name FROM pragma_table_xinfo('c1');]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 0             01 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 VOpen            0    0    0 vtab:F39D40   00 
   2 Explain          2    0    0 SCAN TABLE pragma_table_xinfo VIRTUAL TABLE INDEX 0: 00 
   3 String8          0    3    0 c1            00 r[3]='c1'
REG[3] =   t2[c1](8)
   4 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   5 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   6 VFilter          0   10    1               00 iplan=r[1] zplan=''
REG[1] =  i:0
SQL: [PRAGMA table_xinfo='c1']
VDBE Trace:
   0 Init             0   18    0               00 Start at 18
  18 Transaction      0    0    1 0             01 usesStmtJournal=0
  19 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 String8          0    2    0 t1            00 r[2]='t1'
REG[2] =   t2[t1](8)
   3 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
   4 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
   5 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
   6 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
   7 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
   8 ResultRow        1    7    0               00 output=r[1..7]
REG[1] =  i:0
REG[2] =   t2[t1](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
REG[7] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_xinfo.name
REG[4] =   s2[t1](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s2[t1](8)
   9 VNext            0    7    0               00 
   9 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
  10 String8          0    2    0 a             00 r[2]='a'
REG[2] =   t1[a](8)
  11 String8          0    3    0               00 r[3]=''
REG[3] =   t0[](8)
  12 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  13 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  14 Integer          0    6    0               00 r[6]=0
REG[6] =  i:0
  15 Integer          0    7    0               00 r[7]=0
REG[7] =  i:0
  16 ResultRow        1    7    0               00 output=r[1..7]
REG[1] =  i:1
REG[2] =   t1[a](8)
REG[3] =   t0[](8)
REG[4] =  i:0
REG[5] =  NULL
REG[6] =  i:0
REG[7] =  i:0
   7 VColumn          0    1    4               00 r[4]=vcolumn(1); pragma_table_xinfo.name
REG[4] =   s1[a](8)
   8 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s1[a](8)
   9 VNext            0    7    0               00 
  17 Halt             0    0    0               00 
  10 Halt             0    0    0               00 
SQL: [DROP TABLE IF EXISTS t4;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    1 0             01 usesStmtJournal=0
   3 Transaction      1    0    1 0             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;CREATE VIRTUAL TABLE temp.t5 USING csv_wr(
      data=
      '1,2,3,4
      5,6,7,8
      9,10,11,12
      13,14,15,16',
      columns=4,
      schema=
      'CREATE TABLE t3(a,t0,c0,d) WITHOUT ROWID',
      testflags=1
      );]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      1    1    1 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 VBegin           0    0    0               00 
   2 ReadCookie       1    3    2               00 
REG[3] =  i:4
   3 If               3    6    0               00 
REG[3] =  i:4
   6 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   7 OpenWrite        0    1    1 5             00 root=1 iDb=1
   8 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   9 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
  10 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    1 5             00 root=1 iDb=1; sqlite_temp_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t5            00 r[7]='t5'
REG[7] =   t2[t5](8)
  20 String8          0    8    0 t5            00 r[8]='t5'
REG[8] =   t2[t5](8)
  21 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIRTUAL TABLE t5 USING csv_wr(
      data=
      '1,2,3,4
      5,6,7,8
      9,10,11,12
      13,14,15,16',
      columns=4,
      schema=
      'CREATE TABLE t3(a,t0,c0,d) WITHOUT ROWID',
      testflags=1
      ) 00 r[10]='CREATE VIRTUAL TABLE t5 USING csv_wr(
      data=
      '1,2,3,4
      5,6,7,8
      9,10,11
REG[10] =   t222[CREATE VIRTUAL ](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s238[071711110883497461626C6574357435......Itablet5t5]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s238[071711110883497461626C6574357435......Itablet5t5]
REG[5] =  i:2
  25 SetCookie        1    1    2               00 
  26 Expire           0    0    0               00 
  27 ParseSchema      1    0    0 name='t5' AND type='table' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      1    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t5            00 r[2]='t5'
REG[2] =   t2[t5](8)
  17 String8          0    3    0 table         00 r[3]='table'
REG[3] =   t5[table](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s2[t5](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t5](8)
REG[1] =   s2[t5](8)
   7 Column           0    0    1               00 r[1]=sqlite_temp_master.type
REG[1] =   s5[table](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[table](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_temp_master.name
REG[4] =   s2[t5](8)
  10 Column           0    3    5               00 r[5]=sqlite_temp_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_temp_master.sql
REG[6] =   s222[CREATE VIRTUAL ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t5](8)
REG[5] =  i:0
REG[6] =   s222[CREATE VIRTUAL ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  28 String8          0   12    0 t5            00 r[12]='t5'
REG[12] =   t2[t5](8)
  29 VCreate          1   12    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    1 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE c1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[c1](8)
REG[2] =  i:2
REG[3] =   s21[CREATE TABLE c1](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    1 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:2
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;CREATE TABLE b(c INTEGER PRIMARY KEY,t1a);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 1             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE b(c INTEGER PRIMARY KEY,t1a) 00 r[10]='CREATE TABLE b(c INTEGER PRIMARY KEY,t1a)'
REG[10] =   t41[CREATE TABLE b(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s55[06170F0F015F7461626C656262034352....._tablebb.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s55[06170F0F015F7461626C656262034352....._tablebb.CR]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 1             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s41[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:3
REG[6] =   s41[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO c1(t1,t1) VALUES(7,100000000000000008);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    2 1             01 usesStmtJournal=0
   8 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; c1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   3 Integer          7    2    0               00 r[2]=7
REG[2] =  i:7
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[03010007....]
   5 Insert           0    4    1 c1            39 intkey=r[1] data=r[4]
REG[4] =  s4[03010007....]
REG[1] =  i:1
   6 Halt             0    0    0               00 
SQL: [;
;CREATE VIRTUAL TABLE t5_1 USING csv(filename='csv01.csv');]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    2 1             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 VBegin           0    0    0               00 
   2 ReadCookie       0    3    2               00 
REG[3] =  i:4
   3 If               3    6    0               00 
REG[3] =  i:4
   6 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   7 OpenWrite        0    1    0 5             00 root=1 iDb=0
   8 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   9 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
  10 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t5_1          00 r[7]='t5_1'
REG[7] =   t4[t5_1](8)
  20 String8          0    8    0 t5_1          00 r[8]='t5_1'
REG[8] =   t4[t5_1](8)
  21 Integer          0    9    0               00 r[9]=0
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIRTUAL TABLE t5_1 USING csv(filename='csv01.csv') 00 r[10]='CREATE VIRTUAL TABLE t5_1 USING csv(filename='csv01.csv')'
REG[10] =   t57[CREATE VIRTUAL ](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s76[06171515087F7461626C6574355F3174......tablet5_1t]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s76[06171515087F7461626C6574355F3174......tablet5_1t]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 Expire           0    0    0               00 
  27 ParseSchema      0    0    0 name='t5_1' AND type='table' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 1             00 usesStmtJournal=0
  16 String8          0    2    0 t5_1          00 r[2]='t5_1'
REG[2] =   t4[t5_1](8)
  17 String8          0    3    0 table         00 r[3]='table'
REG[3] =   t5[table](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t5_1](8)
REG[1] =   s2[c1](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t5_1](8)
REG[1] =   s1[b](8)
  13 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t5_1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[t5_1](8)
REG[1] =   s4[t5_1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t5[table](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t5_1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s57[CREATE VIRTUAL ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t5_1](8)
REG[5] =  i:0
REG[6] =   s57[CREATE VIRTUAL ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  28 String8          0   12    0 t5_1          00 r[12]='t5_1'
REG[12] =   t4[t5_1](8)
  29 VCreate          0   12    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[c1](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s21[CREATE TABLE c1](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[c1](8)
REG[2] =  i:2
REG[3] =   s21[CREATE TABLE c1](8)
   9 Next             0    5    0               01 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s1[b](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:3
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s41[CREATE TABLE b(](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s1[b](8)
REG[2] =  i:3
REG[3] =   s41[CREATE TABLE b(](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      1    0    1 2             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    1 5             00 root=1 iDb=1; sqlite_temp_master
   3 Explain          3    0    0 SCAN TABLE sqlite_temp_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_temp_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_temp_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_temp_master.sql
REG[3] =   s27[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:2
REG[3] =   s27[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
SQL: [;INSERT INTO c1(a,a) VALUES(11,100000000000000006);]
VDBE Trace:
   0 Init             0    7    0               00 Start at 7
   7 Transaction      0    1    2 2             01 usesStmtJournal=0
   8 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
   9 Goto             0    1    0               00 
   1 OpenWrite        0    2    0 2             00 root=2 iDb=0; c1
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   3 Integer         11    3    0               00 r[3]=11
REG[3] =  i:11
   4 MakeRecord       2    2    4               00 r[4]=mkrec(r[2..3])
REG[4] =  s4[0300010B....]
   5 Insert           0    4    1 c1            39 intkey=r[1] data=r[4]
REG[4] =  s4[0300010B....]
REG[1] =  i:2
   6 Halt             0    0    0               00 
SQL: [;CREATE TRIGGER t1bc BEFORE DELETE ON c1 BEGIN 
      DELETE FROM c1 WHERE t1 = old.t1;
    END;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    1    2 2             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   3 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
   4 String8          0    3    0 t1bc          00 r[3]='t1bc'
REG[3] =   t4[t1bc](8)
   5 String8          0    4    0 c1            00 r[4]='c1'
REG[4] =   t2[c1](8)
   6 Integer          0    5    0               00 r[5]=0
REG[5] =  i:0
   7 String8          0    6    0 CREATE TRIGGER t1bc BEFORE DELETE ON c1 BEGIN 
      DELETE FROM c1 WHERE t1 = old.t1;
    END 00 r[6]='CREATE TRIGGER t1bc BEFORE DELETE ON c1 BEGIN 
      DELETE FROM c1 WHERE t1 = old.t1;
    EN
REG[6] =   t94[CREATE TRIGGER ](8)
   8 MakeRecord       2    5    7 BBBDB         00 r[7]=mkrec(r[2..6])
REG[7] =  s114[071B1511088149747269676765727431......Itriggert1]
   9 Insert           0    7    1               18 intkey=r[1] data=r[7]
REG[7] =  s114[071B1511088149747269676765727431......Itriggert1]
REG[1] =  i:3
  10 SetCookie        0    1    3               00 
  11 ParseSchema      0    0    0 type='trigger' AND name='t1bc' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 2             00 usesStmtJournal=0
  16 String8          0    2    0 trigger       00 r[2]='trigger'
REG[2] =   t7[trigger](8)
  17 String8          0    3    0 t1bc          00 r[3]='t1bc'
REG[3] =   t4[t1bc](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s5[table](8)
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s7[trigger](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t7[trigger](8)
REG[1] =   s7[trigger](8)
   7 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s4[t1bc](8)
   8 Ne               3   13    1 (BINARY)      52 if r[1]!=r[3] goto 13
REG[3] =   t4[t1bc](8)
REG[1] =   s4[t1bc](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[t1bc](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s94[CREATE TRIGGER ](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[t1bc](8)
REG[5] =  i:0
REG[6] =   s94[CREATE TRIGGER ](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  12 Halt             0    0    0               00 
SQL: [;
;
;DROP TABLE IF EXISTS t4;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    3 2             01 usesStmtJournal=0
   3 Transaction      1    0    1 2             01 usesStmtJournal=0
   4 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;SELECT coalesce(max(quote(t1)),10) FROM c1 GROUP BY t1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    3 2             01 usesStmtJournal=0
  46 Goto             0    1    0               00 
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   4 Gosub            6   41    0               00 
REG[6] =  i:4
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:4
   5 OpenRead         0    2    0 1             00 root=2 iDb=0; c1
   6 Explain          6    0    0 SCAN TABLE c1 00 
   7 Rewind           0   13    0               00 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    0    9               00 r[9]=c1.t1
REG[9] =  i:7
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020107...]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s3[020107...]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    0    9               00 r[9]=c1.t1
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
  13 OpenPseudo       2    9    1               00 1 columns in r[9]
  14 SorterSort       1   44    0               00 GROUP BY sort
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function0        0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep          0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  i:7
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:7
  18 Jump            19   23   19               00 
  19 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:7
  20 Gosub            5   33    0               00 output one row
REG[5] =  i:20
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:1
  35 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  36 SCopy            1   12    0               00 r[12]=r[1]
REG[12] =   t4[NULL](8)
  37 NotNull         12   39    0               00 if r[12]!=NULL goto 39
REG[12] =   t4[NULL](8)
  39 ResultRow       12    1    0               00 output=r[12]
REG[12] =   s4[NULL](8)
  40 Return           5    0    0               00 end groupby result generator
REG[5] =  i:20
  21 IfPos            4   44    0               00 if r[4]>0 then r[4]-=0, goto 44; check abort flag
REG[4] =  i:0
  22 Gosub            6   41    0               00 reset accumulator
REG[6] =  i:22
  41 Null             0    1    2               00 r[1..2]=NULL

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f0bacb5f859 in __GI_abort () at abort.c:79
#2  0x00007f0bacb5f729 in __assert_fail_base (fmt=0x7f0baccf5588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f0bacb70fd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0xf17940, pMem=0xf1b678) at sqlite3.c:75351
#5  0x00000000003c031d in sqlite3VdbeExec (p=0xf17940) at sqlite3.c:84329
#6  0x0000000000411104 in sqlite3Step (p=0xf17940) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0xf17940) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffcaa8452b8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 50966] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
