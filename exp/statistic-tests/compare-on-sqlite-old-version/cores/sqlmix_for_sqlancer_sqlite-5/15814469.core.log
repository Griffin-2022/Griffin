GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000361,sig:06,src:025245+004607,time:10079661,execs:2266724,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [VACUUM
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Vacuum           0    0    0               00 
SQL: [ATTACH '' AS vacuum_db]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [BEGIN]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 AutoCommit       0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='table'AND name<>'sqlite_sequence' AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   16    0               00 Start at 16
  16 Transaction      0    0    1 0             01 usesStmtJournal=0
  17 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  18 String8          0    3    0 sqlite_sequence 00 r[3]='sqlite_sequence'
REG[3] =   t15[sqlite_sequence](8)
  19 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  20 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   15    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   14    1 (BINARY)      52 if r[1]!=r[2] goto 14
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   7 Eq               3   14    1 (BINARY)      52 if r[1]==r[3] goto 14
REG[3] =   t15[sqlite_sequence](8)
REG[1] =   s2[t0](8)
   8 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   9 NotNull          1   11    0               00 if r[1]!=NULL goto 11
REG[1] =  i:2
  11 Le               4   14    1               51 if r[1]<=r[4] goto 14
REG[4] =  i:0
REG[1] =  i:2
  12 Column           0    4    5               00 r[5]=sqlite_master.sql
REG[5] =   s19[CREATE TABLE t0](8)
  13 ResultRow        5    1    0               00 output=r[5]
REG[5] =   s19[CREATE TABLE t0](8)
SQL: [CREATE TABLE t0(c0)]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      2    1    0 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       2    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        2    2    4               00 
   4 SetCookie        2    5    1               00 
   5 CreateBtree      2    2    1               00 r[2]=root iDb=2 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    2 5             00 root=1 iDb=2
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    2 5             00 root=1 iDb=2; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  20 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE t0(c0) 00 r[10]='CREATE TABLE t0(c0)'
REG[10] =   t19[CREATE TABLE t0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s35[0617111101337461626C657430743002.....3tablet0t0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s35[0617111101337461626C657430743002.....3tablet0t0.]
REG[5] =  i:1
  25 SetCookie        2    1    1               00 
  26 ParseSchema      2    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      2    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s19[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:2
REG[6] =   s19[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
  14 Next             0    4    0               01 
  15 Halt             0    0    0               00 
SQL: [SELECT sql FROM "main".sqlite_master WHERE type='index']
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 String8          0    2    0 index         00 r[2]='index'
REG[2] =   t5[index](8)
  12 Goto             0    1    0               00 
   1 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0    9    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2    8    1 (BINARY)      52 if r[1]!=r[2] goto 8
REG[2] =   t5[index](8)
REG[1] =   s5[table](8)
   8 Next             0    4    0               01 
   9 Halt             0    0    0               00 
SQL: [SELECT'INSERT INTO vacuum_db.'||quote(name)||' SELECT*FROM"main".'||quote(name)FROM vacuum_db.sqlite_master WHERE type='table'AND coalesce(rootpage,1)>0]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      2    0    1 0             01 usesStmtJournal=0
  21 String8          0    2    0 table         00 r[2]='table'
REG[2] =   t5[table](8)
  22 Integer          0    3    0               00 r[3]=0
REG[3] =  i:0
  23 String8          0    6    0 INSERT INTO vacuum_db. 00 r[6]='INSERT INTO vacuum_db.'
REG[6] =   t22[INSERT INTO vac](8)
  24 String8          0    9    0  SELECT*FROM"main". 00 r[9]=' SELECT*FROM"main".'
REG[9] =   t19[ SELECT*FROM"ma](8)
  25 Goto             0    1    0               00 
   1 OpenRead         0    1    2 4             00 root=1 iDb=2; sqlite_master
   2 Explain          2    0    0 SCAN TABLE sqlite_master 00 
   3 Rewind           0   19    0               00 
   4 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   5 Ne               2   18    1 (BINARY)      52 if r[1]!=r[2] goto 18
REG[2] =   t5[table](8)
REG[1] =   s5[table](8)
   6 Column           0    3    1               00 r[1]=sqlite_master.rootpage
REG[1] =  i:2
   7 NotNull          1    9    0               00 if r[1]!=NULL goto 9
REG[1] =  i:2
   9 Le               3   18    1               51 if r[1]<=r[3] goto 18
REG[3] =  i:0
REG[1] =  i:2
  10 Column           0    1    8               00 r[8]=sqlite_master.name
REG[8] =   s2[t0](8)
  11 Function0        0    8    7 quote(1)      01 r[7]=func(r[8])
REG[8] =   s2[t0](8)
REG[7] =   z4['t0'](8)
  12 Concat           7    6    5               00 r[5]=r[6]+r[7]
REG[7] =   z4['t0'](8)
REG[6] =   t22[INSERT INTO vac](8)
REG[5] =   s26[INSERT INTO vac](8)
  13 Concat           9    5    1               00 r[1]=r[5]+r[9]
REG[9] =   t19[ SELECT*FROM"ma](8)
REG[5] =   s26[INSERT INTO vac](8)
REG[1] =   s45[INSERT INTO vac](8)
  14 Column           0    1    7               00 r[7]=sqlite_master.name
REG[7] =   s2[t0](8)
  15 Function0        0    7    5 quote(1)      01 r[5]=func(r[7])
REG[7] =   s2[t0](8)
REG[5] =   z4['t0'](8)
  16 Concat           5    1    4               00 r[4]=r[1]+r[5]
REG[5] =   z4['t0'](8)
REG[1] =   s45[INSERT INTO vac](8)
REG[4] =   s49[INSERT INTO vac](8)
  17 ResultRow        4    1    0               00 output=r[4]
REG[4] =   s49[INSERT INTO vac](8)
SQL: [INSERT INTO vacuum_db.'t0' SELECT*FROM"main".'t0']
VDBE Trace:
   0 Init             0   12    0               00 Start at 12
  12 Transaction      0    0    1 0             01 usesStmtJournal=0
  13 Transaction      2    1    1 0             01 usesStmtJournal=0
  14 Goto             0    1    0               00 
   1 OpenWrite        1    2    2 1             00 root=2 iDb=2; t0
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   3 Rewind           0   11    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e2[0209..]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 t0            39 intkey=r[2] data=r[1]
REG[1] =  e2[0209..]
REG[2] =  i:1
   8 Next             0    4    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e3[020102...]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 t0            39 intkey=r[2] data=r[1]
REG[1] =  e3[020102...]
REG[2] =  i:2
   8 Next             0    4    0               00 
   4 NewRowid         1    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 RowData          0    1    1               00 r[1]=data
REG[1] =  e3[020103...]
   6 SeekEnd          1    0    0               00 
   7 Insert           1    1    2 t0            39 intkey=r[2] data=r[1]
REG[1] =  e3[020103...]
REG[2] =  i:3
   8 Next             0    4    0               00 
   9 Close            0    0    0               00 
  10 Close            1    0    0               00 
  11 Halt             0    0    0               00 
  18 Next             0    4    0               01 
  19 Halt             0    0    0               00 
SQL: [INSERT INTO vacuum_db.sqlite_master SELECT*FROM "main".sqlite_master WHERE type IN('view','trigger') OR(type='table'AND rootpage=0)]
VDBE Trace:
   0 Init             0   29    0               00 Start at 29
  29 Transaction      0    0    1 0             01 usesStmtJournal=0
  30 Transaction      2    1    1 0             01 usesStmtJournal=0
  31 String8          0    9    0 view          00 r[9]='view'
REG[9] =   t4[view](8)
  32 String8          0   10    0 trigger       00 r[10]='trigger'
REG[10] =   t7[trigger](8)
  33 String8          0   12    0 table         00 r[12]='table'
REG[12] =   t5[table](8)
  34 Integer          0   13    0               00 r[13]=0
REG[13] =  i:0
  35 Goto             0    1    0               00 
   1 InitCoroutine    7   22    2               00 
  22 OpenWrite        2    1    2 5             00 root=1 iDb=2; sqlite_master
  23 Yield            7   28    0               00 
REG[7] =  i:1
REG[7] =  i:23
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   21    0               00 
   5 Noop             0    0    0               00 begin IN expr
   6 Column           0    0    8               00 r[8]=sqlite_master.type
REG[8] =   s5[table](8)
   7 Eq               8    9    9 (BINARY)      42 if r[9]==r[8] goto 9
REG[8] =   s5[table](8)
REG[9] =   t4[view](8)
   8 Ne               8   10   10 (BINARY)      52 if r[10]!=r[8] goto 10; end IN expr
REG[8] =   s5[table](8)
REG[10] =   t7[trigger](8)
  10 Column           0    0   11               00 r[11]=sqlite_master.type
REG[11] =   s5[table](8)
  11 Ne              12   20   11 (BINARY)      52 if r[11]!=r[12] goto 20
REG[12] =   t5[table](8)
REG[11] =   s5[table](8)
  12 Column           0    3   11               00 r[11]=sqlite_master.rootpage
REG[11] =  i:2
  13 Ne              13   20   11 (BINARY)      54 if r[11]!=r[13] goto 20
REG[13] =  i:0
REG[11] =  i:2
  20 Next             0    5    0               01 
  21 EndCoroutine     7    0    0               00 
REG[7] =  i:23
  28 Halt             0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [SELECT quote( CAST('ghi' AS blob) )
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 String8          0    3    0 ghi           00 r[3]='ghi'
REG[3] =   t3[ghi](8)
   6 Cast             3   65    0               00 affinity(r[3])
REG[3] =   t3[ghi](8)
   7 Function0        1    3    2 quote(1)      01 r[2]=func(r[3])
REG[3] =  t3[676869ghi]
REG[2] =   s9[X'676869'](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s9[X'676869'](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[X'676869'](8)
   4 Halt             0    0    0               00 
SQL: [SELECT quote( CAST(456 AS blob) )
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer        456    3    0               00 r[3]=456
REG[3] =  i:456
   6 Cast             3   65    0               00 affinity(r[3])
REG[3] =  i:456
   7 Function0        1    3    2 quote(1)      01 r[2]=func(r[3])
REG[3] =  s3[343536456]
REG[2] =   s9[X'343536'](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s9[X'343536'](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s9[X'343536'](8)
   4 Halt             0    0    0               00 
SQL: [ATTACH '' AS vacuum_db
;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 String8          0    1    0               00 r[1]=''
REG[1] =   t0[](8)
   2 String8          0    2    0 vacuum_db     00 r[2]='vacuum_db'
REG[2] =   t9[vacuum_db](8)
   3 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
   4 Function0        0    1    4 sqlite_attach(3) 03 r[4]=func(r[1..3])
REG[1] =   t0[](8)
REG[2] =   t9[vacuum_db](8)
REG[3] =  NULL
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 1             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
   5 Column           0    1    1               00 r[1]=sqlite_master.name
REG[1] =   s2[t0](8)
   6 Column           0    3    2               00 r[2]=sqlite_master.rootpage
REG[2] =  i:2
   7 Column           0    4    3               00 r[3]=sqlite_master.sql
REG[3] =   s19[CREATE TABLE t0](8)
   8 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =   s2[t0](8)
REG[2] =  i:2
REG[3] =   s19[CREATE TABLE t0](8)
   9 Next             0    5    0               01 
  10 Halt             0    0    0               00 
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      2    0    0 0             00 usesStmtJournal=0
  12 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    2 5             00 root=1 iDb=2; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   10    0               00 
  10 Halt             0    0    0               00 
REG[4] =  NULL
   5 Expire           1    0    0               00 
   6 Halt             0    0    0               00 
SQL: [;SELECT *, '|' FROM t0 WHERE +c0=+c0 ORDER BY +c0;]
VDBE Trace:
   0 Init             0   23    0               00 Start at 23
  23 Transaction      0    0    2 1             01 usesStmtJournal=0
  24 Goto             0    1    0               00 
   1 SorterOpen       1    4    0 k(1,B)        00 
   2 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
   3 Explain          3    0    0 SCAN TABLE t0 00 
   4 Rewind           0   14    0               00 
   5 Column           0    0    1               00 r[1]=t0.c0
REG[1] =  i:1
   6 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:1
   7 Ne               2   13    1 (BINARY)      51 if r[1]!=r[2] goto 13
REG[2] =  i:1
REG[1] =  i:1
   8 Column           0    0    4               00 r[4]=t0.c0
REG[4] =  i:1
   9 String8          0    5    0 |             00 r[5]='|'
REG[5] =   t1[|](8)
  10 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  i:1
  11 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s5[0409090F7C....|]
  12 SorterInsert     1    6    3 3             00 key=r[6]
REG[6] =  s5[0409090F7C....|]
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t0.c0
REG[1] =  i:2
   6 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:2
   7 Ne               2   13    1 (BINARY)      51 if r[1]!=r[2] goto 13
REG[2] =  i:2
REG[1] =  i:2
   8 Column           0    0    4               00 r[4]=t0.c0
REG[4] =  i:2
   9 String           1    5    0 |             00 r[5]='|' (len=1)
REG[5] =   t1[|](8)
  10 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  i:2
  11 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s7[0401010F02027C......|]
  12 SorterInsert     1    6    3 3             00 key=r[6]
REG[6] =  s7[0401010F02027C......|]
  13 Next             0    5    0               01 
   5 Column           0    0    1               00 r[1]=t0.c0
REG[1] =  i:3
   6 Column           0    0    2               00 r[2]=t0.c0
REG[2] =  i:3
   7 Ne               2   13    1 (BINARY)      51 if r[1]!=r[2] goto 13
REG[2] =  i:3
REG[1] =  i:3
   8 Column           0    0    4               00 r[4]=t0.c0
REG[4] =  i:3
   9 String           1    5    0 |             00 r[5]='|' (len=1)
REG[5] =   t1[|](8)
  10 Column           0    0    3               00 r[3]=t0.c0
REG[3] =  i:3
  11 MakeRecord       3    3    6               00 r[6]=mkrec(r[3..5])
REG[6] =  s7[0401010F03037C......|]
  12 SorterInsert     1    6    3 3             00 key=r[6]
REG[6] =  s7[0401010F03037C......|]
  13 Next             0    5    0               01 
  14 Explain         14    0    0 USE TEMP B-TREE FOR ORDER BY 00 
  15 OpenPseudo       2    7    4               00 4 columns in r[7]
  16 SorterSort       1   22    0               00 
  17 SorterData       1    7    2               00 r[7]=data
  18 Column           2    2    5               00 r[5]='|'
REG[5] =   s1[|](8)
  19 Column           2    1    4               00 r[4]=c0
REG[4] =  i:1
  20 ResultRow        4    2    0               00 output=r[4..5]
REG[4] =  i:1
REG[5] =   s1[|](8)
  21 SorterNext       1   17    0               00 
  17 SorterData       1    7    2               00 r[7]=data
  18 Column           2    2    5               00 r[5]='|'
REG[5] =   s1[|](8)
  19 Column           2    1    4               00 r[4]=c0
REG[4] =  i:2
  20 ResultRow        4    2    0               00 output=r[4..5]
REG[4] =  i:2
REG[5] =   s1[|](8)
  21 SorterNext       1   17    0               00 
  17 SorterData       1    7    2               00 r[7]=data
  18 Column           2    2    5               00 r[5]='|'
REG[5] =   s1[|](8)
  19 Column           2    1    4               00 r[4]=c0
REG[4] =  i:3
  20 ResultRow        4    2    0               00 output=r[4..5]
REG[4] =  i:3
REG[5] =   s1[|](8)
  21 SorterNext       1   17    0               00 
  22 Halt             0    0    0               00 
SQL: [;
;VALUES(8) EXCEPT 
  SELECT sum(c0) OVER f FROM t0 WINDOW f AS (ORDER BY c0) ORDER BY 1;]
VDBE Trace:
   0 Init             0  220    0               00 Start at 220
 220 Transaction      0    0    2 1             01 usesStmtJournal=0
 221 Goto             0    1    0               00 
   1 Integer          0    1    0               00 r[1]=0
REG[1] =  i:0
   2 Explain          2    0    0 MERGE (EXCEPT) 00 
   3 InitCoroutine    3   10    4               00 left SELECT
  10 InitCoroutine    4  214   11               00 right SELECT
 214 Yield            3  219    0               00 
REG[3] =  i:3
REG[3] =  i:214
   4 Explain          4    2    0 LEFT          00 
   5 Noop             1    3    0               00 
   6 Explain          6    4    0 SCAN CONSTANT ROW 00 
   7 Integer          8    7    0               00 r[7]=8
REG[7] =  i:8
   8 Yield            3    0    0               00 
REG[3] =  i:214
REG[3] =  i:8
 215 Yield            4  201    0               00 
REG[4] =  i:10
REG[4] =  i:215
  11 Explain         11    2    0 RIGHT         00 
  12 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
  13 OpenEphemeral    2    3    0               00 nColumn=3
  14 OpenDup          3    2    0               00 
  15 OpenDup          4    2    0               00 
  16 OpenDup          5    2    0               00 
  17 InitCoroutine   10  117   18               00 subquery_3
 117 SorterOpen      14    3    0 k(1,B)        00 
 118 Integer          1   38    0               00 r[38]=1
REG[38] =  i:1
 119 Explain        119   11    0 SCAN SUBQUERY 3 00 
 120 InitCoroutine   10    0   18               00 
 121 Yield           10  158    0               00 next row of subquery_3
REG[10] =  i:17
REG[10] =  i:121
  18 Explain         18   11    0 CO-ROUTINE 3  00 
  19 Null             0   11    0               00 r[11]=NULL
REG[11] =  NULL
  20 OpenEphemeral    7    4    0               00 nColumn=4
  21 OpenDup          8    7    0               00 
  22 OpenDup          9    7    0               00 
  23 OpenDup         10    7    0               00 
  24 InitCoroutine   13   48   25               00 subquery_4
  48 Integer          1   21    0               00 r[21]=1
REG[21] =  i:1
  49 Explain         49   18    0 SCAN SUBQUERY 4 00 
  50 InitCoroutine   13    0   25               00 
  51 Yield           13   89    0               00 next row of subquery_4
REG[13] =  i:24
REG[13] =  i:51
  25 Explain         25   18    0 CO-ROUTINE 4  00 
  26 SorterOpen      12    6    0 k(1,B)        00 
  27 OpenRead         0    2    0 1             00 root=2 iDb=0; t0
  28 Explain         28   25    0 SCAN TABLE t0 00 
  29 Rewind           0   37    0               00 
  30 Column           0    0   15               00 r[15]=t0.c0
REG[15] =  i:1
  31 Column           0    0   16               00 r[16]=t0.c0
REG[16] =  i:1
  32 Column           0    0   17               00 r[17]=t0.c0
REG[17] =  i:1
  33 Column           0    0   14               00 r[14]=t0.c0
REG[14] =  i:1
  34 MakeRecord      14    4   19               00 r[19]=mkrec(r[14..17])
REG[19] =  s5[0509090909.....]
  35 SorterInsert    12   19   14 4             00 key=r[19]
REG[19] =  s5[0509090909.....]
  36 Next             0   30    0               01 
  30 Column           0    0   15               00 r[15]=t0.c0
REG[15] =  i:2
  31 Column           0    0   16               00 r[16]=t0.c0
REG[16] =  i:2
  32 Column           0    0   17               00 r[17]=t0.c0
REG[17] =  i:2
  33 Column           0    0   14               00 r[14]=t0.c0
REG[14] =  i:2
  34 MakeRecord      14    4   19               00 r[19]=mkrec(r[14..17])
REG[19] =  s9[050101010102020202.........]
  35 SorterInsert    12   19   14 4             00 key=r[19]
REG[19] =  s9[050101010102020202.........]
  36 Next             0   30    0               01 
  30 Column           0    0   15               00 r[15]=t0.c0
REG[15] =  i:3
  31 Column           0    0   16               00 r[16]=t0.c0
REG[16] =  i:3
  32 Column           0    0   17               00 r[17]=t0.c0
REG[17] =  i:3
  33 Column           0    0   14               00 r[14]=t0.c0
REG[14] =  i:3
  34 MakeRecord      14    4   19               00 r[19]=mkrec(r[14..17])
REG[19] =  s9[050101010103030303.........]
  35 SorterInsert    12   19   14 4             00 key=r[19]
REG[19] =  s9[050101010103030303.........]
  36 Next             0   30    0               01 
  37 Explain         37   25    0 USE TEMP B-TREE FOR ORDER BY 00 
  38 OpenPseudo      13   20    6               00 6 columns in r[20]
  39 SorterSort      12   47    0               00 
  40 SorterData      12   20   13               00 r[20]=data
  41 Column          13    0   18               00 r[18]=
REG[18] =  i:1
  42 Column          13    3   17               00 r[17]=
REG[17] =  i:1
  43 Column          13    2   16               00 r[16]=
REG[16] =  i:1
  44 Column          13    1   15               00 r[15]=
REG[15] =  i:1
  45 Yield           13    0    0               00 
REG[13] =  i:51
REG[13] =  i:45
  52 Copy            15   23    0               00 r[23]=r[15]
REG[23] =  i:1
  53 Copy            16   24    0               00 r[24]=r[16]
REG[24] =  i:1
  54 Copy            17   25    0               00 r[25]=r[17]
REG[25] =  i:1
  55 Copy            18   26    0               00 r[26]=r[18]
REG[26] =  i:1
  56 MakeRecord      23    4   27               00 r[27]=mkrec(r[23..26])
REG[27] =  s5[0509090909.....]
  57 NewRowid         8   28    0               00 r[28]=rowid
REG[28] =  i:1
  58 Insert           8   27   28               00 intkey=r[28] data=r[27]
REG[27] =  s5[0509090909.....]
REG[28] =  i:1
  59 Ne              21   68   28               00 if r[28]!=r[21] goto 68
REG[21] =  i:1
REG[28] =  i:1
  60 Null             0   11    0               00 r[11]=NULL
REG[11] =  NULL
  61 Rewind           7    1    0               00 
  62 Rewind          10    1    0               00 
  63 Copy            25   29    0               00 r[29]=r[25]
REG[29] =  i:1
  64 Copy            29   30    0               00 r[30]=r[29]
REG[30] =  i:1
  65 Copy            29   31    0               00 r[31]=r[29]
REG[31] =  i:1
  66 Copy            29   32    0               00 r[32]=r[29]
REG[32] =  i:1
  67 Goto             0   88    0               00 
  88 Goto             0   51    0               00 
  51 Yield           13   89    0               00 next row of subquery_4
REG[13] =  i:45
REG[13] =  i:51
  46 SorterNext      12   40    0               00 
  40 SorterData      12   20   13               00 r[20]=data
  41 Column          13    0   18               00 r[18]=
REG[18] =  i:2
  42 Column          13    3   17               00 r[17]=
REG[17] =  i:2
  43 Column          13    2   16               00 r[16]=
REG[16] =  i:2
  44 Column          13    1   15               00 r[15]=
REG[15] =  i:2
  45 Yield           13    0    0               00 
REG[13] =  i:51
REG[13] =  i:45
  52 Copy            15   23    0               00 r[23]=r[15]
REG[23] =  i:2
  53 Copy            16   24    0               00 r[24]=r[16]
REG[24] =  i:2
  54 Copy            17   25    0               00 r[25]=r[17]
REG[25] =  i:2
  55 Copy            18   26    0               00 r[26]=r[18]
REG[26] =  i:2
  56 MakeRecord      23    4   27               00 r[27]=mkrec(r[23..26])
REG[27] =  s9[050101010102020202.........]
  57 NewRowid         8   28    0               00 r[28]=rowid
REG[28] =  i:2
  58 Insert           8   27   28               00 intkey=r[28] data=r[27]
REG[27] =  s9[050101010102020202.........]
REG[28] =  i:2
  59 Ne              21   68   28               00 if r[28]!=r[21] goto 68
REG[21] =  i:1
REG[28] =  i:2
  68 Compare         29   25    1 k(1,B)        00 r[29] <-> r[25]
REG[29] =  i:1
REG[25] =  i:2
  69 Jump            70   88   70               00 
  70 Copy            25   29    0               00 r[29]=r[25]
REG[29] =  i:2
  71 Column          10    3   33               00 r[33]=
REG[33] =  i:1
  72 AggStep          0   33   11 sum(1)        01 accum=r[11] step(r[33])
REG[33] =  i:1
  73 Next            10   75    0               00 
  75 Column          10    2   34               00 r[34]=
REG[34] =  i:2
  76 Compare         32   34    1 k(1,B)        00 r[32] <-> r[34]
REG[32] =  i:1
REG[34] =  i:2
  77 Jump            78   71   78               00 
  78 Copy            34   32    0               00 r[32]=r[34]
REG[32] =  i:2
  79 AggValue        11    1   12 sum(1)        00 r[12]=value N=1
  80 Gosub           22  110    0               00 
REG[22] =  i:80
 110 Noop             0    0    0               00 inner-loop subroutine
 111 Copy            12   35    0               00 r[35]=r[12]
REG[35] =  i:1
 112 Column           7    0   36               00 r[36]=
REG[36] =  i:1
 113 Column           7    1   37               00 r[37]=
REG[37] =  i:1
 114 Yield           10    0    0               00 
REG[10] =  i:121
REG[10] =  i:114
 122 Copy            35   40    0               00 r[40]=r[35]
REG[40] =  i:1
 123 Copy            36   41    0               00 r[41]=r[36]
REG[41] =  i:1
 124 Copy            37   42    0               00 r[42]=r[37]
REG[42] =  i:1
 125 MakeRecord      40    3   43               00 r[43]=mkrec(r[40..42])
REG[43] =  s4[04090909....]
 126 NewRowid         3   44    0               00 r[44]=rowid
REG[44] =  i:1
 127 Insert           3   43   44               00 intkey=r[44] data=r[43]
REG[43] =  s4[04090909....]
REG[44] =  i:1
 128 Ne              38  137   44               00 if r[44]!=r[38] goto 137
REG[38] =  i:1
REG[44] =  i:1
 129 Null             0    8    0               00 r[8]=NULL
REG[8] =  NULL
 130 Rewind           2    1    0               00 
 131 Rewind           5    1    0               00 
 132 Copy            41   45    0               00 r[45]=r[41]
REG[45] =  i:1
 133 Copy            45   46    0               00 r[46]=r[45]
REG[46] =  i:1
 134 Copy            45   47    0               00 r[47]=r[45]
REG[47] =  i:1
 135 Copy            45   48    0               00 r[48]=r[45]
REG[48] =  i:1
 136 Goto             0  157    0               00 
 157 Goto             0  121    0               00 
 121 Yield           10  158    0               00 next row of subquery_3
REG[10] =  i:114
REG[10] =  i:121
 115 Return          22    0    0               00 end inner-loop subroutine
REG[22] =  i:80
  81 Delete           7    0    0               02 
  82 Next             7   84    0               00 
  84 Column           7    2   34               00 r[34]=
REG[34] =  i:2
  85 Compare         31   34    1 k(1,B)        00 r[31] <-> r[34]
REG[31] =  i:1
REG[34] =  i:2
  86 Jump            87   80   87               00 
  87 Copy            34   31    0               00 r[31]=r[34]
REG[31] =  i:2
  88 Goto             0   51    0               00 
  51 Yield           13   89    0               00 next row of subquery_4
REG[13] =  i:45
REG[13] =  i:51
  46 SorterNext      12   40    0               00 
  40 SorterData      12   20   13               00 r[20]=data
  41 Column          13    0   18               00 r[18]=
REG[18] =  i:3
  42 Column          13    3   17               00 r[17]=
REG[17] =  i:3
  43 Column          13    2   16               00 r[16]=
REG[16] =  i:3
  44 Column          13    1   15               00 r[15]=
REG[15] =  i:3
  45 Yield           13    0    0               00 
REG[13] =  i:51
REG[13] =  i:45
  52 Copy            15   23    0               00 r[23]=r[15]
REG[23] =  i:3
  53 Copy            16   24    0               00 r[24]=r[16]
REG[24] =  i:3
  54 Copy            17   25    0               00 r[25]=r[17]
REG[25] =  i:3
  55 Copy            18   26    0               00 r[26]=r[18]
REG[26] =  i:3
  56 MakeRecord      23    4   27               00 r[27]=mkrec(r[23..26])
REG[27] =  s9[050101010103030303.........]
  57 NewRowid         8   28    0               00 r[28]=rowid
REG[28] =  i:3
  58 Insert           8   27   28               00 intkey=r[28] data=r[27]
REG[27] =  s9[050101010103030303.........]
REG[28] =  i:3
  59 Ne              21   68   28               00 if r[28]!=r[21] goto 68
REG[21] =  i:1
REG[28] =  i:3
  68 Compare         29   25    1 k(1,B)        00 r[29] <-> r[25]
REG[29] =  i:2
REG[25] =  i:3
  69 Jump            70   88   70               00 
  70 Copy            25   29    0               00 r[29]=r[25]
REG[29] =  i:3
  71 Column          10    3   33               00 r[33]=
REG[33] =  i:2
  72 AggStep1         0   33   11 sum(1)        01 accum=r[11] step(r[33])
REG[33] =  i:2
  73 Next            10   75    0               00 
  75 Column          10    2   34               00 r[34]=
REG[34] =  i:3
  76 Compare         32   34    1 k(1,B)        00 r[32] <-> r[34]
REG[32] =  i:2
REG[34] =  i:3
  77 Jump            78   71   78               00 
  78 Copy            34   32    0               00 r[32]=r[34]
REG[32] =  i:3
  79 AggValue        11    1   12 sum(1)        00 r[12]=value N=1
  80 Gosub           22  110    0               00 
REG[22] =  i:80
 110 Noop             0    0    0               00 inner-loop subroutine
 111 Copy            12   35    0               00 r[35]=r[12]
REG[35] =  i:3
 112 Column           7    0   36               00 r[36]=
REG[36] =  i:2
 113 Column           7    1   37               00 r[37]=
REG[37] =  i:2
 114 Yield           10    0    0               00 
REG[10] =  i:121
REG[10] =  i:114
 122 Copy            35   40    0               00 r[40]=r[35]
REG[40] =  i:3
 123 Copy            36   41    0               00 r[41]=r[36]
REG[41] =  i:2
 124 Copy            37   42    0               00 r[42]=r[37]
REG[42] =  i:2
 125 MakeRecord      40    3   43               00 r[43]=mkrec(r[40..42])
REG[43] =  s7[04010101030202.......]
 126 NewRowid         3   44    0               00 r[44]=rowid
REG[44] =  i:2
 127 Insert           3   43   44               00 intkey=r[44] data=r[43]
REG[43] =  s7[04010101030202.......]
REG[44] =  i:2
 128 Ne              38  137   44               00 if r[44]!=r[38] goto 137
REG[38] =  i:1
REG[44] =  i:2
 137 Compare         45   41    1 k(1,B)        00 r[45] <-> r[41]
REG[45] =  i:1
REG[41] =  i:2
 138 Jump           139  157  139               00 
 139 Copy            41   45    0               00 r[45]=r[41]
REG[45] =  i:2
 140 Column           5    2   49               00 r[49]=
REG[49] =  i:1
 141 AggStep          0   49    8 sum(1)        01 accum=r[8] step(r[49])
REG[49] =  i:1
 142 Next             5  144    0               00 
 144 Column           5    1   50               00 r[50]=
REG[50] =  i:2
 145 Compare         48   50    1 k(1,B)        00 r[48] <-> r[50]
REG[48] =  i:1
REG[50] =  i:2
 146 Jump           147  140  147               00 
 147 Copy            50   48    0               00 r[48]=r[50]
REG[48] =  i:2
 148 AggValue         8    1    9 sum(1)        00 r[9]=value N=1
 149 Gosub           39  179    0               00 
REG[39] =  i:149
 179 Noop             0    0    0               00 inner-loop subroutine
 180 Column           2    0   51               00 r[51]=
REG[51] =  i:1
 181 MakeRecord      51    1   53               00 r[53]=mkrec(r[51])
REG[53] =  s2[0209..]
 182 SorterInsert    14   53   51 1             00 key=r[53]
REG[53] =  s2[0209..]
 183 Return          39    0    0               00 end inner-loop subroutine
REG[39] =  i:149
 150 Delete           2    0    0               02 
 151 Next             2  153    0               00 
 153 Column           2    1   50               00 r[50]=
REG[50] =  i:2
 154 Compare         47   50    1 k(1,B)        00 r[47] <-> r[50]
REG[47] =  i:1
REG[50] =  i:2
 155 Jump           156  149  156               00 
 156 Copy            50   47    0               00 r[47]=r[50]
REG[47] =  i:2
 157 Goto             0  121    0               00 
 121 Yield           10  158    0               00 next row of subquery_3
REG[10] =  i:114
REG[10] =  i:121
 115 Return          22    0    0               00 end inner-loop subroutine
REG[22] =  i:80
  81 Delete           7    0    0               02 
  82 Next             7   84    0               00 
  84 Column           7    2   34               00 r[34]=
REG[34] =  i:3
  85 Compare         31   34    1 k(1,B)        00 r[31] <-> r[34]
REG[31] =  i:2
REG[34] =  i:3
  86 Jump            87   80   87               00 
  87 Copy            34   31    0               00 r[31]=r[34]
REG[31] =  i:3
  88 Goto             0   51    0               00 
  51 Yield           13   89    0               00 next row of subquery_4
REG[13] =  i:45
REG[13] =  i:51
  46 SorterNext      12   40    0               00 
  47 EndCoroutine    13    0    0               00 
REG[13] =  i:51
  89 Rewind           8  108    0               00 
  90 Column          10    3   33               00 r[33]=
REG[33] =  i:3
  91 AggStep          0   33   11 sum(1)        01 accum=r[11] step(r[33])
REG[33] =  i:3
  92 Next            10   94    0               00 
  93 Goto             0   98    0               00 
  98 AggValue        11    1   12 sum(1)        00 r[12]=value N=1
  99 Gosub           22  110    0               00 
REG[22] =  i:99
 110 Noop             0    0    0               00 inner-loop subroutine
 111 Copy            12   35    0               00 r[35]=r[12]
REG[35] =  i:6
 112 Column           7    0   36               00 r[36]=
REG[36] =  i:3
 113 Column           7    1   37               00 r[37]=
REG[37] =  i:3
 114 Yield           10    0    0               00 
REG[10] =  i:121
REG[10] =  i:114
 122 Copy            35   40    0               00 r[40]=r[35]
REG[40] =  i:6
 123 Copy            36   41    0               00 r[41]=r[36]
REG[41] =  i:3
 124 Copy            37   42    0               00 r[42]=r[37]
REG[42] =  i:3
 125 MakeRecord      40    3   43               00 r[43]=mkrec(r[40..42])
REG[43] =  s7[04010101060303.......]
 126 NewRowid         3   44    0               00 r[44]=rowid
REG[44] =  i:3
 127 Insert           3   43   44               00 intkey=r[44] data=r[43]
REG[43] =  s7[04010101060303.......]
REG[44] =  i:3
 128 Ne              38  137   44               00 if r[44]!=r[38] goto 137
REG[38] =  i:1
REG[44] =  i:3
 137 Compare         45   41    1 k(1,B)        00 r[45] <-> r[41]
REG[45] =  i:2
REG[41] =  i:3
 138 Jump           139  157  139               00 
 139 Copy            41   45    0               00 r[45]=r[41]
REG[45] =  i:3
 140 Column           5    2   49               00 r[49]=
REG[49] =  i:2
 141 AggStep1         0   49    8 sum(1)        01 accum=r[8] step(r[49])
REG[49] =  i:2
 142 Next             5  144    0               00 
 144 Column           5    1   50               00 r[50]=
REG[50] =  i:3
 145 Compare         48   50    1 k(1,B)        00 r[48] <-> r[50]
REG[48] =  i:2
REG[50] =  i:3
 146 Jump           147  140  147               00 
 147 Copy            50   48    0               00 r[48]=r[50]
REG[48] =  i:3
 148 AggValue         8    1    9 sum(1)        00 r[9]=value N=1
 149 Gosub           39  179    0               00 
REG[39] =  i:149
 179 Noop             0    0    0               00 inner-loop subroutine
 180 Column           2    0   51               00 r[51]=
REG[51] =  i:3
 181 MakeRecord      51    1   53               00 r[53]=mkrec(r[51])
REG[53] =  s3[020103...]
 182 SorterInsert    14   53   51 1             00 key=r[53]
REG[53] =  s3[020103...]
 183 Return          39    0    0               00 end inner-loop subroutine
REG[39] =  i:149
 150 Delete           2    0    0               02 
 151 Next             2  153    0               00 
 153 Column           2    1   50               00 r[50]=
REG[50] =  i:3
 154 Compare         47   50    1 k(1,B)        00 r[47] <-> r[50]
REG[47] =  i:2
REG[50] =  i:3
 155 Jump           156  149  156               00 
 156 Copy            50   47    0               00 r[47]=r[50]
REG[47] =  i:3
 157 Goto             0  121    0               00 
 121 Yield           10  158    0               00 next row of subquery_3
REG[10] =  i:114
REG[10] =  i:121
 115 Return          22    0    0               00 end inner-loop subroutine
REG[22] =  i:99
 100 Delete           7    0    0               02 
 101 Next             7  103    0               00 
 102 Goto             0  108    0               00 
 108 ResetSorter      7    0    0               00 
 109 Goto             0  116    0               00 
 116 EndCoroutine    10    0    0               00 
REG[10] =  i:121
 158 Rewind           3  177    0               00 
 159 Column           5    2   49               00 r[49]=
REG[49] =  i:3
 160 AggStep          0   49    8 sum(1)        01 accum=r[8] step(r[49])
REG[49] =  i:3
 161 Next             5  163    0               00 
 162 Goto             0  167    0               00 
 167 AggValue         8    1    9 sum(1)        00 r[9]=value N=1
 168 Gosub           39  179    0               00 
REG[39] =  i:168
 179 Noop             0    0    0               00 inner-loop subroutine
 180 Column           2    0   51               00 r[51]=
REG[51] =  i:6
 181 MakeRecord      51    1   53               00 r[53]=mkrec(r[51])
REG[53] =  s3[020106...]
 182 SorterInsert    14   53   51 1             00 key=r[53]
REG[53] =  s3[020106...]
 183 Return          39    0    0               00 end inner-loop subroutine
REG[39] =  i:168
 169 Delete           2    0    0               02 
 170 Next             2  172    0               00 
 171 Goto             0  177    0               00 
 177 ResetSorter      2    0    0               00 
 178 Goto             0  184    0               00 
 184 Explain        184   11    0 USE TEMP B-TREE FOR ORDER BY 00 
 185 OpenPseudo      15   54    3               00 3 columns in r[54]
 186 SorterSort      14  191    0               00 
 187 SorterData      14   54   15               00 r[54]=data
 188 Column          15    0   52               00 r[52]=sum(c0) OVER f
REG[52] =  i:1
 189 Yield            4    0    0               00 
REG[4] =  i:215
REG[4] =  i:189
 216 Permutation      0    0    0 [0]           00 
 217 Compare          7   52    1 k(2,B,)       01 r[7] <-> r[52]
REG[7] =  i:8
REG[52] =  i:1
 218 Jump           205  209  212               00 
 212 Yield            4  201    0               00 
REG[4] =  i:189
REG[4] =  i:212
 190 SorterNext      14  187    0               00 
 187 SorterData      14   54   15               00 r[54]=data
 188 Column          15    0   52               00 r[52]=sum(c0) OVER f
REG[52] =  i:3
 189 Yield            4    0    0               00 
REG[4] =  i:212
REG[4] =  i:189
 213 Goto             0  216    0               00 
 216 Permutation      0    0    0 [0]           00 
 217 Compare          7   52    1 k(2,B,)       01 r[7] <-> r[52]
REG[7] =  i:8
REG[52] =  i:3
 218 Jump           205  209  212               00 
 212 Yield            4  201    0               00 
REG[4] =  i:189
REG[4] =  i:212
 190 SorterNext      14  187    0               00 
 187 SorterData      14   54   15               00 r[54]=data
 188 Column          15    0   52               00 r[52]=sum(c0) OVER f
REG[52] =  i:6
 189 Yield            4    0    0               00 
REG[4] =  i:212
REG[4] =  i:189
 213 Goto             0  216    0               00 
 216 Permutation      0    0    0 [0]           00 
 217 Compare          7   52    1 k(2,B,)       01 r[7] <-> r[52]
REG[7] =  i:8
REG[52] =  i:6
 218 Jump           205  209  212               00 
 212 Yield            4  201    0               00 
REG[4] =  i:189
REG[4] =  i:212
 190 SorterNext      14  187    0               00 
 191 EndCoroutine     4    0    0               00 
REG[4] =  i:212
 201 Gosub            5  193    0               00 
REG[5] =  i:201
 193 IfNot            1  196    0               00 
REG[1] =  i:0
 196 Copy             7    2    0               00 r[2]=r[7]
REG[2] =  i:8
 197 Integer          1    1    0               00 r[1]=1
REG[1] =  i:1
 198 ResultRow        7    1    0               00 output=r[7]
REG[7] =  i:8
 199 Return           5    0    0               00 
REG[5] =  i:201
 202 Yield            3  219    0               00 
REG[3] =  i:8
REG[3] =  i:202
   9 EndCoroutine     3    0    0               00 
REG[3] =  i:202
 219 Halt             0    0    0               00 
SQL: [;
;VALUES(count(*)OVER());]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
   2 OpenEphemeral    0    1    0               00 nColumn=1
   3 OpenDup          1    0    0               00 
   4 OpenDup          2    0    0               00 
   5 OpenDup          3    0    0               00 
   6 InitCoroutine    3   12    7               00 subquery_2
  12 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
  13 Explain         13    0    0 SCAN SUBQUERY 2 00 
  14 InitCoroutine    3    0    7               00 
  15 Yield            3   37    0               00 next row of subquery_2
REG[3] =  i:6
REG[3] =  i:15
   7 Explain          7    0    0 CO-ROUTINE 2  00 
   8 Explain          8    7    0 SCAN CONSTANT ROW 00 
   9 Integer          0    4    0               00 r[4]=0
REG[4] =  i:0
  10 Yield            3    0    0               00 
REG[3] =  i:15
REG[3] =  i:10
  16 Copy             4    7    0               00 r[7]=r[4]
REG[7] =  i:0
  17 MakeRecord       7    1    8               00 r[8]=mkrec(r[7])
REG[8] =  s2[0208..]
  18 NewRowid         1    9    0               00 r[9]=rowid
REG[9] =  i:1
  19 Insert           1    8    9               00 intkey=r[9] data=r[8]
REG[8] =  s2[0208..]
REG[9] =  i:1
  20 Ne               5   25    9               00 if r[9]!=r[5] goto 25
REG[5] =  i:1
REG[9] =  i:1
  21 Null             0    1    0               00 r[1]=NULL
REG[1] =  NULL
  22 Rewind           0    1    0               00 
  23 Rewind           3    1    0               00 
  24 Goto             0   36    0               00 
  36 Goto             0   15    0               00 
  15 Yield            3   37    0               00 next row of subquery_2
REG[3] =  i:10
REG[3] =  i:15
  11 EndCoroutine     3    0    0               00 
REG[3] =  i:15
  37 Rewind           1   49    0               00 
  38 AggStep          0   10    1 count(0)      00 accum=r[1] step(r[10])
  39 Next             3   41    0               00 
  40 Goto             0   42    0               00 
  42 AggValue         1    0    2 count(0)      00 r[2]=value N=0
  43 Gosub            6   51    0               00 
REG[6] =  i:43
  51 Noop             0    0    0               00 inner-loop subroutine
  52 Copy             2   10    0               00 r[10]=r[2]
REG[10] =  i:1
  53 ResultRow       10    1    0               00 output=r[10]
REG[10] =  i:1
  54 Return           6    0    0               00 end inner-loop subroutine
REG[6] =  i:43
  44 Delete           0    0    0               02 
  45 Next             0   47    0               00 
  46 Goto             0   49    0               00 
  49 ResetSorter      0    0    0               00 
  50 Goto             0   55    0               00 
  55 Halt             0    0    0               00 
SQL: [;
;VALUES(count(*)OVER()),(2);]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Explain          1    0    0 SCAN 2 CONSTANT ROWS 00 
   2 Copy             0    1    0               00 r[1]=r[0]
REG[1] =  undefined
   3 ResultRow        1    1    0               00 output=r[1]

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f85a465c859 in __GI_abort () at abort.c:79
#2  0x00007f85a465c729 in __assert_fail_base (fmt=0x7f85a47f2588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x216557 "memIsValid(&pMem[i])", file=0x22873d "sqlite3.c", line=85004, function=<optimized out>)
    at assert.c:92
#3  0x00007f85a466dfd6 in __GI___assert_fail (assertion=0x216557 "memIsValid(&pMem[i])", file=0x22873d "sqlite3.c", line=85004, function=0x216524 "int sqlite3VdbeExec(Vdbe *)") at assert.c:101
#4  0x00000000003c3bf1 in sqlite3VdbeExec (p=0x1860cd0) at sqlite3.c:85004
#5  0x0000000000411104 in sqlite3Step (p=0x1860cd0) at sqlite3.c:81930
#6  0x000000000029128d in sqlite3_step (pStmt=0x1860cd0) at sqlite3.c:81995
#7  0x00000000002570b9 in main (argc=1, argv=0x7ffed33ccbf8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53442] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
