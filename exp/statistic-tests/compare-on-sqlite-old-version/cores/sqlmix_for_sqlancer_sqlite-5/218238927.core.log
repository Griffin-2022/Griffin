GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000057,sig:06,src:020315+018369,time:1720809,execs:204528,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [select typeof(zeroblob(-1))
;]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Integer         -1    4    0               00 r[4]=-1
REG[4] =  i:-1
   6 Function0        1    4    3 zeroblob(1)   01 r[3]=func(r[4])
REG[4] =  i:-1
REG[3] =  s0[]+0z
   7 Function0        1    3    2 typeof(1)     01 r[2]=func(r[3])
REG[3] =  s0[]+0z
REG[2] =   t4[blob](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   t4[blob](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   t4[blob](8)
   4 Halt             0    0    0               00 
SQL: [;
;ANALYZE 
;]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    0 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:0
   2 If               3    5    0               00 
REG[3] =  i:0
   3 SetCookie        0    2    4               00 
   4 SetCookie        0    5    1               00 
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:2
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:1
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        3    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        3   17    1               00 intkey=r[1]
REG[1] =  i:1
  16 Rowid            3    5    0               00 r[5]=rowid
REG[5] =  i:1
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:1
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 sqlite_stat1  00 r[7]='sqlite_stat1'
REG[7] =   t12[sqlite_stat1](8)
  20 String8          0    8    0 sqlite_stat1  00 r[8]='sqlite_stat1'
REG[8] =   t12[sqlite_stat1](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:2
  22 String8          0   10    0 CREATE TABLE sqlite_stat1(tbl,idx,stat) 00 r[10]='CREATE TABLE sqlite_stat1(tbl,idx,stat)'
REG[10] =   t39[CREATE TABLE sq](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit]
  24 Insert           3   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s75[06172525015B7461626C6573716C6974..%%.[tablesqlit]
REG[5] =  i:1
  25 SetCookie        0    1    1               00 
  26 ParseSchema      0    0    0 tbl_name='sqlite_stat1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    1 0             00 usesStmtJournal=0
  16 String8          0    2    0 sqlite_stat1  00 r[2]='sqlite_stat1'
REG[2] =   t12[sqlite_stat1](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t12[sqlite_stat1](8)
REG[1] =   s12[sqlite_stat1](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s12[sqlite_stat1](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:2
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s39[CREATE TABLE sq](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s12[sqlite_stat1](8)
REG[5] =  i:2
REG[6] =   s39[CREATE TABLE sq](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 OpenWrite        0    2    0 3             10 root=2 iDb=0; sqlite_stat1
  28 LoadAnalysis     0    0    0               00 
SQL: [SELECT tbl,idx,stat FROM 'main'.sqlite_stat1]
VDBE Trace:
   0 Init             0   10    0               00 Start at 10
  10 Transaction      0    0    1 0             01 usesStmtJournal=0
  11 Goto             0    1    0               00 
   1 OpenRead         0    2    0 3             00 root=2 iDb=0; sqlite_stat1
   2 Explain          2    0    0 SCAN TABLE sqlite_stat1 00 
   3 Rewind           0    9    0               00 
   9 Halt             0    0    0               00 
  29 Expire           0    0    0               00 
  30 Halt             0    0    0               00 
SQL: [;SELECT quote(zeroblob(-1444444444444444));]
VDBE Trace:
   0 Init             0    5    0               00 Start at 5
   5 Int64            0    4    0 -1444444444444444 00 r[4]=-1444444444444444
REG[4] =  i:-1444444444444444
   6 Function0        1    4    3 zeroblob(1)   01 r[3]=func(r[4])
REG[4] =  i:-1444444444444444
REG[3] =  s0[]+0z
   7 Function0        1    3    2 quote(1)      01 r[2]=func(r[3])
REG[3] =  s0[]+0z
REG[2] =   s3[X''](8)
   8 Goto             0    1    0               00 
   1 Explain          1    0    0 SCAN CONSTANT ROW 00 
   2 Copy             2    1    0               00 r[1]=r[2]
REG[1] =   s3[X''](8)
   3 ResultRow        1    1    0               00 output=r[1]
REG[1] =   s3[X''](8)
   4 Halt             0    0    0               00 
SQL: [DROP TABLE IF EXISTS t0;]
VDBE Trace:
   0 Init             0    2    0               00 Start at 2
   2 Transaction      0    0    1 0             01 usesStmtJournal=0
   3 Goto             0    1    0               00 
   1 Halt             0    0    0               00 
SQL: [;CREATE TABLE t0(a int, c0, c1, t1);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:3
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 t0            00 r[7]='t0'
REG[7] =   t2[t0](8)
  20 String8          0    8    0 t0            00 r[8]='t0'
REG[8] =   t2[t0](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:3
  22 String8          0   10    0 CREATE TABLE t0(a int, c0, c1, t1) 00 r[10]='CREATE TABLE t0(a int, c0, c1, t1)'
REG[10] =   t34[CREATE TABLE t0](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s50[0617111101517461626C657430743003.....Qtablet0t0.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s50[0617111101517461626C657430743003.....Qtablet0t0.]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='t0' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 t0            00 r[2]='t0'
REG[2] =   t2[t0](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t2[t0](8)
REG[1] =   s2[t0](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s2[t0](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:3
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s34[CREATE TABLE t0](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s2[t0](8)
REG[5] =  i:3
REG[6] =   s34[CREATE TABLE t0](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t0 VALUES (1,1,1,1), (2,2,2,2), (3,3,3,3), (4,4,4,4);]
VDBE Trace:
   0 Init             0   31    0               00 Start at 31
  31 Transaction      0    1    2 0             01 usesStmtJournal=0
  32 Goto             0    1    0               00 
   1 InitCoroutine    6   24    2               00 
  24 OpenWrite        0    3    0 4             00 root=3 iDb=0; t0
  25 Yield            6   30    0               00 
REG[6] =  i:1
REG[6] =  i:25
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 Integer          1    2    0               00 r[2]=1
REG[2] =  i:1
   4 Integer          1    3    0               00 r[3]=1
REG[3] =  i:1
   5 Integer          1    4    0               00 r[4]=1
REG[4] =  i:1
   6 Integer          1    5    0               00 r[5]=1
REG[5] =  i:1
   7 Yield            6    0    0               00 
REG[6] =  i:25
REG[6] =  i:7
  26 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:1
  27 MakeRecord       2    4    7 D             00 r[7]=mkrec(r[2..5])
REG[7] =  s5[0509090909.....]
  28 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s5[0509090909.....]
REG[1] =  i:1
  29 Goto             0   25    0               00 
  25 Yield            6   30    0               00 
REG[6] =  i:7
REG[6] =  i:25
   8 Integer          2    2    0               00 r[2]=2
REG[2] =  i:2
   9 Integer          2    3    0               00 r[3]=2
REG[3] =  i:2
  10 Integer          2    4    0               00 r[4]=2
REG[4] =  i:2
  11 Integer          2    5    0               00 r[5]=2
REG[5] =  i:2
  12 Yield            6    0    0               00 
REG[6] =  i:25
REG[6] =  i:12
  26 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
  27 MakeRecord       2    4    7 D             00 r[7]=mkrec(r[2..5])
REG[7] =  s9[050101010102020202.........]
  28 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s9[050101010102020202.........]
REG[1] =  i:2
  29 Goto             0   25    0               00 
  25 Yield            6   30    0               00 
REG[6] =  i:12
REG[6] =  i:25
  13 Integer          3    2    0               00 r[2]=3
REG[2] =  i:3
  14 Integer          3    3    0               00 r[3]=3
REG[3] =  i:3
  15 Integer          3    4    0               00 r[4]=3
REG[4] =  i:3
  16 Integer          3    5    0               00 r[5]=3
REG[5] =  i:3
  17 Yield            6    0    0               00 
REG[6] =  i:25
REG[6] =  i:17
  26 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
  27 MakeRecord       2    4    7 D             00 r[7]=mkrec(r[2..5])
REG[7] =  s9[050101010103030303.........]
  28 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s9[050101010103030303.........]
REG[1] =  i:3
  29 Goto             0   25    0               00 
  25 Yield            6   30    0               00 
REG[6] =  i:17
REG[6] =  i:25
  18 Integer          4    2    0               00 r[2]=4
REG[2] =  i:4
  19 Integer          4    3    0               00 r[3]=4
REG[3] =  i:4
  20 Integer          4    4    0               00 r[4]=4
REG[4] =  i:4
  21 Integer          4    5    0               00 r[5]=4
REG[5] =  i:4
  22 Yield            6    0    0               00 
REG[6] =  i:25
REG[6] =  i:22
  26 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:4
  27 MakeRecord       2    4    7 D             00 r[7]=mkrec(r[2..5])
REG[7] =  s9[050101010104040404.........]
  28 Insert           0    7    1 t0            39 intkey=r[1] data=r[7]
REG[7] =  s9[050101010104040404.........]
REG[1] =  i:4
  29 Goto             0   25    0               00 
  25 Yield            6   30    0               00 
REG[6] =  i:22
REG[6] =  i:25
  23 EndCoroutine     6    0    0               00 
REG[6] =  i:25
  30 Halt             0    0    0               00 
SQL: [;SELECT LIKELY(t0.rowid) <= '0' FROM t0;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 String8          0    3    0 0             00 r[3]='0'
REG[3] =   t1[0](8)
  11 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    8    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:1
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:2
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:3
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:4
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;
;SELECT (t0.rowid) <= '0' FROM t0;]
VDBE Trace:
   0 Init             0    9    0               00 Start at 9
   9 Transaction      0    0    2 0             01 usesStmtJournal=0
  10 String8          0    3    0 0             00 r[3]='0'
REG[3] =   t1[0](8)
  11 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0    8    0               00 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:1
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:2
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:2
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:3
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:3
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   4 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:4
   5 Le               3    1    2               64 r[1] = (r[2]<=r[3])
REG[3] =   t1[0](8)
REG[2] =  i:4
REG[1] =  i:0
   6 ResultRow        1    1    0               00 output=r[1]
REG[1] =  i:0
   7 Next             0    4    0               01 
   8 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE (t0.rowid) <= '0';]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   13    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
REG[1] =   t1[0](8)
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   13    2               53 if r[2]>r[1] goto 13
REG[1] =   t1[0](8)
REG[2] =  i:1
  13 Halt             0    0    0               00 
SQL: [;
;SELECT unlikely(t0.rowid) <= '0', likelihood(t0.rowid,0.5) <= '0' FROM t0;]
VDBE Trace:
   0 Init             0   11    0               00 Start at 11
  11 Transaction      0    0    2 0             01 usesStmtJournal=0
  12 String8          0    4    0 0             00 r[4]='0'
REG[4] =   t1[0](8)
  13 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0   10    0               00 
   4 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   5 Le               4    1    3               64 r[1] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:1
REG[1] =  i:0
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:1
   7 Le               4    2    3               64 r[2] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:1
REG[2] =  i:0
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:0
REG[2] =  i:0
   9 Next             0    4    0               01 
   4 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   5 Le               4    1    3               64 r[1] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:2
REG[1] =  i:0
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:2
   7 Le               4    2    3               64 r[2] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:2
REG[2] =  i:0
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:0
REG[2] =  i:0
   9 Next             0    4    0               01 
   4 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:3
   5 Le               4    1    3               64 r[1] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:3
REG[1] =  i:0
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:3
   7 Le               4    2    3               64 r[2] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:3
REG[2] =  i:0
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:0
REG[2] =  i:0
   9 Next             0    4    0               01 
   4 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:4
   5 Le               4    1    3               64 r[1] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:4
REG[1] =  i:0
   6 Rowid            0    3    0               00 r[3]=rowid
REG[3] =  i:4
   7 Le               4    2    3               64 r[2] = (r[3]<=r[4])
REG[4] =   t1[0](8)
REG[3] =  i:4
REG[2] =  i:0
   8 ResultRow        1    2    0               00 output=r[1..2]
REG[1] =  i:0
REG[2] =  i:0
   9 Next             0    4    0               01 
  10 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE unlikely(t0.rowid) <= '0';]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   13    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
REG[1] =   t1[0](8)
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   13    2               53 if r[2]>r[1] goto 13
REG[1] =   t1[0](8)
REG[2] =  i:1
  13 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE likelihood(t0.rowid, 0.5) <= '0';]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   13    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
REG[1] =   t1[0](8)
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   13    2               53 if r[2]>r[1] goto 13
REG[1] =   t1[0](8)
REG[2] =  i:1
  13 Halt             0    0    0               00 
SQL: [;
;SELECT unlikely(t0.rowid <= '0'),
         likely(t0.rowid <= '0'),
         likelihood(t0.rowid <= '0',0.5)
    FROM t0;]
VDBE Trace:
   0 Init             0   13    0               00 Start at 13
  13 Transaction      0    0    2 0             01 usesStmtJournal=0
  14 String8          0    5    0 0             00 r[5]='0'
REG[5] =   t1[0](8)
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 0             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SCAN TABLE t0 00 
   3 Rewind           0   12    0               00 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   5 Le               5    1    4               64 r[1] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:1
REG[1] =  i:0
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   7 Le               5    2    4               64 r[2] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:1
REG[2] =  i:0
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:1
   9 Le               5    3    4               64 r[3] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:1
REG[3] =  i:0
  10 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  i:0
  11 Next             0    4    0               01 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   5 Le               5    1    4               64 r[1] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:2
REG[1] =  i:0
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   7 Le               5    2    4               64 r[2] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:2
REG[2] =  i:0
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:2
   9 Le               5    3    4               64 r[3] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:2
REG[3] =  i:0
  10 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  i:0
  11 Next             0    4    0               01 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:3
   5 Le               5    1    4               64 r[1] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:3
REG[1] =  i:0
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:3
   7 Le               5    2    4               64 r[2] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:3
REG[2] =  i:0
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:3
   9 Le               5    3    4               64 r[3] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:3
REG[3] =  i:0
  10 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  i:0
  11 Next             0    4    0               01 
   4 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:4
   5 Le               5    1    4               64 r[1] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:4
REG[1] =  i:0
   6 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:4
   7 Le               5    2    4               64 r[2] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:4
REG[2] =  i:0
   8 Rowid            0    4    0               00 r[4]=rowid
REG[4] =  i:4
   9 Le               5    3    4               64 r[3] = (r[4]<=r[5])
REG[5] =   t1[0](8)
REG[4] =  i:4
REG[3] =  i:0
  10 ResultRow        1    3    0               00 output=r[1..3]
REG[1] =  i:0
REG[2] =  i:0
REG[3] =  i:0
  11 Next             0    4    0               01 
  12 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE unlikely(t0.rowid <= '0');]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   13    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
REG[1] =   t1[0](8)
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   13    2               53 if r[2]>r[1] goto 13
REG[1] =   t1[0](8)
REG[2] =  i:1
  13 Halt             0    0    0               00 
SQL: [;
;SELECT * FROM t0 WHERE likelihood(t0.rowid <= '0', 0.5);]
VDBE Trace:
   0 Init             0   14    0               00 Start at 14
  14 Transaction      0    0    2 0             01 usesStmtJournal=0
  15 Goto             0    1    0               00 
   1 OpenRead         0    3    0 4             00 root=3 iDb=0; t0
   2 Explain          2    0    0 SEARCH TABLE t0 USING INTEGER PRIMARY KEY (rowid<?) 00 
   3 Rewind           0   13    0               00 
   4 String8          0    1    0 0             00 r[1]='0'
REG[1] =   t1[0](8)
   5 Rowid            0    2    0               00 r[2]=rowid
REG[2] =  i:1
   6 Gt               1   13    2               53 if r[2]>r[1] goto 13
REG[1] =   t1[0](8)
REG[2] =  i:1
  13 Halt             0    0    0               00 
SQL: [;CREATE TABLE b(c, t1a FLOAT);]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    2 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 CreateBtree      0    2    1               00 r[2]=root iDb=0 flags=1
REG[2] =  i:4
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:3
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:3
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:3
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:3
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:3
  18 String8          0    6    0 table         00 r[6]='table'
REG[6] =   t5[table](8)
  19 String8          0    7    0 b             00 r[7]='b'
REG[7] =   t1[b](8)
  20 String8          0    8    0 b             00 r[8]='b'
REG[8] =   t1[b](8)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:4
  22 String8          0   10    0 CREATE TABLE b(c, t1a FLOAT) 00 r[10]='CREATE TABLE b(c, t1a FLOAT)'
REG[10] =   t28[CREATE TABLE b(](8)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s42[06170F0F01457461626C656262044352.....Etablebb.CR]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s42[06170F0F01457461626C656262044352.....Etablebb.CR]
REG[5] =  i:3
  25 SetCookie        0    1    3               00 
  26 ParseSchema      0    0    0 tbl_name='b' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    3 0             00 usesStmtJournal=0
  16 String8          0    2    0 b             00 r[2]='b'
REG[2] =   t1[b](8)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t7[trigger](8)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s12[sqlite_stat1](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s12[sqlite_stat1](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s2[t0](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s2[t0](8)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s1[b](8)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t1[b](8)
REG[1] =   s1[b](8)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s5[table](8)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t7[trigger](8)
REG[1] =   s5[table](8)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s1[b](8)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:4
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s28[CREATE TABLE b(](8)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s1[b](8)
REG[5] =  i:4
REG[6] =   s28[CREATE TABLE b(](8)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 
SQL: [;INSERT INTO t0(c1) VALUES(''),(NULL),('X'),(NULL);]
VDBE Trace:
   0 Init             0   20    0               00 Start at 20
  20 Transaction      0    1    3 0             01 usesStmtJournal=0
  21 Null             0    2    0               00 r[2]=NULL
REG[2] =  NULL
  22 Null             0    3    0               00 r[3]=NULL
REG[3] =  NULL
  23 Null             0    5    0               00 r[5]=NULL
REG[5] =  NULL
  24 Goto             0    1    0               00 
   1 InitCoroutine    6   12    2               00 
  12 OpenWrite        0    3    0 4             00 root=3 iDb=0; t0
  13 Yield            6   19    0               00 
REG[6] =  i:1
REG[6] =  i:13
   2 Explain          2    0    0 SCAN 4 CONSTANT ROWS 00 
   3 String8          0    7    0               00 r[7]=''
REG[7] =   t0[](8)
   4 Yield            6    0    0               00 
REG[6] =  i:13
REG[6] =  i:4
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:5
  15 SCopy            7    4    0               00 r[4]=r[7]
REG[4] =   t0[](8)
  16 MakeRecord       2    4    9 D             00 r[9]=mkrec(r[2..5])
REG[9] =  s5[0500000D00.....]
  17 Insert           0    9    1 t0            39 intkey=r[1] data=r[9]
REG[9] =  s5[0500000D00.....]
REG[1] =  i:5
  18 Goto             0   13    0               00 
  13 Yield            6   19    0               00 
REG[6] =  i:4
REG[6] =  i:13
   5 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
   6 Yield            6    0    0               00 
REG[6] =  i:13
REG[6] =  i:6
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:6
  15 SCopy            7    4    0               00 r[4]=r[7]
REG[4] =  NULL
  16 MakeRecord       2    4    9 D             00 r[9]=mkrec(r[2..5])
REG[9] =  s5[0500000000.....]
  17 Insert           0    9    1 t0            39 intkey=r[1] data=r[9]
REG[9] =  s5[0500000000.....]
REG[1] =  i:6
  18 Goto             0   13    0               00 
  13 Yield            6   19    0               00 
REG[6] =  i:6
REG[6] =  i:13
   7 String8          0    7    0 X             00 r[7]='X'
REG[7] =   t1[X](8)
   8 Yield            6    0    0               00 
REG[6] =  i:13
REG[6] =  i:8
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:7
  15 SCopy            7    4    0               00 r[4]=r[7]
REG[4] =   t1[X](8)
  16 MakeRecord       2    4    9 D             00 r[9]=mkrec(r[2..5])
REG[9] =  s6[0500000F0058.....X]
  17 Insert           0    9    1 t0            39 intkey=r[1] data=r[9]
REG[9] =  s6[0500000F0058.....X]
REG[1] =  i:7
  18 Goto             0   13    0               00 
  13 Yield            6   19    0               00 
REG[6] =  i:8
REG[6] =  i:13
   9 Null             0    7    0               00 r[7]=NULL
REG[7] =  NULL
  10 Yield            6    0    0               00 
REG[6] =  i:13
REG[6] =  i:10
  14 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:8
  15 SCopy            7    4    0               00 r[4]=r[7]
REG[4] =  NULL
  16 MakeRecord       2    4    9 D             00 r[9]=mkrec(r[2..5])
REG[9] =  s5[0500000000.....]
  17 Insert           0    9    1 t0            39 intkey=r[1] data=r[9]
REG[9] =  s5[0500000000.....]
REG[1] =  i:8
  18 Goto             0   13    0               00 
  13 Yield            6   19    0               00 
REG[6] =  i:10
REG[6] =  i:13
  11 EndCoroutine     6    0    0               00 
REG[6] =  i:13
  19 Halt             0    0    0               00 
SQL: [;SELECT coalesce(max(quote(t1)),10) FROM t0 GROUP BY t1;]
VDBE Trace:
   0 Init             0   45    0               00 Start at 45
  45 Transaction      0    0    3 0             01 usesStmtJournal=0
  46 Goto             0    1    0               00 
   1 SorterOpen       1    1    0 k(1,B)        00 
   2 Integer          0    4    0               00 r[4]=0; clear abort flag
REG[4] =  i:0
   3 Null             0    7    7               00 r[7..7]=NULL
REG[7] =  NULL
   4 Gosub            6   41    0               00 
REG[6] =  i:4
  41 Null             0    1    2               00 r[1..2]=NULL
REG[1] =  NULL
  42 Integer          0    3    0               00 r[3]=0; indicate accumulator empty
REG[3] =  i:0
  43 Return           6    0    0               00 
REG[6] =  i:4
   5 OpenRead         0    3    0 4             00 root=3 iDb=0; t0
   6 Explain          6    0    0 SCAN TABLE t0 00 
   7 Rewind           0   13    0               00 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  i:1
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0209..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0209..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  i:2
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020102...]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s3[020102...]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  i:3
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020103...]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s3[020103...]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  i:4
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s3[020104...]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s3[020104...]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
   8 Explain          8    0    0 USE TEMP B-TREE FOR GROUP BY 00 
   9 Column           0    3    9               00 r[9]=t0.t1
REG[9] =  NULL
  10 MakeRecord       9    1   10               00 r[10]=mkrec(r[9])
REG[10] =  s2[0200..]
  11 SorterInsert     1   10    0               00 key=r[10]
REG[10] =  s2[0200..]
  12 Next             0    8    0               01 
  13 OpenPseudo       2    9    1               00 1 columns in r[9]
  14 SorterSort       1   44    0               00 GROUP BY sort
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function0        0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep          0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  NULL
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  NULL
  18 Jump            19   23   19               00 
  23 Column           2    0   11               00 r[11]=
REG[11] =  NULL
  24 Function         0   11   10 quote(1)      01 r[10]=func(r[11])
REG[11] =  NULL
REG[10] =   t4[NULL](8)
  25 CollSeq          0    0    0 (BINARY)      00 
  26 AggStep1         0   10    1 max(1)        01 accum=r[1] step(r[10])
REG[10] =   t4[NULL](8)
  27 Integer          1    3    0               00 r[3]=1; indicate data in accumulator
REG[3] =  i:1
  28 SorterNext       1   15    0               00 
  15 SorterData       1    9    2               00 r[9]=data
  16 Column           2    0    8               00 r[8]=
REG[8] =  i:1
  17 Compare          7    8    1 k(1,B)        00 r[7] <-> r[8]
REG[7] =  NULL
REG[8] =  i:1
  18 Jump            19   23   19               00 
  19 Move             8    7    1               00 r[7]=r[8]
REG[7] =  i:1
  20 Gosub            5   33    0               00 output one row
REG[5] =  i:20
  33 IfPos            3   35    0               00 if r[3]>0 then r[3]-=0, goto 35; Groupby result generator entry point
REG[3] =  i:1
  35 AggFinal         1    1    0 max(1)        00 accum=r[1] N=1
  36 SCopy            1   12    0               00 r[12]=r[1]
REG[12] =   t4[NULL](8)
  37 NotNull         12   39    0               00 if r[12]!=NULL goto 39
REG[12] =   t4[NULL](8)
  39 ResultRow       12    1    0               00 output=r[12]
REG[12] =   s4[NULL](8)
  40 Return           5    0    0               00 end groupby result generator
REG[5] =  i:20
  21 IfPos            4   44    0               00 if r[4]>0 then r[4]-=0, goto 44; check abort flag
REG[4] =  i:0
  22 Gosub            6   41    0               00 reset accumulator
REG[6] =  i:22
  41 Null             0    1    2               00 r[1..2]=NULL

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f16e7a93859 in __GI_abort () at abort.c:79
#2  0x00007f16e7a93729 in __assert_fail_base (fmt=0x7f16e7c29588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", 
    line=75351, function=<optimized out>) at assert.c:92
#3  0x00007f16e7aa4fd6 in __GI___assert_fail (assertion=0x221a82 "(mFlags&MEM_Str)==0 || (pMem->n==pX->n && pMem->z==pX->z)", file=0x22873d "sqlite3.c", line=75351, 
    function=0x208940 "void sqlite3VdbeMemAboutToChange(Vdbe *, Mem *)") at assert.c:101
#4  0x00000000003e1103 in sqlite3VdbeMemAboutToChange (pVdbe=0x26f0460, pMem=0x26ec7b8) at sqlite3.c:75351
#5  0x00000000003c031d in sqlite3VdbeExec (p=0x26f0460) at sqlite3.c:84329
#6  0x0000000000411104 in sqlite3Step (p=0x26f0460) at sqlite3.c:81930
#7  0x000000000029128d in sqlite3_step (pStmt=0x26f0460) at sqlite3.c:81995
#8  0x00000000002570b9 in main (argc=1, argv=0x7ffd712cf7d8) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 50242] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
