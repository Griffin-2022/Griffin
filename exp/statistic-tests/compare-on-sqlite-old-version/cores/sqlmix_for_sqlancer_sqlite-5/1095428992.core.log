GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000510,sig:06,src:019681+026011,time:22413012,execs:6746808,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
parser: [[[;
;PRAGMA trusted_schema=ON;;ALTER TABLE minval ADD COLUMN ctx;SELECT hex('Á¿') AS x
;SELECT hex('Ã¿') AS x
;;CREATE TEMP VIEW t1i1 AS SELECT f2(c0+c0) FROM minval;;
;ALTER TABLE a RENAME _xxx_ TO t2i1;SELECT sql FROM sqlite_master WHERE name='minval';;CREATE TRIGGER tr1 AFTER INSERT ON minval WHEN new.ctx<0 BEGIN
    SELECT maxval, ctx, file FROM minval;
    DELETE FROM minval WHERE ctx=32;
    UPDATE minval SET maxval=ctx+1, ctx=0 WHERE ctx=32;
    INSERT INTO minval(maxval, ctx, file) SELECT 4, 5, 6 WHERE 0;
  END;SELECT hex('à') AS x
;;
;CREATE TABLE tr2(tab4, col0, col1);SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE minval ADD col2;;ALTER TABLE minval ADD col3 NOT NULL DEFAULT 10;;CREATE INDEX col4 ON t0(c1);SELECT c0 FROM t0;;CREATE TABLE tab1(
    tab2 INTEGER PRIMARY KEY,
    t1x INTEGER,
    aa INTEGER,
    bb TEXT UNIQUE NOT NULL,
    i0 tab1,
    CHECK( length(bb)>=40 AND tab2>0 )
  );]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'PRAGMA' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'PRAGMA', go to state 215
parser: Return. Stack=[cmdlist PRAGMA]
parser: Input 'ID' in state 215
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist PRAGMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 215.
parser: ... then shift 'nm', go to state 295
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 392
parser: Shift 'EQ', go to state 31
parser: Return. Stack=[cmdlist PRAGMA nm dbnm EQ]
parser: Input 'ON' in state 31
parser: Shift 'ON', pending reduce 356
parser: Return. Stack=[cmdlist PRAGMA nm dbnm EQ ON]
parser: Input 'SEMI' with pending reduce 356
parser: Reduce 356 [nmnum ::= ON], go to state 31.
parser: ... then shift 'nmnum', pending reduce 234
parser: Reduce 234 [cmd ::= PRAGMA nm dbnm EQ nmnum], go to state 1.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[;ALTER TABLE minval ADD COLUMN ctx;SELECT hex('Á¿') AS x
;SELECT hex('Ã¿') AS x
;;CREATE TEMP VIEW t1i1 AS SELECT f2(c0+c0) FROM minval;;
;ALTER TABLE a RENAME _xxx_ TO t2i1;SELECT sql FROM sqlite_master WHERE name='minval';;CREATE TRIGGER tr1 AFTER INSERT ON minval WHEN new.ctx<0 BEGIN
    SELECT maxval, ctx, file FROM minval;
    DELETE FROM minval WHERE ctx=32;
    UPDATE minval SET maxval=ctx+1, ctx=0 WHERE ctx=32;
    INSERT INTO minval(maxval, ctx, file) SELECT 4, 5, 6 WHERE 0;
  END;SELECT hex('à') AS x
;;
;CREATE TABLE tr2(tab4, col0, col1);SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE minval ADD col2;;ALTER TABLE minval ADD col3 NOT NULL DEFAULT 10;;CREATE INDEX col4 ON t0(c1);SELECT c0 FROM t0;;CREATE TABLE tab1(
    tab2 INTEGER PRIMARY KEY,
    t1x INTEGER,
    aa INTEGER,
    bb TEXT UNIQUE NOT NULL,
    i0 tab1,
    CHECK( length(bb)>=40 AND tab2>0 )
  );]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'ALTER' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'ALTER', go to state 423
parser: Return. Stack=[ecmd ALTER]
parser: Input 'TABLE' in state 423
parser: Shift 'TABLE', go to state 133
parser: Return. Stack=[ecmd ALTER TABLE]
parser: Input 'ID' in state 133
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd ALTER TABLE ID]
parser: Input 'ADD' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 133.
parser: ... then shift 'nm', go to state 459
parser: Reduce 110 [fullname ::= nm], go to state 133.
parser: ... then shift 'fullname', go to state 422
parser: Reduce 275 [add_column_fullname ::= fullname], go to state 133.
parser: ... then shift 'add_column_fullname', go to state 420
parser: Shift 'ADD', go to state 290
parser: Return. Stack=[ecmd ALTER TABLE add_column_fullname ADD]
parser: Input 'COLUMNKW' in state 290
parser: Shift 'COLUMNKW', pending reduce 367
parser: Return. Stack=[ecmd ALTER TABLE add_column_fullname ADD COLUMNKW]
parser: Input 'ID' with pending reduce 367
parser: Reduce 367 [kwcolumn_opt ::= COLUMNKW], go to state 290.
parser: ... then shift 'kwcolumn_opt', go to state 163
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd ALTER TABLE add_column_fullname ADD kwcolumn_opt ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 163.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 163.
parser: ... then shift 'columnname', go to state 371
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 149
parser: Reduce 274 [cmd ::= ALTER TABLE add_column_fullname ADD kwcolumn_opt columnname carglist], go to state 1.
parser: [[[UPDATE "main".sqlite_master SET sql = substr(sql,1,32) || ', ' || 'ctx' || substr(sql,33) WHERE type = 'table' AND name = 'minval']]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'CONCAT' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT]
parser: Input 'STRING' in state 113
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT STRING]
parser: Input 'CONCAT' in state 537
parser: Reduce 168 [term ::= STRING], go to state 113.
parser: ... then shift 'term', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Shift 'CONCAT', go to state 113
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT]
parser: Input 'ID' in state 113
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ expr CONCAT ID LP distinct exprlist RP]
parser: Input 'WHERE' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 113.
parser: ... then shift 'expr', go to state 146
parser: Reduce 186 [expr ::= expr CONCAT expr], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr EQ STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "main".sqlite_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE t0(c0,c1,t1)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE a(b,c,t1a,t1bc,t2,d,t3,y,f,z,t7_idx_00000061,t2def,swarm,e,x,_x_,_xxx_ DEFAULT 3.14,
t7 DEFAULT('hiccup'),t7_idx_00000062 NOD NULL DEFAULT(false))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'DEFAULT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'FLOAT' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'FLOAT', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt FLOAT]
parser: Input 'COMMA' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'DEFAULT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'LP' in state 267
parser: Shift 'LP', go to state 123
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP]
parser: Input 'STRING' in state 123
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 123.
parser: ... then shift 'term', go to state 47
parser: Shift 'RP', pending reduce 31
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP term RP]
parser: Input 'COMMA' with pending reduce 31
parser: Reduce 31 [ccons ::= DEFAULT LP expr RP], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'DEFAULT' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'LP' in state 267
parser: Shift 'LP', go to state 123
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP]
parser: Input 'ID' in state 123
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 123.
parser: ... then shift 'expr', go to state 47
parser: Shift 'RP', pending reduce 31
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP expr RP]
parser: Input 'RP' with pending reduce 31
parser: Reduce 31 [ccons ::= DEFAULT LP expr RP], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE INDEX id ON t0(t1 DESC)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'INDEX' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 221 [uniqueflag ::=].
parser: ... then shift 'uniqueflag', go to state 453
parser: Shift 'INDEX', go to state 315
parser: Return. Stack=[createkw uniqueflag INDEX]
parser: Input 'ID' in state 315
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 225
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists ID]
parser: Input 'ON' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 225.
parser: ... then shift 'nm', go to state 314
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 452
parser: Shift 'ON', go to state 224
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON]
parser: Input 'ID' in state 224
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 224.
parser: ... then shift 'nm', go to state 451
parser: Shift 'LP', go to state 18
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP]
parser: Input 'ID' in state 18
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP ID]
parser: Input 'DESC' in state 416
parser: FALLBACK DESC => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 18.
parser: ... then shift 'expr', go to state 13
parser: Shift 'DESC', pending reduce 132
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP expr DESC]
parser: Input 'RP' with pending reduce 132
parser: Reduce 132 [sortorder ::= DESC], go to state 13.
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 18.
parser: ... then shift 'sortlist', go to state 400
parser: Shift 'RP', go to state 313
parser: Return. Stack=[createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP]
parser: Input 'SEMI' in state 313
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', pending reduce 219
parser: Reduce 219 [cmd ::= createkw uniqueflag INDEX ifnotexists nm dbnm ON nm LP sortlist RP where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TRIGGER tbl INSERT ON t0 WHEN new.c1 NOT NULL BEGIN

SELECT c1 () OVER , dense_rank() OVER c1, c1 () OVER w1
FROM t0
WINDOW
w1 AS
( w1 ORDER BY c1
ROWS BETWEEN 2 NOT IN(SELECT c1, sum(c1) w2,max(c1)OVER FROM t0
WINDOW
w1 AS
(PARTITION BY c1
ROWS BETWEEN '' PRECEDING AND false FOLLOWING),
c1 AS
(PARTITION BY c1 ORDER BY c1
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
) PRECEDING AND 1 FOLLOWING),
w2 AS
(PARTITION BY c1 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
w3 AS
(PARTITION BY c1 ORDER BY c1
ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
;
SELECT c1, sum(c1) w2,max(c1)OVER FROM t0
WINDOW
w1 AS
(PARTITION BY c1
ROWS BETWEEN '' PRECEDING AND false FOLLOWING),
c1 AS
(PARTITION BY c1 ORDER BY c1
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
;

END]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TRIGGER' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK TRIGGER => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TRIGGER', go to state 319
parser: Return. Stack=[createkw temp TRIGGER]
parser: Input 'ID' in state 319
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 227
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TRIGGER ifnotexists ID]
parser: Input 'INSERT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 227.
parser: ... then shift 'nm', go to state 318
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 257
parser: Reduce 244 [trigger_time ::=].
parser: ... then shift 'trigger_time', go to state 256
parser: Shift 'INSERT', pending reduce 245
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time INSERT]
parser: Input 'ON' with pending reduce 245
parser: Reduce 245 [trigger_event ::= DELETE|INSERT], go to state 256.
parser: ... then shift 'trigger_event', go to state 460
parser: Shift 'ON', go to state 179
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON]
parser: Input 'ID' in state 179
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON ID]
parser: Input 'WHEN' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 179.
parser: ... then shift 'nm', go to state 459
parser: Reduce 110 [fullname ::= nm], go to state 179.
parser: ... then shift 'fullname', go to state 317
parser: Reduce 360 [foreach_clause ::=].
parser: ... then shift 'foreach_clause', go to state 316
parser: Shift 'WHEN', go to state 87
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN]
parser: Input 'ID' in state 87
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 87.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN nm DOT ID]
parser: Input 'NOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 87.
parser: ... then shift 'expr', go to state 61
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN expr NOT]
parser: Input 'NULL' in state 384
parser: Shift 'NULL', pending reduce 191
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN expr NOT NULL]
parser: Input 'BEGIN' with pending reduce 191
parser: Reduce 191 [expr ::= expr NOT NULL], go to state 87.
parser: ... then shift 'expr', go to state 61
parser: FALLBACK BEGIN => ID
parser: Reduce 249 [when_clause ::= WHEN expr], go to state 316.
parser: ... then shift 'when_clause', pending reduce 241
parser: Reduce 241 [trigger_decl ::= temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause when_clause], go to state 134.
parser: ... then shift 'trigger_decl', go to state 450
parser: Shift 'BEGIN', go to state 144
parser: Return. Stack=[createkw trigger_decl BEGIN]
parser: Input 'SELECT' in state 144
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 12
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'RP' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Reduce 214 [exprlist ::=].
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'COMMA' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'RP' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Reduce 214 [exprlist ::=].
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'OVER' in state 192
parser: Reduce 315 [filter_opt ::=].
parser: ... then shift 'filter_opt', go to state 481
parser: Shift 'OVER', go to state 204
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER]
parser: Input 'ID' in state 204
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 204.
parser: ... then shift 'nm', pending reduce 314
parser: Reduce 314 [over_clause ::= filter_opt OVER nm], go to state 192.
parser: ... then shift 'over_clause', pending reduce 175
parser: Reduce 175 [expr ::= ID|INDEXED LP distinct exprlist RP over_clause], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'RP' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Reduce 214 [exprlist ::=].
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'OVER' in state 192
parser: Reduce 315 [filter_opt ::=].
parser: ... then shift 'filter_opt', go to state 481
parser: Shift 'OVER', go to state 204
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER]
parser: Input 'ID' in state 204
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER ID]
parser: Input 'FROM' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 204.
parser: ... then shift 'nm', pending reduce 314
parser: Reduce 314 [over_clause ::= filter_opt OVER nm], go to state 192.
parser: ... then shift 'over_clause', pending reduce 175
parser: Reduce 175 [expr ::= ID|INDEXED LP distinct exprlist RP over_clause], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WINDOW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'WINDOW', go to state 136
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW]
parser: Input 'ID' in state 136
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 136.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP]
parser: Input 'ID' in state 33
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 33.
parser: ... then shift 'nm', go to state 159
parser: Shift 'ORDER', go to state 501
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER]
parser: Input 'BY' in state 501
parser: Shift 'BY', go to state 23
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY]
parser: Input 'ID' in state 23
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 23.
parser: ... then shift 'expr', go to state 13
parser: FALLBACK ROWS => ID
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 23.
parser: ... then shift 'sortlist', go to state 185
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 185.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN]
parser: Input 'INTEGER' in state 8
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN INTEGER]
parser: Input 'NOT' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 8.
parser: ... then shift 'term', go to state 42
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term NOT]
parser: Input 'IN' in state 384
parser: Shift 'IN', pending reduce 201
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term NOT IN]
parser: Input 'LP' with pending reduce 201
parser: Reduce 201 [in_op ::= NOT IN], go to state 42.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP]
parser: Input 'SELECT' in state 3
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'COMMA' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'FROM' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WINDOW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'WINDOW', go to state 136
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW]
parser: Input 'ID' in state 136
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 136.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: FALLBACK ROWS => ID
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: FALLBACK ROWS => ID
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'STRING' in state 8
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN STRING]
parser: Input 'PRECEDING' in state 537
parser: FALLBACK PRECEDING => ID
parser: Reduce 168 [term ::= STRING], go to state 8.
parser: ... then shift 'term', go to state 42
parser: Shift 'PRECEDING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN term PRECEDING]
parser: Input 'AND' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 8.
parser: ... then shift 'frame_bound', pending reduce 301
parser: Reduce 301 [frame_bound_s ::= frame_bound], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'ID' in state 7
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND ID]
parser: Input 'FOLLOWING' in state 416
parser: FALLBACK FOLLOWING => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 7.
parser: ... then shift 'expr', go to state 42
parser: Shift 'FOLLOWING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND expr FOLLOWING]
parser: Input 'RP' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP window RP]
parser: Input 'COMMA' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 136.
parser: ... then shift 'windowdefn', pending reduce 288
parser: Reduce 288 [windowdefn_list ::= windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Shift 'COMMA', go to state 186
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA]
parser: Input 'ID' in state 186
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 186.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY ID]
parser: Input 'ORDER' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: FALLBACK ROWS => ID
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: FALLBACK ROWS => ID
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 285.
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'UNBOUNDED' in state 8
parser: Shift 'UNBOUNDED', go to state 503
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED]
parser: Input 'PRECEDING' in state 503
parser: Shift 'PRECEDING', pending reduce 302
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED PRECEDING]
parser: Input 'AND' with pending reduce 302
parser: Reduce 302 [frame_bound_s ::= UNBOUNDED PRECEDING], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'CURRENT' in state 7
parser: Shift 'CURRENT', go to state 504
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT]
parser: Input 'ROW' in state 504
parser: Shift 'ROW', pending reduce 306
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT ROW]
parser: Input 'RP' with pending reduce 306
parser: Reduce 306 [frame_bound ::= CURRENT ROW], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP window RP]
parser: Input 'RP' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 186.
parser: ... then shift 'windowdefn', pending reduce 289
parser: Reduce 289 [windowdefn_list ::= windowdefn_list COMMA windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Reduce 312 [window_clause ::= WINDOW windowdefn_list], go to state 194.
parser: ... then shift 'window_clause', go to state 353
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 352
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt window_clause orderby_opt limit_opt], go to state 3.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 3.
parser: ... then shift 'select', go to state 518
parser: Shift 'RP', pending reduce 204
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP select RP]
parser: Input 'PRECEDING' with pending reduce 204
parser: Reduce 204 [expr ::= expr in_op LP select RP], go to state 8.
parser: ... then shift 'expr', go to state 42
parser: Shift 'PRECEDING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN expr PRECEDING]
parser: Input 'AND' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 8.
parser: ... then shift 'frame_bound', pending reduce 301
parser: Reduce 301 [frame_bound_s ::= frame_bound], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'INTEGER' in state 7
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN frame_bound_s AND INTEGER]
parser: Input 'FOLLOWING' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 7.
parser: ... then shift 'term', go to state 42
parser: Shift 'FOLLOWING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN frame_bound_s AND term FOLLOWING]
parser: Input 'RP' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 185.
parser: ... then shift 'frame_opt', pending reduce 294
parser: Reduce 294 [window ::= nm ORDER BY sortlist frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP window RP]
parser: Input 'COMMA' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 136.
parser: ... then shift 'windowdefn', pending reduce 288
parser: Reduce 288 [windowdefn_list ::= windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Shift 'COMMA', go to state 186
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA]
parser: Input 'ID' in state 186
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 186.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: FALLBACK ROWS => ID
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: FALLBACK ROWS => ID
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'UNBOUNDED' in state 8
parser: Shift 'UNBOUNDED', go to state 503
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED]
parser: Input 'PRECEDING' in state 503
parser: Shift 'PRECEDING', pending reduce 302
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED PRECEDING]
parser: Input 'AND' with pending reduce 302
parser: Reduce 302 [frame_bound_s ::= UNBOUNDED PRECEDING], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'CURRENT' in state 7
parser: Shift 'CURRENT', go to state 504
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT]
parser: Input 'ROW' in state 504
parser: Shift 'ROW', pending reduce 306
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT ROW]
parser: Input 'RP' with pending reduce 306
parser: Reduce 306 [frame_bound ::= CURRENT ROW], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP window RP]
parser: Input 'COMMA' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 186.
parser: ... then shift 'windowdefn', pending reduce 289
parser: Reduce 289 [windowdefn_list ::= windowdefn_list COMMA windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Shift 'COMMA', go to state 186
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA]
parser: Input 'ID' in state 186
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 186.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY ID]
parser: Input 'ORDER' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: FALLBACK ROWS => ID
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: FALLBACK ROWS => ID
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 285.
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'CURRENT' in state 8
parser: Shift 'CURRENT', go to state 504
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN CURRENT]
parser: Input 'ROW' in state 504
parser: Shift 'ROW', pending reduce 306
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN CURRENT ROW]
parser: Input 'AND' with pending reduce 306
parser: Reduce 306 [frame_bound ::= CURRENT ROW], go to state 8.
parser: ... then shift 'frame_bound', pending reduce 301
parser: Reduce 301 [frame_bound_s ::= frame_bound], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'UNBOUNDED' in state 7
parser: Shift 'UNBOUNDED', go to state 505
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND UNBOUNDED]
parser: Input 'FOLLOWING' in state 505
parser: Shift 'FOLLOWING', pending reduce 304
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND UNBOUNDED FOLLOWING]
parser: Input 'RP' with pending reduce 304
parser: Reduce 304 [frame_bound_e ::= UNBOUNDED FOLLOWING], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP window RP]
parser: Input 'SEMI' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 186.
parser: ... then shift 'windowdefn', pending reduce 289
parser: Reduce 289 [windowdefn_list ::= windowdefn_list COMMA windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Reduce 312 [window_clause ::= WINDOW windowdefn_list], go to state 194.
parser: ... then shift 'window_clause', go to state 353
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 352
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt window_clause orderby_opt limit_opt], go to state 12.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 12.
parser: ... then shift 'select', go to state 373
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 258
parser: Reduce 258 [trigger_cmd ::= scanpt select scanpt], go to state 144.
parser: ... then shift 'trigger_cmd', go to state 434
parser: Shift 'SEMI', pending reduce 251
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd SEMI]
parser: Input 'SELECT' with pending reduce 251
parser: Reduce 251 [trigger_cmd_list ::= trigger_cmd SEMI], go to state 144.
parser: ... then shift 'trigger_cmd_list', go to state 187
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 12
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'COMMA' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'FROM' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WINDOW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'WINDOW', go to state 136
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW]
parser: Input 'ID' in state 136
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 136.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: FALLBACK ROWS => ID
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: FALLBACK ROWS => ID
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'STRING' in state 8
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN STRING]
parser: Input 'PRECEDING' in state 537
parser: FALLBACK PRECEDING => ID
parser: Reduce 168 [term ::= STRING], go to state 8.
parser: ... then shift 'term', go to state 42
parser: Shift 'PRECEDING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN term PRECEDING]
parser: Input 'AND' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 8.
parser: ... then shift 'frame_bound', pending reduce 301
parser: Reduce 301 [frame_bound_s ::= frame_bound], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'ID' in state 7
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND ID]
parser: Input 'FOLLOWING' in state 416
parser: FALLBACK FOLLOWING => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 7.
parser: ... then shift 'expr', go to state 42
parser: Shift 'FOLLOWING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND expr FOLLOWING]
parser: Input 'RP' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP window RP]
parser: Input 'COMMA' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 136.
parser: ... then shift 'windowdefn', pending reduce 288
parser: Reduce 288 [windowdefn_list ::= windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Shift 'COMMA', go to state 186
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA]
parser: Input 'ID' in state 186
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 186.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY ID]
parser: Input 'ORDER' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: FALLBACK ROWS => ID
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: FALLBACK ROWS => ID
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 285.
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'UNBOUNDED' in state 8
parser: Shift 'UNBOUNDED', go to state 503
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED]
parser: Input 'PRECEDING' in state 503
parser: Shift 'PRECEDING', pending reduce 302
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED PRECEDING]
parser: Input 'AND' with pending reduce 302
parser: Reduce 302 [frame_bound_s ::= UNBOUNDED PRECEDING], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'CURRENT' in state 7
parser: Shift 'CURRENT', go to state 504
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT]
parser: Input 'ROW' in state 504
parser: Shift 'ROW', pending reduce 306
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT ROW]
parser: Input 'RP' with pending reduce 306
parser: Reduce 306 [frame_bound ::= CURRENT ROW], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP window RP]
parser: Input 'SEMI' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 186.
parser: ... then shift 'windowdefn', pending reduce 289
parser: Reduce 289 [windowdefn_list ::= windowdefn_list COMMA windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Reduce 312 [window_clause ::= WINDOW windowdefn_list], go to state 194.
parser: ... then shift 'window_clause', go to state 353
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 352
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt window_clause orderby_opt limit_opt], go to state 12.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 12.
parser: ... then shift 'select', go to state 373
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 258
parser: Reduce 258 [trigger_cmd ::= scanpt select scanpt], go to state 187.
parser: ... then shift 'trigger_cmd', go to state 449
parser: Shift 'SEMI', pending reduce 250
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list trigger_cmd SEMI]
parser: Input 'END' with pending reduce 250
parser: Reduce 250 [trigger_cmd_list ::= trigger_cmd_list trigger_cmd SEMI], go to state 144.
parser: ... then shift 'trigger_cmd_list', go to state 187
parser: Shift 'END', pending reduce 240
parser: Return. Stack=[createkw trigger_decl BEGIN trigger_cmd_list END]
parser: Input 'SEMI' with pending reduce 240
parser: Reduce 240 [cmd ::= createkw trigger_decl BEGIN trigger_cmd_list END], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE minval(maxval, file, ctx)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE x(type text,name text,tbl_name text,rootpage int,sql text)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'COMMA' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'RP' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT name, rootpage, sql FROM "temp".sqlite_temp_master ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT hex('Á¿') AS x
;SELECT hex('Ã¿') AS x
;;CREATE TEMP VIEW t1i1 AS SELECT f2(c0+c0) FROM minval;;
;ALTER TABLE a RENAME _xxx_ TO t2i1;SELECT sql FROM sqlite_master WHERE name='minval';;CREATE TRIGGER tr1 AFTER INSERT ON minval WHEN new.ctx<0 BEGIN
    SELECT maxval, ctx, file FROM minval;
    DELETE FROM minval WHERE ctx=32;
    UPDATE minval SET maxval=ctx+1, ctx=0 WHERE ctx=32;
    INSERT INTO minval(maxval, ctx, file) SELECT 4, 5, 6 WHERE 0;
  END;SELECT hex('à') AS x
;;
;CREATE TABLE tr2(tab4, col0, col1);SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE minval ADD col2;;ALTER TABLE minval ADD col3 NOT NULL DEFAULT 10;;CREATE INDEX col4 ON t0(c1);SELECT c0 FROM t0;;CREATE TABLE tab1(
    tab2 INTEGER PRIMARY KEY,
    t1x INTEGER,
    aa INTEGER,
    bb TEXT UNIQUE NOT NULL,
    i0 tab1,
    CHECK( length(bb)>=40 AND tab2>0 )
  );]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'AS' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[SELECT hex('Ã¿') AS x
;;CREATE TEMP VIEW t1i1 AS SELECT f2(c0+c0) FROM minval;;
;ALTER TABLE a RENAME _xxx_ TO t2i1;SELECT sql FROM sqlite_master WHERE name='minval';;CREATE TRIGGER tr1 AFTER INSERT ON minval WHEN new.ctx<0 BEGIN
    SELECT maxval, ctx, file FROM minval;
    DELETE FROM minval WHERE ctx=32;
    UPDATE minval SET maxval=ctx+1, ctx=0 WHERE ctx=32;
    INSERT INTO minval(maxval, ctx, file) SELECT 4, 5, 6 WHERE 0;
  END;SELECT hex('à') AS x
;;
;CREATE TABLE tr2(tab4, col0, col1);SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE minval ADD col2;;ALTER TABLE minval ADD col3 NOT NULL DEFAULT 10;;CREATE INDEX col4 ON t0(c1);SELECT c0 FROM t0;;CREATE TABLE tab1(
    tab2 INTEGER PRIMARY KEY,
    t1x INTEGER,
    aa INTEGER,
    bb TEXT UNIQUE NOT NULL,
    i0 tab1,
    CHECK( length(bb)>=40 AND tab2>0 )
  );]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'AS' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'AS', go to state 242
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS]
parser: Input 'ID' in state 242
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct sclp scanpt expr scanpt AS ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 242.
parser: ... then shift 'nm', pending reduce 98
parser: Reduce 98 [as ::= AS nm], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Reduce 100 [from ::=].
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;CREATE TEMP VIEW t1i1 AS SELECT f2(c0+c0) FROM minval;;
;ALTER TABLE a RENAME _xxx_ TO t2i1;SELECT sql FROM sqlite_master WHERE name='minval';;CREATE TRIGGER tr1 AFTER INSERT ON minval WHEN new.ctx<0 BEGIN
    SELECT maxval, ctx, file FROM minval;
    DELETE FROM minval WHERE ctx=32;
    UPDATE minval SET maxval=ctx+1, ctx=0 WHERE ctx=32;
    INSERT INTO minval(maxval, ctx, file) SELECT 4, 5, 6 WHERE 0;
  END;SELECT hex('à') AS x
;;
;CREATE TABLE tr2(tab4, col0, col1);SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE minval ADD col2;;ALTER TABLE minval ADD col3 NOT NULL DEFAULT 10;;CREATE INDEX col4 ON t0(c1);SELECT c0 FROM t0;;CREATE TABLE tab1(
    tab2 INTEGER PRIMARY KEY,
    t1x INTEGER,
    aa INTEGER,
    bb TEXT UNIQUE NOT NULL,
    i0 tab1,
    CHECK( length(bb)>=40 AND tab2>0 )
  );]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'CREATE' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[ecmd CREATE]
parser: Input 'TEMP' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 1.
parser: ... then shift 'createkw', go to state 134
parser: Shift 'TEMP', pending reduce 17
parser: Return. Stack=[ecmd createkw TEMP]
parser: Input 'VIEW' with pending reduce 17
parser: Reduce 17 [temp ::= TEMP], go to state 134.
parser: ... then shift 'temp', go to state 388
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[ecmd createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 461
parser: Shift 'AS', go to state 37
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'PLUS' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct expr PLUS]
parser: Input 'ID' in state 115
parser: Shift 'ID', go to state 416
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct expr PLUS ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 115.
parser: ... then shift 'expr', go to state 132
parser: Reduce 184 [expr ::= expr PLUS|MINUS expr], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'FROM' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[ecmd createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 77
parser: Reduce 77 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 1.
parser: [[[UPDATE 'temp'.sqlite_master SET type='view', name='t1i1', tbl_name='t1i1', rootpage=#2, sql='CREATE VIEW t1i1 AS SELECT f2(c0+c0) FROM minval' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[ecmd cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping ecmd
parser: [[[SELECT name, rootpage, sql FROM 'temp'.sqlite_master WHERE tbl_name='t1i1' AND type!='trigger' ORDER BY rowid]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct sclp scanpt ID]
parser: Input 'FROM' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'STRING' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr EQ STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NE', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NE STRING]
parser: Input 'ORDER' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from where_opt groupby_opt having_opt ORDER BY ID]
parser: Input 'SEMI' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 194.
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE VIEW t1i1 AS SELECT f2(c0+c0) FROM minval]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'VIEW' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK VIEW => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'VIEW', go to state 322
parser: Return. Stack=[createkw temp VIEW]
parser: Input 'ID' in state 322
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 228
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 228.
parser: ... then shift 'nm', go to state 321
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 320
parser: Reduce 222 [eidlist_opt ::=].
parser: ... then shift 'eidlist_opt', go to state 461
parser: Shift 'AS', go to state 37
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS]
parser: Input 'SELECT' in state 37
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'PLUS' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Shift 'PLUS', go to state 115
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct expr PLUS]
parser: Input 'ID' in state 115
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct expr PLUS ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 115.
parser: ... then shift 'expr', go to state 132
parser: Reduce 184 [expr ::= expr PLUS|MINUS expr], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'FROM' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 37.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 37.
parser: ... then shift 'select', pending reduce 77
parser: Reduce 77 [cmd ::= createkw temp VIEW ifnotexists nm dbnm eidlist_opt AS select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[;
;ALTER TABLE a RENAME _xxx_ TO t2i1;SELECT sql FROM sqlite_master WHERE name='minval';;CREATE TRIGGER tr1 AFTER INSERT ON minval WHEN new.ctx<0 BEGIN
    SELECT maxval, ctx, file FROM minval;
    DELETE FROM minval WHERE ctx=32;
    UPDATE minval SET maxval=ctx+1, ctx=0 WHERE ctx=32;
    INSERT INTO minval(maxval, ctx, file) SELECT 4, 5, 6 WHERE 0;
  END;SELECT hex('à') AS x
;;
;CREATE TABLE tr2(tab4, col0, col1);SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;ALTER TABLE minval ADD col2;;ALTER TABLE minval ADD col3 NOT NULL DEFAULT 10;;CREATE INDEX col4 ON t0(c1);SELECT c0 FROM t0;;CREATE TABLE tab1(
    tab2 INTEGER PRIMARY KEY,
    t1x INTEGER,
    aa INTEGER,
    bb TEXT UNIQUE NOT NULL,
    i0 tab1,
    CHECK( length(bb)>=40 AND tab2>0 )
  );]]]
parser: Input 'SEMI' in state 0
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[SEMI]
parser: Input 'SEMI' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Shift 'SEMI', pending reduce 320
parser: Return. Stack=[ecmd SEMI]
parser: Input 'ALTER' with pending reduce 320
parser: Reduce 320 [ecmd ::= SEMI], go to state 1.
parser: ... then shift 'ecmd', pending reduce 318
parser: Reduce 318 [cmdlist ::= cmdlist ecmd], go to state 0.
parser: ... then shift 'cmdlist', go to state 1
parser: Shift 'ALTER', go to state 423
parser: Return. Stack=[cmdlist ALTER]
parser: Input 'TABLE' in state 423
parser: Shift 'TABLE', go to state 133
parser: Return. Stack=[cmdlist ALTER TABLE]
parser: Input 'ID' in state 133
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist ALTER TABLE ID]
parser: Input 'RENAME' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 133.
parser: ... then shift 'nm', go to state 459
parser: FALLBACK RENAME => ID
parser: Reduce 110 [fullname ::= nm], go to state 133.
parser: ... then shift 'fullname', go to state 422
parser: Shift 'RENAME', go to state 269
parser: Return. Stack=[cmdlist ALTER TABLE fullname RENAME]
parser: Input 'ID' in state 269
parser: Reduce 366 [kwcolumn_opt ::=].
parser: ... then shift 'kwcolumn_opt', go to state 211
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist ALTER TABLE fullname RENAME kwcolumn_opt ID]
parser: Input 'TO' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 211.
parser: ... then shift 'nm', go to state 421
parser: Shift 'TO', go to state 210
parser: Return. Stack=[cmdlist ALTER TABLE fullname RENAME kwcolumn_opt nm TO]
parser: Input 'ID' in state 210
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[cmdlist ALTER TABLE fullname RENAME kwcolumn_opt nm TO ID]
parser: Input 'SEMI' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 210.
parser: ... then shift 'nm', pending reduce 276
parser: Reduce 276 [cmd ::= ALTER TABLE fullname RENAME kwcolumn_opt nm TO nm], go to state 1.
parser: [[[UPDATE "main".sqlite_master SET sql = sqlite_rename_column(sql, type, name, 'main', 'a', 16, 't2i1', 0, 0) WHERE name NOT LIKE 'sqlite_%' AND (type != 'index' OR tbl_name = 'a') AND sql NOT LIKE 'create virtual%']]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'ID' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'WHERE' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'NOT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr NOT]
parser: Input 'LIKE_KW' in state 384
parser: Shift 'LIKE_KW', pending reduce 187
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 187
parser: Reduce 187 [likeop ::= NOT LIKE_KW|MATCH], go to state 63.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr likeop STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 188 [expr ::= expr likeop expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'LP' in state 120
parser: Shift 'LP', go to state 4
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP]
parser: Input 'ID' in state 4
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP ID]
parser: Input 'NE' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'NE', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr NE]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr NE STRING]
parser: Input 'OR' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'OR', go to state 119
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR]
parser: Input 'ID' in state 119
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR expr EQ]
parser: Input 'STRING' in state 117
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr OR expr EQ STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 119.
parser: ... then shift 'expr', go to state 74
parser: Reduce 180 [expr ::= expr OR expr], go to state 4.
parser: ... then shift 'expr', go to state 50
parser: Shift 'RP', pending reduce 162
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND LP expr RP]
parser: Input 'AND' with pending reduce 162
parser: Reduce 162 [expr ::= LP expr RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND ID]
parser: Input 'NOT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr NOT]
parser: Input 'LIKE_KW' in state 384
parser: Shift 'LIKE_KW', pending reduce 187
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 187
parser: Reduce 187 [likeop ::= NOT LIKE_KW|MATCH], go to state 76.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr AND expr likeop STRING]
parser: Input 'SEMI' in state 537
parser: Reduce 168 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 188 [expr ::= expr likeop expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[UPDATE temp.sqlite_master SET sql = sqlite_rename_column(sql, type, name, 'main', 'a', 16, 't2i1', 0, 1) WHERE type IN ('trigger', 'view')]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'TEMP' in state 299
parser: FALLBACK TEMP => ID
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: FALLBACK TEMP => ID
parser: Shift 'TEMP', pending reduce 331
parser: Return. Stack=[with UPDATE orconf TEMP]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'ID' in state 84
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'COMMA' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ ID LP distinct exprlist RP]
parser: Input 'WHERE' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 84.
parser: ... then shift 'expr', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'IN' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'IN', pending reduce 200
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr IN]
parser: Input 'LP' with pending reduce 200
parser: Reduce 200 [in_op ::= IN], go to state 63.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP]
parser: Input 'STRING' in state 3
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 3.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP nexprlist COMMA]
parser: Input 'STRING' in state 107
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP nexprlist COMMA STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 3.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 3.
parser: ... then shift 'exprlist', go to state 519
parser: Shift 'RP', pending reduce 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr in_op LP exprlist RP]
parser: Input 'SEMI' with pending reduce 202
parser: Reduce 202 [expr ::= expr in_op LP exprlist RP], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[SELECT 1 FROM "main".sqlite_master WHERE name NOT LIKE 'sqlite_%' AND sql NOT LIKE 'create virtual%' AND sqlite_rename_test('main', sql, type, name, 0)=NULL ]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'NOT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT]
parser: Input 'LIKE_KW' in state 384
parser: Shift 'LIKE_KW', pending reduce 187
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 187
parser: Reduce 187 [likeop ::= NOT LIKE_KW|MATCH], go to state 63.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 188 [expr ::= expr likeop expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NOT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT]
parser: Input 'LIKE_KW' in state 384
parser: Shift 'LIKE_KW', pending reduce 187
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 187
parser: Reduce 187 [likeop ::= NOT LIKE_KW|MATCH], go to state 76.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr likeop STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 188 [expr ::= expr likeop expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'EQ' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'NULL' in state 117
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ NULL]
parser: Input 'SEMI' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: [[[SELECT 1 FROM temp.sqlite_master WHERE name NOT LIKE 'sqlite_%' AND sql NOT LIKE 'create virtual%' AND sqlite_rename_test('main', sql, type, name, 1)=NULL ]]]
parser: Input 'SELECT' in state 0
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[SELECT]
parser: Input 'INTEGER' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct sclp scanpt INTEGER]
parser: Input 'FROM' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 77.
parser: ... then shift 'term', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[SELECT distinct selcollist FROM]
parser: Input 'TEMP' in state 197
parser: FALLBACK TEMP => ID
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: FALLBACK TEMP => ID
parser: Shift 'TEMP', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix TEMP]
parser: Input 'DOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Shift 'DOT', go to state 245
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT]
parser: Input 'ID' in state 245
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[SELECT distinct selcollist FROM stl_prefix nm DOT ID]
parser: Input 'WHERE' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 245.
parser: ... then shift 'nm', pending reduce 109
parser: Reduce 109 [dbnm ::= DOT nm], go to state 349.
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[SELECT distinct selcollist from WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE ID]
parser: Input 'NOT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT]
parser: Input 'LIKE_KW' in state 384
parser: Shift 'LIKE_KW', pending reduce 187
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 187
parser: Reduce 187 [likeop ::= NOT LIKE_KW|MATCH], go to state 63.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr likeop STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 188 [expr ::= expr likeop expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'NOT' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT]
parser: Input 'LIKE_KW' in state 384
parser: Shift 'LIKE_KW', pending reduce 187
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr NOT LIKE_KW]
parser: Input 'STRING' with pending reduce 187
parser: Reduce 187 [likeop ::= NOT LIKE_KW|MATCH], go to state 76.
parser: ... then shift 'likeop', go to state 112
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr likeop STRING]
parser: Input 'AND' in state 537
parser: Reduce 168 [term ::= STRING], go to state 112.
parser: ... then shift 'term', go to state 124
parser: Reduce 188 [expr ::= expr likeop expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'AND', go to state 120
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND]
parser: Input 'ID' in state 120
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP]
parser: Input 'STRING' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 11.
parser: ... then shift 'term', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'ID' in state 107
parser: Shift 'ID', go to state 416
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 107.
parser: ... then shift 'expr', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Shift 'COMMA', go to state 107
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA]
parser: Input 'INTEGER' in state 107
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct nexprlist COMMA INTEGER]
parser: Input 'RP' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 107.
parser: ... then shift 'term', go to state 71
parser: Reduce 215 [nexprlist ::= nexprlist COMMA expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND ID LP distinct exprlist RP]
parser: Input 'EQ' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ]
parser: Input 'NULL' in state 117
parser: Shift 'NULL', pending reduce 167
parser: Return. Stack=[SELECT distinct selcollist from WHERE expr AND expr EQ NULL]
parser: Input 'SEMI' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 117.
parser: ... then shift 'term', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 120.
parser: ... then shift 'expr', go to state 76
parser: Reduce 179 [expr ::= expr AND expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 360.
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 357
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 87
parser: Reduce 87 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt], go to state 0.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 0.
parser: ... then shift 'select', pending reduce 79
parser: Reduce 79 [cmd ::= select], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 1.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdlist cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: Popping cmdlist
parser: [[[CREATE TABLE t0(c0,c1,t1)]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'RP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='t0', tbl_name='t0', rootpage=#2, sql='CREATE TABLE t0(c0,c1,t1)' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TABLE a(b,c,t1a,t1bc,t2,d,t3,y,f,z,t7_idx_00000061,t2def,swarm,e,x,_x_,_xxx_ DEFAULT 3.14,
t7 DEFAULT('hiccup'),t7_idx_00000062 NOD NULL DEFAULT(false))]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TABLE' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TABLE', go to state 324
parser: Return. Stack=[createkw temp TABLE]
parser: Input 'ID' in state 324
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 229
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TABLE ifnotexists ID]
parser: Input 'LP' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 229.
parser: ... then shift 'nm', go to state 323
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', pending reduce 13
parser: Reduce 13 [create_table ::= createkw temp TABLE ifnotexists nm dbnm], go to state 0.
parser: ... then shift 'create_table', go to state 289
parser: Shift 'LP', go to state 139
parser: Return. Stack=[create_table LP]
parser: Input 'ID' in state 139
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 139.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 139.
parser: ... then shift 'columnname', go to state 376
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 150
parser: Reduce 330 [columnlist ::= columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'DEFAULT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'FLOAT' in state 267
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 199
parser: Shift 'FLOAT', pending reduce 167
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT scanpt FLOAT]
parser: Input 'COMMA' with pending reduce 167
parser: Reduce 167 [term ::= NULL|FLOAT|BLOB], go to state 199.
parser: ... then shift 'term', go to state 382
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', pending reduce 30
parser: Reduce 30 [ccons ::= DEFAULT scanpt term scanpt], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'DEFAULT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Reduce 24 [typetoken ::=].
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'LP' in state 267
parser: Shift 'LP', go to state 123
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP]
parser: Input 'STRING' in state 123
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP STRING]
parser: Input 'RP' in state 537
parser: Reduce 168 [term ::= STRING], go to state 123.
parser: ... then shift 'term', go to state 47
parser: Shift 'RP', pending reduce 31
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP term RP]
parser: Input 'COMMA' with pending reduce 31
parser: Reduce 31 [ccons ::= DEFAULT LP expr RP], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Shift 'COMMA', go to state 34
parser: Return. Stack=[create_table LP columnlist COMMA]
parser: Input 'ID' in state 34
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[create_table LP columnlist COMMA ID]
parser: Input 'ID' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 34.
parser: ... then shift 'nm', go to state 190
parser: Shift 'ID', pending reduce 335
parser: Return. Stack=[create_table LP columnlist COMMA nm ID]
parser: Input 'NULL' with pending reduce 335
parser: Reduce 335 [typename ::= ID|STRING], go to state 190.
parser: ... then shift 'typename', go to state 390
parser: Reduce 334 [typetoken ::= typename], go to state 190.
parser: ... then shift 'typetoken', pending reduce 23
parser: Reduce 23 [columnname ::= nm typetoken], go to state 34.
parser: ... then shift 'columnname', go to state 383
parser: Reduce 339 [carglist ::=].
parser: ... then shift 'carglist', go to state 151
parser: Shift 'NULL', go to state 336
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist NULL]
parser: Input 'DEFAULT' in state 336
parser: Reduce 68 [onconf ::=].
parser: ... then shift 'onconf', pending reduce 340
parser: Reduce 340 [ccons ::= NULL onconf], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Shift 'DEFAULT', go to state 267
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT]
parser: Input 'LP' in state 267
parser: Shift 'LP', go to state 123
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP]
parser: Input 'ID' in state 123
parser: Shift 'ID', go to state 416
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 123.
parser: ... then shift 'expr', go to state 47
parser: Shift 'RP', pending reduce 31
parser: Return. Stack=[create_table LP columnlist COMMA columnname carglist DEFAULT LP expr RP]
parser: Input 'RP' with pending reduce 31
parser: Reduce 31 [ccons ::= DEFAULT LP expr RP], go to state 151.
parser: ... then shift 'ccons', pending reduce 338
parser: Reduce 338 [carglist ::= carglist ccons], go to state 383.
parser: ... then shift 'carglist', go to state 151
parser: Reduce 329 [columnlist ::= columnlist COMMA columnname carglist], go to state 139.
parser: ... then shift 'columnlist', go to state 362
parser: Reduce 60 [conslist_opt ::=].
parser: ... then shift 'conslist_opt', go to state 538
parser: Shift 'RP', go to state 361
parser: Return. Stack=[create_table LP columnlist conslist_opt RP]
parser: Input 'SEMI' in state 361
parser: Reduce 21 [table_options ::=].
parser: ... then shift 'table_options', pending reduce 19
parser: Reduce 19 [create_table_args ::= LP columnlist conslist_opt RP table_options], go to state 289.
parser: [[[UPDATE 'main'.sqlite_master SET type='table', name='a', tbl_name='a', rootpage=#2, sql='CREATE TABLE a(b,c,t1a,t1bc,t2,d,t3,y,f,z,t7_idx_00000061,t2def,swarm,e,x,_x_,_xxx_ DEFAULT 3.14,
t7 DEFAULT(''hiccup''),t7_idx_00000062 NOD NULL DEFAULT(false))' WHERE rowid=#1]]]
parser: Input 'UPDATE' in state 0
parser: Reduce 374 [with ::=].
parser: ... then shift 'with', go to state 219
parser: Shift 'UPDATE', go to state 299
parser: Return. Stack=[with UPDATE]
parser: Input 'STRING' in state 299
parser: Reduce 70 [orconf ::=].
parser: ... then shift 'orconf', go to state 165
parser: Shift 'STRING', pending reduce 332
parser: Return. Stack=[with UPDATE orconf STRING]
parser: Input 'DOT' with pending reduce 332
parser: Reduce 332 [nm ::= STRING], go to state 165.
parser: ... then shift 'nm', go to state 393
parser: Shift 'DOT', go to state 218
parser: Return. Stack=[with UPDATE orconf nm DOT]
parser: Input 'ID' in state 218
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf nm DOT ID]
parser: Input 'SET' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 218.
parser: ... then shift 'nm', go to state 429
parser: Reduce 113 [xfullname ::= nm DOT nm], go to state 165.
parser: ... then shift 'xfullname', go to state 271
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 428
parser: Shift 'SET', go to state 153
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET]
parser: Input 'ID' in state 153
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 153.
parser: ... then shift 'nm', go to state 442
parser: Shift 'EQ', go to state 84
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ]
parser: Input 'STRING' in state 84
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 84.
parser: ... then shift 'term', go to state 58
parser: Reduce 148 [setlist ::= nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'COMMA' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'VARIABLE' in state 86
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ VARIABLE]
parser: Input 'COMMA' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 86.
parser: ... then shift 'expr', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'COMMA', go to state 202
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA]
parser: Input 'ID' in state 202
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA ID]
parser: Input 'EQ' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 202.
parser: ... then shift 'nm', go to state 444
parser: Shift 'EQ', go to state 86
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ]
parser: Input 'STRING' in state 86
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist COMMA nm EQ STRING]
parser: Input 'WHERE' in state 537
parser: Reduce 168 [term ::= STRING], go to state 86.
parser: ... then shift 'term', go to state 60
parser: Reduce 146 [setlist ::= setlist COMMA nm EQ expr], go to state 153.
parser: ... then shift 'setlist', go to state 270
parser: Shift 'WHERE', go to state 93
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE]
parser: Input 'ID' in state 93
parser: Shift 'ID', go to state 416
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE ID]
parser: Input 'EQ' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Shift 'EQ', go to state 117
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ]
parser: Input 'VARIABLE' in state 117
parser: Shift 'VARIABLE', pending reduce 170
parser: Return. Stack=[with UPDATE orconf xfullname indexed_opt SET setlist WHERE expr EQ VARIABLE]
parser: Input 'SEMI' with pending reduce 170
parser: Reduce 170 [expr ::= VARIABLE], go to state 117.
parser: ... then shift 'expr', go to state 129
parser: Reduce 182 [expr ::= expr EQ|NE expr], go to state 93.
parser: ... then shift 'expr', go to state 63
parser: Reduce 144 [where_opt ::= WHERE expr], go to state 270.
parser: ... then shift 'where_opt', pending reduce 145
parser: Reduce 145 [cmd ::= with UPDATE orconf xfullname indexed_opt SET setlist where_opt], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Input '$' with pending reduce 321
parser: Reduce 321 [ecmd ::= cmdx SEMI], go to state 0.
parser: ... then shift 'ecmd', go to state 1
parser: Reduce 317 [input ::= cmdlist], go to state 0.
parser: ... then shift 'input', pending reduce -2
parser: Accept!
parser: ... then shift 'create_table_args', pending reduce 328
parser: Reduce 328 [cmd ::= create_table create_table_args], go to state 0.
parser: ... then shift 'cmd', pending reduce 2
parser: Reduce 2 [cmdx ::= cmd], go to state 0.
parser: ... then shift 'cmdx', go to state 540
parser: Shift 'SEMI', pending reduce 321
parser: Return. Stack=[cmdx SEMI]
parser: Popping SEMI
parser: Popping cmdx
parser: [[[CREATE TRIGGER tbl INSERT ON t0 WHEN new.c1 NOT NULL BEGIN

SELECT c1 () OVER , dense_rank() OVER c1, c1 () OVER w1
FROM t0
WINDOW
w1 AS
( w1 ORDER BY c1
ROWS BETWEEN 2 NOT IN(SELECT c1, sum(c1) w2,max(c1)OVER FROM t0
WINDOW
w1 AS
(PARTITION BY c1
ROWS BETWEEN '' PRECEDING AND false FOLLOWING),
c1 AS
(PARTITION BY c1 ORDER BY c1
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
) PRECEDING AND 1 FOLLOWING),
w2 AS
(PARTITION BY c1 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
w3 AS
(PARTITION BY c1 ORDER BY c1
ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
;
SELECT c1, sum(c1) w2,max(c1)OVER FROM t0
WINDOW
w1 AS
(PARTITION BY c1
ROWS BETWEEN '' PRECEDING AND false FOLLOWING),
c1 AS
(PARTITION BY c1 ORDER BY c1
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
;

END]]]
parser: Input 'CREATE' in state 0
parser: Shift 'CREATE', pending reduce 14
parser: Return. Stack=[CREATE]
parser: Input 'TRIGGER' with pending reduce 14
parser: Reduce 14 [createkw ::= CREATE], go to state 0.
parser: ... then shift 'createkw', go to state 134
parser: FALLBACK TRIGGER => ID
parser: Reduce 18 [temp ::=].
parser: ... then shift 'temp', go to state 388
parser: Shift 'TRIGGER', go to state 319
parser: Return. Stack=[createkw temp TRIGGER]
parser: Input 'ID' in state 319
parser: Reduce 15 [ifnotexists ::=].
parser: ... then shift 'ifnotexists', go to state 227
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TRIGGER ifnotexists ID]
parser: Input 'INSERT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 227.
parser: ... then shift 'nm', go to state 318
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 257
parser: Reduce 244 [trigger_time ::=].
parser: ... then shift 'trigger_time', go to state 256
parser: Shift 'INSERT', pending reduce 245
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time INSERT]
parser: Input 'ON' with pending reduce 245
parser: Reduce 245 [trigger_event ::= DELETE|INSERT], go to state 256.
parser: ... then shift 'trigger_event', go to state 460
parser: Shift 'ON', go to state 179
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON]
parser: Input 'ID' in state 179
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON ID]
parser: Input 'WHEN' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 179.
parser: ... then shift 'nm', go to state 459
parser: Reduce 110 [fullname ::= nm], go to state 179.
parser: ... then shift 'fullname', go to state 317
parser: Reduce 360 [foreach_clause ::=].
parser: ... then shift 'foreach_clause', go to state 316
parser: Shift 'WHEN', go to state 87
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN]
parser: Input 'ID' in state 87
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN ID]
parser: Input 'DOT' in state 416
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 87.
parser: ... then shift 'nm', go to state 535
parser: Shift 'DOT', go to state 249
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN nm DOT]
parser: Input 'ID' in state 249
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN nm DOT ID]
parser: Input 'NOT' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 249.
parser: ... then shift 'nm', go to state 534
parser: Reduce 165 [expr ::= nm DOT nm], go to state 87.
parser: ... then shift 'expr', go to state 61
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN expr NOT]
parser: Input 'NULL' in state 384
parser: Shift 'NULL', pending reduce 191
parser: Return. Stack=[createkw temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause WHEN expr NOT NULL]
parser: Input 'BEGIN' with pending reduce 191
parser: Reduce 191 [expr ::= expr NOT NULL], go to state 87.
parser: ... then shift 'expr', go to state 61
parser: FALLBACK BEGIN => ID
parser: Reduce 249 [when_clause ::= WHEN expr], go to state 316.
parser: ... then shift 'when_clause', pending reduce 241
parser: Reduce 241 [trigger_decl ::= temp TRIGGER ifnotexists nm dbnm trigger_time trigger_event ON fullname foreach_clause when_clause], go to state 134.
parser: ... then shift 'trigger_decl', go to state 450
parser: Shift 'BEGIN', go to state 144
parser: Return. Stack=[createkw trigger_decl BEGIN]
parser: Input 'SELECT' in state 144
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 12
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'RP' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Reduce 214 [exprlist ::=].
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'COMMA' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'RP' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Reduce 214 [exprlist ::=].
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'OVER' in state 192
parser: Reduce 315 [filter_opt ::=].
parser: ... then shift 'filter_opt', go to state 481
parser: Shift 'OVER', go to state 204
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER]
parser: Input 'ID' in state 204
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER ID]
parser: Input 'COMMA' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 204.
parser: ... then shift 'nm', pending reduce 314
parser: Reduce 314 [over_clause ::= filter_opt OVER nm], go to state 192.
parser: ... then shift 'over_clause', pending reduce 175
parser: Reduce 175 [expr ::= ID|INDEXED LP distinct exprlist RP over_clause], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP]
parser: Input 'RP' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Reduce 214 [exprlist ::=].
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'OVER' in state 192
parser: Reduce 315 [filter_opt ::=].
parser: ... then shift 'filter_opt', go to state 481
parser: Shift 'OVER', go to state 204
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER]
parser: Input 'ID' in state 204
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct sclp scanpt ID LP distinct exprlist RP filter_opt OVER ID]
parser: Input 'FROM' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 204.
parser: ... then shift 'nm', pending reduce 314
parser: Reduce 314 [over_clause ::= filter_opt OVER nm], go to state 192.
parser: ... then shift 'over_clause', pending reduce 175
parser: Reduce 175 [expr ::= ID|INDEXED LP distinct exprlist RP over_clause], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WINDOW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'WINDOW', go to state 136
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW]
parser: Input 'ID' in state 136
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 136.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP]
parser: Input 'ID' in state 33
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP ID]
parser: Input 'ORDER' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 33.
parser: ... then shift 'nm', go to state 159
parser: Shift 'ORDER', go to state 501
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER]
parser: Input 'BY' in state 501
parser: Shift 'BY', go to state 23
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY]
parser: Input 'ID' in state 23
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 23.
parser: ... then shift 'expr', go to state 13
parser: FALLBACK ROWS => ID
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 23.
parser: ... then shift 'sortlist', go to state 185
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 185.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN]
parser: Input 'INTEGER' in state 8
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN INTEGER]
parser: Input 'NOT' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 8.
parser: ... then shift 'term', go to state 42
parser: Shift 'NOT', go to state 384
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term NOT]
parser: Input 'IN' in state 384
parser: Shift 'IN', pending reduce 201
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term NOT IN]
parser: Input 'LP' with pending reduce 201
parser: Reduce 201 [in_op ::= NOT IN], go to state 42.
parser: ... then shift 'in_op', go to state 209
parser: Shift 'LP', go to state 3
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP]
parser: Input 'SELECT' in state 3
parser: Shift 'SELECT', go to state 288
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT]
parser: Input 'ID' in state 288
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 198
parser: Reduce 94 [sclp ::=].
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID]
parser: Input 'COMMA' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'COMMA' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'COMMA', pending reduce 349
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist COMMA]
parser: Input 'ID' with pending reduce 349
parser: Reduce 349 [sclp ::= selcollist COMMA], go to state 198.
parser: ... then shift 'sclp', go to state 381
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 77
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID]
parser: Input 'LP' in state 416
parser: Shift 'LP', go to state 266
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP]
parser: Input 'ID' in state 266
parser: Reduce 93 [distinct ::=].
parser: ... then shift 'distinct', go to state 11
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct ID]
parser: Input 'RP' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 11.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 11.
parser: ... then shift 'nexprlist', go to state 517
parser: Reduce 353 [exprlist ::= nexprlist], go to state 11.
parser: ... then shift 'exprlist', go to state 482
parser: Shift 'RP', go to state 192
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt ID LP distinct exprlist RP]
parser: Input 'ID' in state 192
parser: Reduce 173 [expr ::= ID|INDEXED LP distinct exprlist RP], go to state 77.
parser: ... then shift 'expr', go to state 16
parser: Reduce 28 [scanpt ::=].
parser: ... then shift 'scanpt', go to state 259
parser: Shift 'ID', pending reduce 350
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct sclp scanpt expr scanpt ID]
parser: Input 'FROM' with pending reduce 350
parser: Reduce 350 [as ::= ID|STRING], go to state 259.
parser: ... then shift 'as', pending reduce 95
parser: Reduce 95 [selcollist ::= sclp scanpt expr scanpt as], go to state 198.
parser: ... then shift 'selcollist', go to state 287
parser: Shift 'FROM', go to state 197
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist FROM]
parser: Input 'ID' in state 197
parser: Reduce 103 [stl_prefix ::=].
parser: ... then shift 'stl_prefix', go to state 206
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist FROM stl_prefix ID]
parser: Input 'WINDOW' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 206.
parser: ... then shift 'nm', go to state 349
parser: Reduce 108 [dbnm ::=].
parser: ... then shift 'dbnm', go to state 243
parser: Reduce 99 [as ::=].
parser: ... then shift 'as', go to state 283
parser: Reduce 122 [indexed_opt ::=].
parser: ... then shift 'indexed_opt', go to state 348
parser: Reduce 121 [on_opt ::=].
parser: ... then shift 'on_opt', go to state 347
parser: Reduce 126 [using_opt ::=].
parser: ... then shift 'using_opt', pending reduce 104
parser: Reduce 104 [seltablist ::= stl_prefix nm dbnm as indexed_opt on_opt using_opt], go to state 197.
parser: ... then shift 'seltablist', go to state 263
parser: Reduce 101 [from ::= FROM seltablist], go to state 287.
parser: ... then shift 'from', go to state 360
parser: Reduce 143 [where_opt ::=].
parser: ... then shift 'where_opt', go to state 359
parser: Reduce 134 [groupby_opt ::=].
parser: ... then shift 'groupby_opt', go to state 358
parser: Reduce 136 [having_opt ::=].
parser: ... then shift 'having_opt', go to state 194
parser: Shift 'WINDOW', go to state 136
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW]
parser: Input 'ID' in state 136
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 136.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: FALLBACK ROWS => ID
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: FALLBACK ROWS => ID
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'STRING' in state 8
parser: Shift 'STRING', go to state 537
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN STRING]
parser: Input 'PRECEDING' in state 537
parser: FALLBACK PRECEDING => ID
parser: Reduce 168 [term ::= STRING], go to state 8.
parser: ... then shift 'term', go to state 42
parser: Shift 'PRECEDING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN term PRECEDING]
parser: Input 'AND' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 8.
parser: ... then shift 'frame_bound', pending reduce 301
parser: Reduce 301 [frame_bound_s ::= frame_bound], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'ID' in state 7
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND ID]
parser: Input 'FOLLOWING' in state 416
parser: FALLBACK FOLLOWING => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 7.
parser: ... then shift 'expr', go to state 42
parser: Shift 'FOLLOWING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND expr FOLLOWING]
parser: Input 'RP' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP window RP]
parser: Input 'COMMA' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 136.
parser: ... then shift 'windowdefn', pending reduce 288
parser: Reduce 288 [windowdefn_list ::= windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Shift 'COMMA', go to state 186
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA]
parser: Input 'ID' in state 186
parser: Shift 'ID', pending reduce 331
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA ID]
parser: Input 'AS' with pending reduce 331
parser: Reduce 331 [nm ::= ID|INDEXED], go to state 186.
parser: ... then shift 'nm', go to state 512
parser: Shift 'AS', go to state 511
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS]
parser: Input 'LP' in state 511
parser: Shift 'LP', go to state 33
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP]
parser: Input 'PARTITION' in state 33
parser: Shift 'PARTITION', go to state 509
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION]
parser: Input 'BY' in state 509
parser: Shift 'BY', go to state 25
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY]
parser: Input 'ID' in state 25
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY ID]
parser: Input 'ORDER' in state 416
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 25.
parser: ... then shift 'expr', go to state 70
parser: Reduce 216 [nexprlist ::= expr], go to state 25.
parser: ... then shift 'nexprlist', go to state 285
parser: Shift 'ORDER', go to state 515
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER]
parser: Input 'BY' in state 515
parser: Shift 'BY', go to state 26
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY]
parser: Input 'ID' in state 26
parser: Shift 'ID', go to state 416
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist ORDER BY ID]
parser: Input 'ROWS' in state 416
parser: FALLBACK ROWS => ID
parser: Reduce 163 [expr ::= ID|INDEXED], go to state 26.
parser: ... then shift 'expr', go to state 13
parser: FALLBACK ROWS => ID
parser: Reduce 133 [sortorder ::=].
parser: ... then shift 'sortorder', pending reduce 130
parser: Reduce 130 [sortlist ::= expr sortorder], go to state 26.
parser: ... then shift 'sortlist', go to state 514
parser: FALLBACK ROWS => ID
parser: Reduce 128 [orderby_opt ::= ORDER BY sortlist], go to state 285.
parser: ... then shift 'orderby_opt', go to state 189
parser: Shift 'ROWS', pending reduce 300
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt ROWS]
parser: Input 'BETWEEN' with pending reduce 300
parser: Reduce 300 [range_or_rows ::= RANGE|ROWS|GROUPS], go to state 189.
parser: ... then shift 'range_or_rows', go to state 6
parser: Shift 'BETWEEN', go to state 8
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN]
parser: Input 'UNBOUNDED' in state 8
parser: Shift 'UNBOUNDED', go to state 503
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED]
parser: Input 'PRECEDING' in state 503
parser: Shift 'PRECEDING', pending reduce 302
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN UNBOUNDED PRECEDING]
parser: Input 'AND' with pending reduce 302
parser: Reduce 302 [frame_bound_s ::= UNBOUNDED PRECEDING], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'CURRENT' in state 7
parser: Shift 'CURRENT', go to state 504
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT]
parser: Input 'ROW' in state 504
parser: Shift 'ROW', pending reduce 306
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP PARTITION BY nexprlist orderby_opt range_or_rows BETWEEN frame_bound_s AND CURRENT ROW]
parser: Input 'RP' with pending reduce 306
parser: Reduce 306 [frame_bound ::= CURRENT ROW], go to state 7.
parser: ... then shift 'frame_bound', pending reduce 303
parser: Reduce 303 [frame_bound_e ::= frame_bound], go to state 7.
parser: ... then shift 'frame_bound_e', go to state 350
parser: Reduce 307 [frame_exclude_opt ::=].
parser: ... then shift 'frame_exclude_opt', pending reduce 299
parser: Reduce 299 [frame_opt ::= range_or_rows BETWEEN frame_bound_s AND frame_bound_e frame_exclude_opt], go to state 189.
parser: ... then shift 'frame_opt', pending reduce 291
parser: Reduce 291 [window ::= PARTITION BY nexprlist orderby_opt frame_opt], go to state 33.
parser: ... then shift 'window', go to state 510
parser: Shift 'RP', pending reduce 290
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW windowdefn_list COMMA nm AS LP window RP]
parser: Input 'RP' with pending reduce 290
parser: Reduce 290 [windowdefn ::= nm AS LP window RP], go to state 186.
parser: ... then shift 'windowdefn', pending reduce 289
parser: Reduce 289 [windowdefn_list ::= windowdefn_list COMMA windowdefn], go to state 136.
parser: ... then shift 'windowdefn_list', go to state 513
parser: Reduce 312 [window_clause ::= WINDOW windowdefn_list], go to state 194.
parser: ... then shift 'window_clause', go to state 353
parser: Reduce 127 [orderby_opt ::=].
parser: ... then shift 'orderby_opt', go to state 352
parser: Reduce 138 [limit_opt ::=].
parser: ... then shift 'limit_opt', pending reduce 88
parser: Reduce 88 [oneselect ::= SELECT distinct selcollist from where_opt groupby_opt having_opt window_clause orderby_opt limit_opt], go to state 3.
parser: ... then shift 'oneselect', go to state 264
parser: Reduce 82 [select ::= selectnowith], go to state 3.
parser: ... then shift 'select', go to state 518
parser: Shift 'RP', pending reduce 204
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN term in_op LP select RP]
parser: Input 'PRECEDING' with pending reduce 204
parser: Reduce 204 [expr ::= expr in_op LP select RP], go to state 8.
parser: ... then shift 'expr', go to state 42
parser: Shift 'PRECEDING', pending reduce 305
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN expr PRECEDING]
parser: Input 'AND' with pending reduce 305
parser: Reduce 305 [frame_bound ::= expr PRECEDING|FOLLOWING], go to state 8.
parser: ... then shift 'frame_bound', pending reduce 301
parser: Reduce 301 [frame_bound_s ::= frame_bound], go to state 8.
parser: ... then shift 'frame_bound_s', go to state 506
parser: Shift 'AND', go to state 7
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN frame_bound_s AND]
parser: Input 'INTEGER' in state 7
parser: Shift 'INTEGER', pending reduce 169
parser: Return. Stack=[createkw trigger_decl BEGIN scanpt SELECT distinct selcollist from where_opt groupby_opt having_opt WINDOW nm AS LP nm ORDER BY sortlist range_or_rows BETWEEN frame_bound_s AND INTEGER]
parser: Input 'FOLLOWING' with pending reduce 169
parser: Reduce 169 [term ::= INTEGER], go to state 7.
parser: ... then shift 'term', go to state 42
parser: Shift 'FOLLOWING', pending 
Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007fba99f8e859 in __GI_abort () at abort.c:79
#2  0x00007fba99f8e729 in __assert_fail_base (fmt=0x7fba9a124588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=0x2174e8 "p->p!=pPtr", file=0x22873d "sqlite3.c", line=103013, function=<optimized out>) at assert.c:92
#3  0x00007fba99f9ffd6 in __GI___assert_fail (assertion=0x2174e8 "p->p!=pPtr", file=0x22873d "sqlite3.c", line=103013, function=0x2262bc "void renameTokenCheckAll(Parse *, void *)") at assert.c:101
#4  0x000000000031c228 in renameTokenCheckAll (pParse=0x7ffc16f8fca8, pPtr=0x189c6d0) at sqlite3.c:103013
#5  0x0000000000302530 in sqlite3RenameTokenMap (pParse=0x7ffc16f8fca8, pPtr=0x189c6d0, pToken=0x7ffc16f8efb8) at sqlite3.c:103038
#6  0x00000000002f6133 in tokenExpr (pParse=0x7ffc16f8fca8, op=59, t=...) at sqlite3.c:148261
#7  0x00000000002ee968 in yy_reduce (yypParser=0x7ffc16f8f260, yyruleno=163, yyLookahead=76, yyLookaheadToken=..., pParse=0x7ffc16f8fca8) at sqlite3.c:151971
#8  0x00000000002e92f8 in sqlite3Parser (yyp=0x7ffc16f8f260, yymajor=76, yyminor=...) at sqlite3.c:152877
#9  0x00000000002a68b3 in sqlite3RunParser (pParse=0x7ffc16f8fca8, 
    zSql=0x185c192 "ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),\nw3 AS\n(PARTITION BY c1 ORDER BY c1\nROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n;\nSELECT c1, sum(c1) w2,max(c1)OVER FROM t0\nWINDOW\nw1 AS\n(PARTIT"..., pzErrMsg=0x7ffc16f8fc60) at sqlite3.c:154013
#10 0x000000000041b7ab in renameParseSql (p=0x7ffc16f8fca8, zDb=0x18668a0 "main", bTable=0, db=0x18512b0, 
    zSql=0x185bfe0 "CREATE TRIGGER tbl INSERT ON t0 WHEN new.c1 NOT NULL BEGIN\n\nSELECT c1 () OVER , dense_rank() OVER c1, c1 () OVER w1\nFROM t0\nWINDOW\nw1 AS\n( w1 ORDER BY c1\nROWS BETWEEN 2 NOT IN(SELECT c1, sum(c1) w2,ma"..., bTemp=0) at sqlite3.c:103308
#11 0x0000000000419c80 in renameColumnFunc (context=0x18655e0, NotUsed=9, argv=0x1865610) at sqlite3.c:103612
#12 0x00000000003df844 in sqlite3VdbeExec (p=0x1871160) at sqlite3.c:90923
#13 0x0000000000411104 in sqlite3Step (p=0x1871160) at sqlite3.c:81930
#14 0x000000000029128d in sqlite3_step (pStmt=0x1871160) at sqlite3.c:81995
#15 0x00000000002570b9 in main (argc=1, argv=0x7ffc16f90b18) at target.cc:139
(gdb) quit
A debugging session is active.

	Inferior 1 [process 54687] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
