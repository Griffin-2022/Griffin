GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /root/sqlite_driver_fast...
(gdb) Starting program: /root/sqlite_driver_fast < "/root/out/default/crashes/id:000409,sig:06,src:025885+014266,time:13654853,execs:3438906,op:merge.so,pos:0"
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
SQL: [;PRAGMA vdbe_trace=on;]
VDBE Trace:
   0 Init             0    1    0               00 Start at 1
   1 Expire           0    0    0               00 
   2 Halt             0    0    0               00 
SQL: [;CREATE VIEW c1(c0) AS SELECT 0 GROUP BY 1;]
VDBE Trace:
   0 Init             0   28    0               00 Start at 28
  28 Transaction      0    1    1 0             01 usesStmtJournal=0
  29 Goto             0    1    0               00 
   1 ReadCookie       0    3    2               00 
REG[3] =  i:4
   2 If               3    5    0               00 
REG[3] =  i:4
   5 Integer          0    2    0               00 r[2]=0
REG[2] =  i:0
   6 OpenWrite        0    1    0 5             00 root=1 iDb=0
   7 NewRowid         0    1    0               00 r[1]=rowid
REG[1] =  i:2
   8 Blob             6    3    0              00 r[3]= (len=6)
REG[3] =  t6[060000000000......]
   9 Insert           0    3    1               08 intkey=r[1] data=r[3]
REG[3] =  t6[060000000000......]
REG[1] =  i:2
  10 Close            0    0    0               00 
  11 Close            0    0    0               00 
  12 Null             0    4    5               00 r[4..5]=NULL
REG[4] =  NULL
  13 OpenWrite        1    1    0 5             00 root=1 iDb=0; sqlite_master
  14 Explain         14    0    0 SEARCH TABLE sqlite_master USING INTEGER PRIMARY KEY (rowid=?) 00 
  15 SeekRowid        1   17    1               00 intkey=r[1]
REG[1] =  i:2
  16 Rowid            1    5    0               00 r[5]=rowid
REG[5] =  i:2
  17 IsNull           5   25    0               00 if r[5]==NULL goto 25
REG[5] =  i:2
  18 String8          0    6    0 view          00 r[6]='view'
REG[6] =   t8[.v.i.e.w](16BE)
  19 String8          0    7    0 c1            00 r[7]='c1'
REG[7] =   t4[.c.1](16BE)
  20 String8          0    8    0 c1            00 r[8]='c1'
REG[8] =   t4[.c.1](16BE)
  21 Copy             2    9    0               00 r[9]=r[2]
REG[9] =  i:0
  22 String8          0   10    0 CREATE VIEW c1(c0) AS SELECT 0 GROUP BY 1 00 r[10]='CREATE VIEW c1(c0) AS SELECT 0 GROUP BY 1'
REG[10] =   t82[.C.R.E.A.T.E. .](16BE)
  23 MakeRecord       6    5   11 BBBDB         00 r[11]=mkrec(r[6..10])
REG[11] =  s105[071D1515088131007600690065007700......1.v.i.e.w.]
  24 Insert           1   11    5               00 intkey=r[5] data=r[11]
REG[11] =  s105[071D1515088131007600690065007700......1.v.i.e.w.]
REG[5] =  i:2
  25 SetCookie        0    1    2               00 
  26 ParseSchema      0    0    0 tbl_name='c1' AND type!='trigger' 00 
VDBE Trace:
   0 Init             0   15    0               00 Start at 15
  15 Transaction      0    0    2 0             00 usesStmtJournal=0
  16 String8          0    2    0 c1            00 r[2]='c1'
REG[2] =   t4[.c.1](16BE)
  17 String8          0    3    0 trigger       00 r[3]='trigger'
REG[3] =   t14[.t.r.i.g.g.e.r](16BE)
  18 Goto             0    1    0               00 
   1 Noop             1    5    0               00 
   2 OpenRead         0    1    0 5             00 root=1 iDb=0; sqlite_master
   3 Explain          3    0    0 SCAN TABLE sqlite_master 00 
   4 Rewind           0   14    0               00 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[.t.0](16BE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[.c.1](16BE)
REG[1] =   s4[.t.0](16BE)
  13 Next             0    5    0               01 
   5 Column           0    2    1               00 r[1]=sqlite_master.tbl_name
REG[1] =   s4[.c.1](16BE)
   6 Ne               2   13    1 (BINARY)      52 if r[1]!=r[2] goto 13
REG[2] =   t4[.c.1](16BE)
REG[1] =   s4[.c.1](16BE)
   7 Column           0    0    1               00 r[1]=sqlite_master.type
REG[1] =   s8[.v.i.e.w](16BE)
   8 Eq               3   13    1 (BINARY)      52 if r[1]==r[3] goto 13
REG[3] =   t14[.t.r.i.g.g.e.r](16BE)
REG[1] =   s8[.v.i.e.w](16BE)
   9 Column           0    1    4               00 r[4]=sqlite_master.name
REG[4] =   s4[.c.1](16BE)
  10 Column           0    3    5               00 r[5]=sqlite_master.rootpage
REG[5] =  i:0
  11 Column           0    4    6               00 r[6]=sqlite_master.sql
REG[6] =   s82[.C.R.E.A.T.E. .](16BE)
  12 ResultRow        4    3    0               00 output=r[4..6]
REG[4] =   s4[.c.1](16BE)
REG[5] =  i:0
REG[6] =   s82[.C.R.E.A.T.E. .](16BE)
  13 Next             0    5    0               01 
  14 Halt             0    0    0               00 
  27 Halt             0    0    0               00 

Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
(gdb) #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#1  0x00007f3462d81859 in __GI_abort () at abort.c:79
#2  0x00007f3462d81729 in __assert_fail_base (fmt=0x7f3462f17588 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", 
    assertion=0x223c64 "!ExprHasProperty(pExpr, EP_FromJoin) || pExpr->iRightJoinTable!=pSrc->iCursor || pLoop->prereq!=0", file=0x22873d "sqlite3.c", line=140770, function=<optimized out>) at assert.c:92
#3  0x00007f3462d92fd6 in __GI___assert_fail (assertion=0x223c64 "!ExprHasProperty(pExpr, EP_FromJoin) || pExpr->iRightJoinTable!=pSrc->iCursor || pLoop->prereq!=0", file=0x22873d "sqlite3.c", line=140770, 
    function=0x21fbeb "void constructAutomaticIndex(Parse *, WhereClause *, struct SrcList_item *, Bitmask, WhereLevel *)") at assert.c:101
#4  0x0000000000371b94 in constructAutomaticIndex (pParse=0x7fff66d3ab10, pWC=0x1809608, pSrc=0x17fcdd8, notReady=18446744073709551613, pLevel=0x1809990) at sqlite3.c:140768
#5  0x000000000036c32b in sqlite3WhereBegin (pParse=0x7fff66d3ab10, pTabList=0x17fcdd0, pWhere=0x17f9a40, pOrderBy=0x0, pResultSet=0x1800160, wctrlFlags=0, iAuxArg=320) at sqlite3.c:145119
#6  0x00000000002fdcea in sqlite3Select (pParse=0x7fff66d3ab10, p=0x17f7010, pDest=0x7fff66d39f00) at sqlite3.c:130695
#7  0x00000000002ecaa8 in yy_reduce (yypParser=0x7fff66d3a130, yyruleno=79, yyLookahead=1, yyLookaheadToken=..., pParse=0x7fff66d3ab10) at sqlite3.c:151581
#8  0x00000000002e92f8 in sqlite3Parser (yyp=0x7fff66d3a130, yymajor=1, yyminor=...) at sqlite3.c:152877
#9  0x00000000002a68b3 in sqlite3RunParser (pParse=0x7fff66d3ab10, zSql=0x17ffd35 ";", pzErrMsg=0x7fff66d3acf0) at sqlite3.c:154013
#10 0x00000000002a1683 in sqlite3Prepare (db=0x17e17c0, zSql=0x17e1624 ";SELECT t0.c0, c1.c0, vt0.name\n   FROM c1, t0 LEFT JOIN pragma_table_info('t0') AS vt0\n     ON vt0.name LIKE 'c0'\n   WHERE c1.c0 == 0;", 
    nBytes=134, prepFlags=128, pReprepare=0x0, ppStmt=0x7fff66d3ae28, pzTail=0x7fff66d3ae10) at sqlite3.c:124303
#11 0x00000000002a0d4e in sqlite3LockAndPrepare (db=0x17e17c0, zSql=0x17e1624 ";SELECT t0.c0, c1.c0, vt0.name\n   FROM c1, t0 LEFT JOIN pragma_table_info('t0') AS vt0\n     ON vt0.name LIKE 'c0'\n   WHERE c1.c0 == 0;", 
    nBytes=134, prepFlags=128, pOld=0x0, ppStmt=0x7fff66d3ae28, pzTail=0x7fff66d3ae10) at sqlite3.c:124403
#12 0x000000000029247f in sqlite3_prepare_v2 (db=0x17e17c0, zSql=0x17e1624 ";SELECT t0.c0, c1.c0, vt0.name\n   FROM c1, t0 LEFT JOIN pragma_table_info('t0') AS vt0\n     ON vt0.name LIKE 'c0'\n   WHERE c1.c0 == 0;", 
    nBytes=134, ppStmt=0x7fff66d3ae28, pzTail=0x7fff66d3ae10) at sqlite3.c:124487
#13 0x0000000000256bd0 in main (argc=1, argv=0x7fff66d3afd8) at target.cc:106
(gdb) quit
A debugging session is active.

	Inferior 1 [process 53845] will be killed.

Quit anyway? (y or n) [answered Y; input not from terminal]
