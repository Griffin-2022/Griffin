REVOKE ALL PRIVILEGES ON LANGUAGE sql FROM PUBLIC;
;GRANT USAGE ON LANGUAGE sql TO regress_priv_user1;
;GRANT USAGE ON LANGUAGE c TO PUBLIC;
;SET SESSION AUTHORIZATION regress_priv_user1;
;GRANT USAGE ON LANGUAGE sql TO regress_priv_user2;
;CREATE FUNCTION priv_testfunc1(int) RETURNS int AS 'select 2 * $1;' LANGUAGE sql;
;CREATE FUNCTION priv_testfunc2(int) RETURNS int AS 'select 3 * $1;' LANGUAGE sql;
;CREATE AGGREGATE priv_testagg1(int) (sfunc = int4pl, stype = int4);
;CREATE PROCEDURE priv_testproc1(int) AS 'select $1;' LANGUAGE sql;
;REVOKE ALL ON FUNCTION priv_testfunc1(int), priv_testfunc2(int), priv_testagg1(int) FROM PUBLIC;
;GRANT EXECUTE ON FUNCTION priv_testfunc1(int), priv_testfunc2(int), priv_testagg1(int) TO regress_priv_user2;
;REVOKE ALL ON FUNCTION priv_testproc1(int) FROM PUBLIC;
;REVOKE ALL ON PROCEDURE priv_testproc1(int) FROM PUBLIC;
;GRANT EXECUTE ON PROCEDURE priv_testproc1(int) TO regress_priv_user2;
;GRANT USAGE ON FUNCTION priv_testfunc1(int) TO regress_priv_user3;
;GRANT USAGE ON FUNCTION priv_testagg1(int) TO regress_priv_user3;
;GRANT USAGE ON PROCEDURE priv_testproc1(int) TO regress_priv_user3;
;GRANT ALL PRIVILEGES ON FUNCTION priv_testfunc1(int) TO regress_priv_user4;
;GRANT ALL PRIVILEGES ON FUNCTION priv_testfunc_nosuch(int) TO regress_priv_user4;
;GRANT ALL PRIVILEGES ON FUNCTION priv_testagg1(int) TO regress_priv_user4;
;GRANT ALL PRIVILEGES ON PROCEDURE priv_testproc1(int) TO regress_priv_user4;
;CREATE FUNCTION priv_testfunc4(boolean) RETURNS text
  AS 'select col1 from atest2 where col2 = $1;'
  LANGUAGE sql SECURITY DEFINER;
;GRANT EXECUTE ON FUNCTION priv_testfunc4(boolean) TO regress_priv_user3;
;SET SESSION AUTHORIZATION regress_priv_user2;
;SELECT priv_testfunc1(5), priv_testfunc2(5);
;CREATE FUNCTION priv_testfunc3(int) RETURNS int AS 'select 2 * $1;' LANGUAGE sql;
;SELECT priv_testagg1(x) FROM (VALUES (1), (2), (3)) _(x);
;CALL priv_testproc1(6);
;SET SESSION AUTHORIZATION regress_priv_user3;
;SELECT priv_testfunc1(5);
;SELECT priv_testagg1(x) FROM (VALUES (1), (2), (3)) _(x);
;CALL priv_testproc1(6);
;SELECT col1 FROM atest2 WHERE col2 = true;
;SELECT priv_testfunc4(true);
;SET SESSION AUTHORIZATION regress_priv_user4;
;SELECT priv_testfunc1(5);
;SELECT priv_testagg1(x) FROM (VALUES (1), (2), (3)) _(x);
;CALL priv_testproc1(6);
;DROP FUNCTION priv_testfunc1(int);
;DROP AGGREGATE priv_testagg1(int);
;DROP PROCEDURE priv_testproc1(int);
;