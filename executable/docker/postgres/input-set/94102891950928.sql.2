select has_table_privilege(current_user,'pg_authid','select');
;select has_table_privilege(current_user,'pg_authid','insert');
;select has_table_privilege(t2.oid,'pg_authid','update')
from (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(t2.oid,'pg_authid','delete')
from (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(current_user,t1.oid,'rule')
from (select oid from pg_class where relname = 'pg_authid') as t1;
;select has_table_privilege(current_user,t1.oid,'references')
from (select oid from pg_class where relname = 'pg_authid') as t1;
;select has_table_privilege(t2.oid,t1.oid,'select')
from (select oid from pg_class where relname = 'pg_authid') as t1,
  (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(t2.oid,t1.oid,'insert')
from (select oid from pg_class where relname = 'pg_authid') as t1,
  (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege('pg_authid','update');
;select has_table_privilege('pg_authid','delete');
;select has_table_privilege('pg_authid','truncate');
;select has_table_privilege(t1.oid,'select')
from (select oid from pg_class where relname = 'pg_authid') as t1;
;select has_table_privilege(t1.oid,'trigger')
from (select oid from pg_class where relname = 'pg_authid') as t1;
;SET SESSION AUTHORIZATION regress_priv_user3;
;select has_table_privilege(current_user,'pg_class','select');
;select has_table_privilege(current_user,'pg_class','insert');
;select has_table_privilege(t2.oid,'pg_class','update')
from (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(t2.oid,'pg_class','delete')
from (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(current_user,t1.oid,'references')
from (select oid from pg_class where relname = 'pg_class') as t1;
;select has_table_privilege(t2.oid,t1.oid,'select')
from (select oid from pg_class where relname = 'pg_class') as t1,
  (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(t2.oid,t1.oid,'insert')
from (select oid from pg_class where relname = 'pg_class') as t1,
  (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege('pg_class','update');
;select has_table_privilege('pg_class','delete');
;select has_table_privilege('pg_class','truncate');
;select has_table_privilege(t1.oid,'select')
from (select oid from pg_class where relname = 'pg_class') as t1;
;select has_table_privilege(t1.oid,'trigger')
from (select oid from pg_class where relname = 'pg_class') as t1;
;select has_table_privilege(current_user,'atest1','select');
;select has_table_privilege(current_user,'atest1','insert');
;select has_table_privilege(t2.oid,'atest1','update')
from (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(t2.oid,'atest1','delete')
from (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(current_user,t1.oid,'references')
from (select oid from pg_class where relname = 'atest1') as t1;
;select has_table_privilege(t2.oid,t1.oid,'select')
from (select oid from pg_class where relname = 'atest1') as t1,
  (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege(t2.oid,t1.oid,'insert')
from (select oid from pg_class where relname = 'atest1') as t1,
  (select oid from pg_roles where rolname = current_user) as t2;
;select has_table_privilege('atest1','update');
;select has_table_privilege('atest1','delete');
;select has_table_privilege('atest1','truncate');
;select has_table_privilege(t1.oid,'select')
from (select oid from pg_class where relname = 'atest1') as t1;
;select has_table_privilege(t1.oid,'trigger')
from (select oid from pg_class where relname = 'atest1') as t1;
;select has_column_privilege('pg_authid',NULL,'select');
;select has_column_privilege('pg_authid','nosuchcol','select');
;select has_column_privilege(9999,'nosuchcol','select');
;select has_column_privilege(9999,99::int2,'select');
;select has_column_privilege('pg_authid',99::int2,'select');
;select has_column_privilege(9999,99::int2,'select');
;create temp table mytable(f1 int, f2 int, f3 int);
;alter table mytable drop column f2;
;select has_column_privilege('mytable','f2','select');
;select has_column_privilege('mytable','........pg.dropped.2........','select');
;select has_column_privilege('mytable',2::int2,'select');
;select has_column_privilege('mytable',99::int2,'select');
;revoke select on table mytable from regress_priv_user3;
;select has_column_privilege('mytable',2::int2,'select');
;select has_column_privilege('mytable',99::int2,'select');
;drop table mytable;
;SET SESSION AUTHORIZATION regress_priv_user1;
;CREATE TABLE atest4 (a int);
;GRANT SELECT ON atest4 TO regress_priv_user2 WITH GRANT OPTION;
;GRANT UPDATE ON atest4 TO regress_priv_user2;
;GRANT SELECT ON atest4 TO GROUP regress_priv_group1 WITH GRANT OPTION;
;SET SESSION AUTHORIZATION regress_priv_user2;
;GRANT SELECT ON atest4 TO regress_priv_user3;
;GRANT UPDATE ON atest4 TO regress_priv_user3;
;SET SESSION AUTHORIZATION regress_priv_user1;
;REVOKE SELECT ON atest4 FROM regress_priv_user3;
;SELECT has_table_privilege('regress_priv_user3', 'atest4', 'SELECT');
;REVOKE SELECT ON atest4 FROM regress_priv_user2;
;REVOKE GRANT OPTION FOR SELECT ON atest4 FROM regress_priv_user2 CASCADE;
;SELECT has_table_privilege('regress_priv_user2', 'atest4', 'SELECT');
;SELECT has_table_privilege('regress_priv_user3', 'atest4', 'SELECT');
;SELECT has_table_privilege('regress_priv_user1', 'atest4', 'SELECT WITH GRANT OPTION');
;