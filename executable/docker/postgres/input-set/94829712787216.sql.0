
    CREATE OR REPLACE FUNCTION explain_json(p_query text)
    RETURNS json
    LANGUAGE plpgsql AS $$
        DECLARE
            v_ret json;
        BEGIN
            EXECUTE p_query INTO STRICT v_ret;
            RETURN v_ret;
        END;$$;

;
    DROP FUNCTION explain_json(text);

;
    CREATE OR REPLACE FUNCTION explain_json(p_query text)
    RETURNS json
    LANGUAGE plpgsql AS $$
        DECLARE
            v_ret json;
        BEGIN
            EXECUTE p_query INTO STRICT v_ret;
            RETURN v_ret;
        END;$$;

;
    DROP FUNCTION explain_json(text);

;
    CREATE OR REPLACE FUNCTION explain_json(p_query text)
    RETURNS json
    LANGUAGE plpgsql AS $$
        DECLARE
            v_ret json;
        BEGIN
            EXECUTE p_query INTO STRICT v_ret;
            RETURN v_ret;
        END;$$;

;
    DROP FUNCTION explain_json(text);

;
    CREATE OR REPLACE FUNCTION explain_json(p_query text)
    RETURNS json
    LANGUAGE plpgsql AS $$
        DECLARE
            v_ret json;
        BEGIN
            EXECUTE p_query INTO STRICT v_ret;
            RETURN v_ret;
        END;$$;

;
    DROP FUNCTION explain_json(text);

;
    CREATE OR REPLACE FUNCTION explain_json(p_query text)
    RETURNS json
    LANGUAGE plpgsql AS $$
        DECLARE
            v_ret json;
        BEGIN
            EXECUTE p_query INTO STRICT v_ret;
            RETURN v_ret;
        END;$$;

;
    DROP FUNCTION explain_json(text);

;