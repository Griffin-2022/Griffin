
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;
 CREATE TABLE a (i int);
 CREATE FUNCTION f() RETURNS TRIGGER LANGUAGE plpgsql AS 'BEGIN RETURN NULL; END;';
 INSERT INTO a VALUES (0), (1), (2), (3);

;
 DROP TABLE a;
 DROP FUNCTION f();

;