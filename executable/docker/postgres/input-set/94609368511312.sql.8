CREATE SCHEMA testns;
;CREATE TABLE testns.t1 (f1 int);
;CREATE TABLE testns.t2 (f1 int);
;SELECT has_table_privilege('regress_priv_user1', 'testns.t1', 'SELECT');
;GRANT ALL ON ALL TABLES IN SCHEMA testns TO regress_priv_user1;
;SELECT has_table_privilege('regress_priv_user1', 'testns.t1', 'SELECT');
;SELECT has_table_privilege('regress_priv_user1', 'testns.t2', 'SELECT');
;REVOKE ALL ON ALL TABLES IN SCHEMA testns FROM regress_priv_user1;
;SELECT has_table_privilege('regress_priv_user1', 'testns.t1', 'SELECT');
;SELECT has_table_privilege('regress_priv_user1', 'testns.t2', 'SELECT');
;CREATE FUNCTION testns.priv_testfunc(int) RETURNS int AS 'select 3 * $1;' LANGUAGE sql;
;CREATE AGGREGATE testns.priv_testagg(int) (sfunc = int4pl, stype = int4);
;CREATE PROCEDURE testns.priv_testproc(int) AS 'select 3' LANGUAGE sql;
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testfunc(int)', 'EXECUTE');
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testagg(int)', 'EXECUTE');
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testproc(int)', 'EXECUTE');
;REVOKE ALL ON ALL FUNCTIONS IN SCHEMA testns FROM PUBLIC;
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testfunc(int)', 'EXECUTE');
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testagg(int)', 'EXECUTE');
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testproc(int)', 'EXECUTE');
;REVOKE ALL ON ALL PROCEDURES IN SCHEMA testns FROM PUBLIC;
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testproc(int)', 'EXECUTE');
;GRANT ALL ON ALL ROUTINES IN SCHEMA testns TO PUBLIC;
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testfunc(int)', 'EXECUTE');
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testagg(int)', 'EXECUTE');
;SELECT has_function_privilege('regress_priv_user1', 'testns.priv_testproc(int)', 'EXECUTE');
;DROP SCHEMA testns CASCADE;
;