PRAGMA foreign_keys = 1;
;
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE CASCADE);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE SET NULL);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE SET DEFAULT);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE CASCADE);
;CREATE TRIGGER ct1 AFTER DELETE ON c1 BEGIN
      INSERT INTO p1 VALUES('x');
    END;
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE CASCADE, c PRIMARY KEY);
;CREATE TABLE cc1(d REFERENCES c1);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;DROP table "cc1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE CASCADE, c PRIMARY KEY);
;CREATE TABLE cc1(d REFERENCES c1 ON DELETE CASCADE);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;DROP table "cc1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE CASCADE, c PRIMARY KEY);
;CREATE TABLE cc1(d REFERENCES c1 ON DELETE SET NULL);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;DROP table "cc1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON DELETE CASCADE, c PRIMARY KEY);
;CREATE TABLE cc1(d REFERENCES c1 ON DELETE SET DEFAULT);
;
;DELETE FROM p1
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;DROP table "cc1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON UPDATE SET NULL, c);
;
;UPDATE p1 SET a = ?
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON UPDATE SET NULL, c);
;
;UPDATE OR IGNORE p1 SET a = ?
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b REFERENCES p1 ON UPDATE CASCADE, c);
;
;UPDATE OR IGNORE p1 SET a = ?
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "p1"
;DROP table "c1"
;PRAGMA foreign_keys = 1
;CREATE TABLE p1(a PRIMARY KEY);
;CREATE TABLE c1(b NOT NULL REFERENCES p1 ON UPDATE SET NULL, c);
;
;UPDATE OR IGNORE p1 SET a = ?
;