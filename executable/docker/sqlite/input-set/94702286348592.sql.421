CREATE TABLE t1(a, b, c, d);
;CREATE UNIQUE INDEX i1 ON t1(b, c);
;CREATE UNIQUE INDEX i2 ON t1(d COLLATE nocase);
;CREATE TABLE t2(x INTEGER PRIMARY KEY, y);
;CREATE TABLE t3(c1 PRIMARY KEY NOT NULL, c2 NOT NULL);
;CREATE INDEX i3 ON t3(c2);
;CREATE TABLE t4(a, b NOT NULL, c NOT NULL, d NOT NULL);
;CREATE UNIQUE INDEX t4i1 ON t4(b, c);
;CREATE UNIQUE INDEX t4i2 ON t4(d COLLATE nocase);
;
;EXPLAIN SELECT DISTINCT b, c FROM t1
;EXPLAIN SELECT  b, c FROM t1
;EXPLAIN SELECT DISTINCT b, c FROM t4
;EXPLAIN SELECT  b, c FROM t4
;EXPLAIN SELECT DISTINCT c FROM t1 WHERE b = ?
;EXPLAIN SELECT  c FROM t1 WHERE b = ?
;EXPLAIN SELECT DISTINCT c FROM t4 WHERE b = ?
;EXPLAIN SELECT  c FROM t4 WHERE b = ?
;EXPLAIN SELECT DISTINCT rowid FROM t1
;EXPLAIN SELECT  rowid FROM t1
;EXPLAIN SELECT DISTINCT rowid, a FROM t1
;EXPLAIN SELECT  rowid, a FROM t1
;EXPLAIN SELECT DISTINCT x FROM t2
;EXPLAIN SELECT  x FROM t2
;EXPLAIN SELECT DISTINCT * FROM t2
;EXPLAIN SELECT  * FROM t2
;EXPLAIN SELECT DISTINCT * FROM (SELECT * FROM t2)
;EXPLAIN SELECT  * FROM (SELECT * FROM t2)
;EXPLAIN SELECT DISTINCT * FROM t1
;EXPLAIN SELECT  * FROM t1
;EXPLAIN SELECT DISTINCT * FROM t4
;EXPLAIN SELECT  * FROM t4
;EXPLAIN SELECT DISTINCT a, b FROM t1
;EXPLAIN SELECT  a, b FROM t1
;EXPLAIN SELECT DISTINCT c FROM t1 WHERE b IN (1,2)
;EXPLAIN SELECT  c FROM t1 WHERE b IN (1,2)
;EXPLAIN SELECT DISTINCT c FROM t1
;EXPLAIN SELECT  c FROM t1
;EXPLAIN SELECT DISTINCT b FROM t1
;EXPLAIN SELECT  b FROM t1
;EXPLAIN SELECT DISTINCT a, d FROM t1
;EXPLAIN SELECT  a, d FROM t1
;EXPLAIN SELECT DISTINCT a, d FROM t4
;EXPLAIN SELECT  a, d FROM t4
;EXPLAIN SELECT DISTINCT a, b, c COLLATE nocase FROM t1
;EXPLAIN SELECT  a, b, c COLLATE nocase FROM t1
;EXPLAIN SELECT DISTINCT a, b, c COLLATE nocase FROM t4
;EXPLAIN SELECT  a, b, c COLLATE nocase FROM t4
;EXPLAIN SELECT DISTINCT a, d COLLATE nocase FROM t1
;EXPLAIN SELECT  a, d COLLATE nocase FROM t1
;EXPLAIN SELECT DISTINCT a, d COLLATE nocase FROM t4
;EXPLAIN SELECT  a, d COLLATE nocase FROM t4
;EXPLAIN SELECT DISTINCT a, d COLLATE binary FROM t1
;EXPLAIN SELECT  a, d COLLATE binary FROM t1
;EXPLAIN SELECT DISTINCT a, b, c COLLATE binary FROM t1
;EXPLAIN SELECT  a, b, c COLLATE binary FROM t1
;EXPLAIN SELECT DISTINCT a, b, c COLLATE binary FROM t4
;EXPLAIN SELECT  a, b, c COLLATE binary FROM t4
;EXPLAIN SELECT DISTINCT t1.rowid FROM t1, t2
;EXPLAIN SELECT  t1.rowid FROM t1, t2
;EXPLAIN  /* Technically, it would be possible to detect that DISTINCT
            ** is a no-op in cases like the following. But SQLite does not
            ** do so. */
            SELECT DISTINCT t1.rowid FROM t1, t2 WHERE t1.rowid=t2.rowid 
;EXPLAIN  /* Technically, it would be possible to detect that 
            ** is a no-op in cases like the following. But SQLite does not
            ** do so. */
            SELECT  t1.rowid FROM t1, t2 WHERE t1.rowid=t2.rowid 
;EXPLAIN SELECT DISTINCT c1, c2 FROM t3
;EXPLAIN SELECT  c1, c2 FROM t3
;EXPLAIN SELECT DISTINCT c1 FROM t3
;EXPLAIN SELECT  c1 FROM t3
;EXPLAIN SELECT DISTINCT * FROM t3
;EXPLAIN SELECT  * FROM t3
;EXPLAIN SELECT DISTINCT c2 FROM t3
;EXPLAIN SELECT  c2 FROM t3
;EXPLAIN SELECT DISTINCT * FROM (SELECT 1, 2, 3 UNION SELECT 4, 5, 6)
;EXPLAIN SELECT  * FROM (SELECT 1, 2, 3 UNION SELECT 4, 5, 6)
;EXPLAIN SELECT DISTINCT rowid/2 FROM t1
;EXPLAIN SELECT  rowid/2 FROM t1
;EXPLAIN SELECT DISTINCT rowid/2, rowid FROM t1
;EXPLAIN SELECT  rowid/2, rowid FROM t1
;EXPLAIN SELECT DISTINCT rowid/2, b FROM t1 WHERE c = ?
;EXPLAIN SELECT  rowid/2, b FROM t1 WHERE c = ?
;EXPLAIN SELECT DISTINCT rowid/2, b FROM t4 WHERE c = ?
;EXPLAIN SELECT  rowid/2, b FROM t4 WHERE c = ?
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a, b, c);
;CREATE INDEX i1 ON t1(a, b);
;CREATE INDEX i2 ON t1(b COLLATE nocase, c COLLATE nocase);
;INSERT INTO t1 VALUES('a', 'b', 'c');
;INSERT INTO t1 VALUES('A', 'B', 'C');
;
;SELECT DISTINCT a, b FROM t1
;EXPLAIN SELECT DISTINCT a, b FROM t1
;SELECT DISTINCT b, a FROM t1
;EXPLAIN SELECT DISTINCT b, a FROM t1
;SELECT DISTINCT a, b, c FROM t1
;EXPLAIN SELECT DISTINCT a, b, c FROM t1
;SELECT DISTINCT a, b, c FROM t1 ORDER BY a, b, c
;EXPLAIN SELECT DISTINCT a, b, c FROM t1 ORDER BY a, b, c
;SELECT DISTINCT b FROM t1 WHERE a = 'a'
;EXPLAIN SELECT DISTINCT b FROM t1 WHERE a = 'a'
;SELECT DISTINCT b FROM t1 ORDER BY +b COLLATE binary
;EXPLAIN SELECT DISTINCT b FROM t1 ORDER BY +b COLLATE binary
;SELECT DISTINCT a FROM t1
;EXPLAIN SELECT DISTINCT a FROM t1
;SELECT DISTINCT b COLLATE nocase FROM t1
;EXPLAIN SELECT DISTINCT b COLLATE nocase FROM t1
;SELECT DISTINCT b COLLATE nocase FROM t1 ORDER BY b COLLATE nocase
;EXPLAIN SELECT DISTINCT b COLLATE nocase FROM t1 ORDER BY b COLLATE nocase
;SELECT (SELECT DISTINCT o.a FROM t1 AS i) FROM t1 AS o ORDER BY rowid;
;
;CREATE TABLE t3(a INTEGER, b INTEGER, c, UNIQUE(a,b));
;INSERT INTO t3 VALUES
        (null, null, 1),
        (null, null, 2),
        (null, 3, 4),
        (null, 3, 5),
        (6, null, 7),
        (6, null, 8);
;SELECT DISTINCT a, b FROM t3 ORDER BY +a, +b;
;
;EXPLAIN SELECT DISTINCT a, b FROM t3 ORDER BY +a, +b;
;
;DROP TABLE IF EXISTS t1;
;DROP TABLE IF EXISTS t2;
;CREATE TABLE t1(a INTEGER);
;INSERT INTO t1 VALUES(3);
;INSERT INTO t1 VALUES(2);
;INSERT INTO t1 VALUES(1);
;CREATE TABLE t2(x);
;INSERT INTO t2
    SELECT DISTINCT
      CASE a WHEN 1 THEN x'0000000000'
             WHEN 2 THEN zeroblob(5)
             ELSE 'xyzzy' END
      FROM t1;
;SELECT quote(x) FROM t2 ORDER BY 1;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1(x);
;INSERT INTO t1(x) VALUES(3),(1),(5),(2),(6),(4),(5),(1),(3);
;CREATE INDEX t1x ON t1(x DESC);
;SELECT DISTINCT x FROM t1 ORDER BY x ASC;
;
;SELECT DISTINCT x FROM t1 ORDER BY x DESC;
;
;SELECT DISTINCT x FROM t1 ORDER BY x;
;
;DROP INDEX t1x;
;CREATE INDEX t1x ON t1(x ASC);
;SELECT DISTINCT x FROM t1 ORDER BY x ASC;
;
;SELECT DISTINCT x FROM t1 ORDER BY x DESC;
;
;SELECT DISTINCT x FROM t1 ORDER BY x;
;
;