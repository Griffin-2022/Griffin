ATTACH ':memory:' as aux;
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;CREATE TABLE aux.t1(a INTEGER PRIMARY KEY, b TEXT REFERENCES t2);
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE main.t2(x TEXT PRIMARY KEY, y INT);
;INSERT INTO main.t2 VALUES('abc',11),('def',22),('xyz',99);
;INSERT INTO aux.t1 VALUES(5,'abc'),(7,'xyz'),(9,'oops');
;PRAGMA foreign_key_check=t1;
;
;CREATE TABLE aux.t2(x TEXT PRIMARY KEY, y INT);
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;INSERT INTO aux.t2 VALUES('abc',11),('def',22),('xyz',99);
;
;SELECT *, 'x' FROM pragma_foreign_key_check('t1');
;PRAGMA foreign_key_check='t1'
;
;SELECT *, 'x' FROM pragma_foreign_key_check('t1','main');
;PRAGMA 'main'.foreign_key_check='t1'
;SELECT *, 'x' FROM pragma_foreign_key_check('t1','aux');
;PRAGMA 'aux'.foreign_key_check='t1'
;
;