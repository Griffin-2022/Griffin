CREATE TABLE t1(k1 INTEGER PRIMARY KEY, k2, k3);
;CREATE TABLE t2(k2 INTEGER PRIMARY KEY, v2);
;-- Prior to this problem being fixed, table t3_2 would be omitted from
  -- the join queries below, but if t3_1 were used in its place it would
  -- not.
  CREATE TABLE t3_1(k3 PRIMARY KEY, v3) WITHOUT ROWID;
;CREATE TABLE t3_2(v3, k3 PRIMARY KEY) WITHOUT ROWID;
;
;EXPLAIN QUERY PLAN 
  SELECT v2 FROM t1 LEFT JOIN t2 USING (k2) LEFT JOIN t3_1 USING (k3);
;
;EXPLAIN QUERY PLAN 
  SELECT v2 FROM t1 LEFT JOIN t2 USING (k2) LEFT JOIN t3_2 USING (k3);
;
;CREATE TABLE c1(k INTEGER PRIMARY KEY, v1);
;CREATE TABLE c2(k INTEGER PRIMARY KEY, v2);
;CREATE TABLE c3(k INTEGER PRIMARY KEY, v3);
;INSERT INTO c1 VALUES(1, 2);
;INSERT INTO c2 VALUES(2, 3);
;INSERT INTO c3 VALUES(3, 'v3');
;INSERT INTO c1 VALUES(111, 1112);
;INSERT INTO c2 VALUES(112, 1113);
;INSERT INTO c3 VALUES(113, 'v1113');
;
;SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v2);
;
;SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v1+1);
;
;SELECT DISTINCT v1, v3 FROM c1 LEFT JOIN c2 LEFT JOIN c3 ON (c3.k=v1+1);
;
;SELECT v1, v3 FROM c1 LEFT JOIN c2 LEFT JOIN c3 ON (c3.k=v1+1);
;
;EXPLAIN QUERY PLAN 
  SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v2);
;
;EXPLAIN QUERY PLAN 
  SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v1+1);
;
;DROP TABLE c1;
;DROP TABLE c2;
;DROP TABLE c3;
;CREATE TABLE c1(k UNIQUE, v1);
;CREATE TABLE c2(k UNIQUE, v2);
;CREATE TABLE c3(k UNIQUE, v3);
;INSERT INTO c1 VALUES(1, 2);
;INSERT INTO c2 VALUES(2, 3);
;INSERT INTO c3 VALUES(3, 'v3');
;INSERT INTO c1 VALUES(111, 1112);
;INSERT INTO c2 VALUES(112, 1113);
;INSERT INTO c3 VALUES(113, 'v1113');
;
;SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v2);
;
;SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v1+1);
;
;SELECT DISTINCT v1, v3 FROM c1 LEFT JOIN c2 LEFT JOIN c3 ON (c3.k=v1+1);
;
;SELECT v1, v3 FROM c1 LEFT JOIN c2 LEFT JOIN c3 ON (c3.k=v1+1);
;
;EXPLAIN QUERY PLAN 
  SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v2);
;
;EXPLAIN QUERY PLAN 
  SELECT v1, v3 FROM c1 LEFT JOIN c2 ON (c2.k=v1) LEFT JOIN c3 ON (c3.k=v1+1);
;
;DROP TABLE IF EXISTS t1;
;DROP TABLE IF EXISTS t2;
;CREATE TABLE t1(x PRIMARY KEY) WITHOUT ROWID;
;CREATE TABLE t2(x);
;SELECT a.x
    FROM t1 AS a
    LEFT JOIN t1 AS b ON (a.x=b.x)
    LEFT JOIN t2 AS c ON (a.x=c.x);
;
;WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10)
    INSERT INTO t1(x) SELECT x FROM c;
;INSERT INTO t2(x) SELECT x+9 FROM t1;
;SELECT a.x, c.x
    FROM t1 AS a
    LEFT JOIN t1 AS b ON (a.x=b.x)
    LEFT JOIN t2 AS c ON (a.x=c.x);
;
;CREATE TABLE s1 (a INTEGER PRIMARY KEY);
;CREATE TABLE s2 (a INTEGER PRIMARY KEY);
;CREATE TABLE s3 (a INTEGER);
;CREATE UNIQUE INDEX ndx on s3(a);
;
;EXPLAIN QUERY PLAN 
  SELECT s1.a FROM s1 left join s2 using (a);
;
;EXPLAIN QUERY PLAN 
  SELECT s1.a FROM s1 left join s3 using (a);
;
;CREATE TABLE u1(a INTEGER PRIMARY KEY, b, c);
;CREATE TABLE u2(a INTEGER PRIMARY KEY, b, c);
;CREATE INDEX u1ab ON u1(b, c);
;
;EXPLAIN QUERY PLAN 
  SELECT u2.* FROM u2 LEFT JOIN u1 ON( u1.a=u2.a AND u1.b=u2.b AND u1.c=u2.c );
;
;