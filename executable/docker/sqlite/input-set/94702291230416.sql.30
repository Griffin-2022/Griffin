CREATE TABLE t1(n int, log int);
;BEGIN;
;
;INSERT INTO t1 VALUES(1,0)
;INSERT INTO t1 VALUES(2,1)
;INSERT INTO t1 VALUES(3,2)
;INSERT INTO t1 VALUES(4,2)
;INSERT INTO t1 VALUES(5,3)
;INSERT INTO t1 VALUES(6,3)
;INSERT INTO t1 VALUES(7,3)
;INSERT INTO t1 VALUES(8,3)
;INSERT INTO t1 VALUES(9,4)
;INSERT INTO t1 VALUES(10,4)
;INSERT INTO t1 VALUES(11,4)
;INSERT INTO t1 VALUES(12,4)
;INSERT INTO t1 VALUES(13,4)
;INSERT INTO t1 VALUES(14,4)
;INSERT INTO t1 VALUES(15,4)
;INSERT INTO t1 VALUES(16,4)
;INSERT INTO t1 VALUES(17,5)
;INSERT INTO t1 VALUES(18,5)
;INSERT INTO t1 VALUES(19,5)
;INSERT INTO t1 VALUES(20,5)
;INSERT INTO t1 VALUES(21,5)
;INSERT INTO t1 VALUES(22,5)
;INSERT INTO t1 VALUES(23,5)
;INSERT INTO t1 VALUES(24,5)
;INSERT INTO t1 VALUES(25,5)
;INSERT INTO t1 VALUES(26,5)
;INSERT INTO t1 VALUES(27,5)
;INSERT INTO t1 VALUES(28,5)
;INSERT INTO t1 VALUES(29,5)
;INSERT INTO t1 VALUES(30,5)
;INSERT INTO t1 VALUES(31,5)
;COMMIT
  
;SELECT DISTINCT log FROM t1 ORDER BY log
;SELECT count(*) FROM t1
;SELECT min(n),min(log),max(n),max(log),sum(n),sum(log),avg(n),avg(log)
    FROM t1
  
;SELECT max(n)/avg(n), max(log)/avg(log) FROM t1
;SELECT log, count(*) FROM t1 GROUP BY log ORDER BY log
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY log
;SELECT log, avg(n) FROM t1 GROUP BY log ORDER BY log
;SELECT log, avg(n)+1 FROM t1 GROUP BY log ORDER BY log
;SELECT log, avg(n)-min(n) FROM t1 GROUP BY log ORDER BY log
;SELECT log*2+1, avg(n)-min(n) FROM t1 GROUP BY log ORDER BY log
;SELECT log*2+1 as x, count(*) FROM t1 GROUP BY x ORDER BY x
  
;SELECT log*2+1 AS x, count(*) AS y FROM t1 GROUP BY x ORDER BY y, x
  
;SELECT log*2+1 AS x, count(*) AS y FROM t1 GROUP BY x ORDER BY 10-(x+y)
  
;SELECT log, count(*) FROM t1 GROUP BY 0 ORDER BY log;
;SELECT log, count(*) FROM t1 GROUP BY 3 ORDER BY log;
;SELECT log, count(*) FROM t1 GROUP BY 1 ORDER BY log;
;
;SELECT log, count(*) FROM t1 GROUP BY ORDER
;SELECT log, count(*) FROM t1 GROUP BY;
;SELECT log, count(*) FROM t1 HAVING log>=4
;SELECT log, count(*) FROM t1 GROUP BY log HAVING log>=4 ORDER BY log
;SELECT log, count(*) FROM t1 
    GROUP BY log 
    HAVING count(*)>=4 
    ORDER BY log
  
;SELECT log, count(*) FROM t1 
    GROUP BY log 
    HAVING count(*)>=4 
    ORDER BY max(n)+0
  
;SELECT log AS x, count(*) AS y FROM t1 
    GROUP BY x
    HAVING y>=4 
    ORDER BY max(n)+0
  
;SELECT log AS x FROM t1 
    GROUP BY x
    HAVING count(*)>=4 
    ORDER BY max(n)+0
  
;SELECT log, count(*), avg(n), max(n+log*2) FROM t1 
    GROUP BY log 
    ORDER BY max(n+log*2)+0, avg(n)+0
  
;SELECT log, count(*), avg(n), max(n+log*2) FROM t1 
    GROUP BY log 
    ORDER BY max(n+log*2)+0, min(log,avg(n))+0
  
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY log;
;
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY log DESC;
;
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY 1;
;
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY 1 DESC;
;
;CREATE INDEX i1 ON t1(log);
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY log;
;
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY log DESC;
;
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY 1;
;
;SELECT log, min(n) FROM t1 GROUP BY log ORDER BY 1 DESC;
;
;CREATE TABLE t2(a,b);
;INSERT INTO t2 VALUES(1,2);
;SELECT a, sum(b) FROM t2 WHERE b=5 GROUP BY a;
;
;SELECT a, sum(b) FROM t2 WHERE b=5;
;
;CREATE TABLE A (
      A1 DOUBLE,
      A2 VARCHAR COLLATE NOCASE,
      A3 DOUBLE
    );
;INSERT INTO A VALUES(39136,'ABC',1201900000);
;INSERT INTO A VALUES(39136,'ABC',1207000000);
;SELECT typeof(sum(a3)) FROM a;
;
;SELECT typeof(sum(a3)) FROM a GROUP BY a1;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;DROP TABLE IF EXISTS t1;
;CREATE TABLE t1 (c0, c1 REAL PRIMARY KEY);
;INSERT INTO t1(c0, c1) VALUES (0, $x), (0, 0);
;UPDATE t1 SET c0 = NULL;
;UPDATE OR REPLACE t1 SET c1 = 1;
;SELECT DISTINCT * FROM t1 WHERE (t1.c0 IS NULL);
;PRAGMA integrity_check;
;
;