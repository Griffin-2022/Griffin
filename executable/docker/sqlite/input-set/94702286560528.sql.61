PRAGMA legacy_alter_table = 1;
;ATTACH 'test.db2' AS aux;
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;PRAGMA foreign_keys = on;
;CREATE TABLE aux.p1(a INTEGER PRIMARY KEY, b);
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='p1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='p1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE aux.c1(x INTEGER PRIMARY KEY, y REFERENCES p1(a));
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='c1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='c1' AND type!='trigger' ORDER BY rowid
;INSERT INTO aux.p1 VALUES(1, 1);
;INSERT INTO aux.p1 VALUES(2, 2);
;INSERT INTO aux.c1 VALUES(NULL, 2);
;CREATE TABLE aux.c2(x INTEGER PRIMARY KEY, y REFERENCES c1(a));
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='c2' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='c2' AND type!='trigger' ORDER BY rowid
;
;ALTER TABLE aux.p1 RENAME TO ppp;
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;SELECT*FROM"temp".sqlite_temp_master ORDER BY rowid
;
;INSERT INTO aux.c1 VALUES(NULL, 1);
;SELECT sql FROM aux.sqlite_master WHERE name = 'c1';
;
;