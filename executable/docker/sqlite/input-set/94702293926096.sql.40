PRAGMA mmap_size = 0 
;SELECT i FROM blobs 
;INSERT INTO blobs(k, v, i) VALUES(123, 567.765, NULL);
;
;INSERT INTO blobs(k, v, i) VALUES(X'010203040506070809', 'hello', 'world');
;
;CREATE TABLE t3(a INTEGER PRIMARY KEY, b);
;INSERT INTO t3 VALUES(1, 2);
;
;CREATE VIEW blobs_view AS SELECT k, v, i FROM blobs 
;CREATE VIRTUAL TABLE blobs_echo USING echo(blobs) 
;SELECT sql FROM sqlite_schema WHERE type = 'table' AND name = ?
;SELECT * FROM 'blobs'
;PRAGMA index_list(blobs)
;PRAGMA index_info(sqlite_autoindex_blobs_1)
;ATTACH 'test2.db' AS aux;
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;SELECT*FROM"aux".sqlite_master ORDER BY rowid
;CREATE TABLE aux.files(name, text);
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='files' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"aux".sqlite_master WHERE tbl_name='files' AND type!='trigger' ORDER BY rowid
;INSERT INTO aux.files VALUES('this one', zeroblob($::size));
;
;select text from aux.files
;SELECT rowid FROM blobs ORDER BY rowid
    
;SELECT * FROM blobs WHERE rowid = 4;
;
;
;BEGIN;
;DROP TABLE blobs;
;CREATE TABLE t1 (a, b, c, d BLOB);
;INSERT INTO t1(a, b, c, d) VALUES(1, 2, 3, 4);
;COMMIT;
;
;UPDATE t1 SET d = zeroblob(10000);
;
;UPDATE t1 SET d = 15;
;
;SELECT d FROM t1;
;
;
;
;
;
;
;