PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one two)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one two three)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one two three four)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one two three four(14))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one two three four(14, 22))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 var(+14, -22.3))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 var(1.0e10))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(c1 one(number
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text PRIMARY KEY)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text PRIMARY KEY ASC)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text PRIMARY KEY DESC)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT cons PRIMARY KEY DESC)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text NOT NULL)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT nm NOT NULL)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text NULL)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT nm NULL)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text UNIQUE)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT un UNIQUE)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CHECK(c1!=0))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT chk CHECK(c1!=0))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text DEFAULT 1)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text DEFAULT -1)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text DEFAULT +1)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text DEFAULT -45.8e22)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text DEFAULT (1+1))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT "1 2" DEFAULT (1+1))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text COLLATE nocase)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 text CONSTRAINT 'a x' COLLATE nocase)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 REFERENCES t2)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 CONSTRAINT abc REFERENCES t2)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 
      PRIMARY KEY NOT NULL UNIQUE CHECK(c1 IS 'ten') DEFAULT 123 REFERENCES t1
    );
;
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1 
      REFERENCES t1 DEFAULT 123 CHECK(c1 IS 'ten') UNIQUE NOT NULL PRIMARY KEY 
    );
;
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, PRIMARY KEY(c1))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, PRIMARY KEY(c1, c2))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, PRIMARY KEY(c1, c2) ON CONFLICT IGNORE)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, UNIQUE(c1))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, UNIQUE(c1, c2))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, UNIQUE(c1, c2) ON CONFLICT IGNORE)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, CHECK(c1 IS NOT c2))
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;CREATE TABLE t1(c1, c2, FOREIGN KEY(c1) REFERENCES t2)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY) 
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(
           col1,
           col2 TEXT,
           col3 INTEGER UNIQUE,
           col4 VARCHAR(10, 10) PRIMARY KEY,
           "name with spaces" REFERENCES t1
         );
;
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TABLE t1(a, b, c)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMP TABLE t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMPORARY TABLE t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TABLE IF NOT EXISTS t1(a, b, c)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMP TABLE IF NOT EXISTS t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMPORARY TABLE IF NOT EXISTS t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TABLE main.t1(a, b, c)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMP TABLE temp.t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMPORARY TABLE temp.t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TABLE IF NOT EXISTS main.t1(a, b, c)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMP TABLE IF NOT EXISTS temp.t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMPORARY TABLE IF NOT EXISTS temp.t1(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TABLE t1 AS SELECT * FROM t2
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TEMP TABLE t1 AS SELECT c, b, a FROM t2
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;CREATE TABLE t1 AS SELECT count(*), max(b), min(a) FROM t2
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(a, b, c) 
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH FULL 
    ON DELETE SET NULL ON UPDATE RESTRICT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) 
    ON DELETE RESTRICT ON UPDATE SET NULL MATCH FULL 
    NOT DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH PARTIAL 
    ON DELETE SET NULL ON UPDATE CASCADE DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH PARTIAL 
    ON DELETE RESTRICT ON UPDATE SET DEFAULT 
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH PARTIAL 
    ON DELETE RESTRICT ON UPDATE RESTRICT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH PARTIAL 
    ON DELETE NO ACTION ON UPDATE SET DEFAULT NOT DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH SIMPLE 
    ON DELETE SET NULL ON UPDATE CASCADE NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH SIMPLE 
    ON DELETE SET DEFAULT ON UPDATE SET NULL DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH SIMPLE 
    ON DELETE SET DEFAULT  NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH SIMPLE 
    ON DELETE RESTRICT ON UPDATE SET DEFAULT NOT DEFERRABLE INITIALLY DEFERRED
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH SIMPLE 
    ON DELETE RESTRICT ON UPDATE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH SIMPLE 
    ON DELETE NO ACTION ON UPDATE SET DEFAULT NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH STICK 
    ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) MATCH STICK 
    ON UPDATE SET NULL NOT DEFERRABLE INITIALLY DEFERRED
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x)
    ON DELETE SET NULL ON UPDATE NO ACTION DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) ON DELETE RESTRICT ON UPDATE NO ACTION NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2(x) NOT DEFERRABLE INITIALLY DEFERRED
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH FULL 
    ON DELETE SET NULL ON UPDATE SET NULL DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH FULL 
    ON DELETE SET NULL ON UPDATE SET DEFAULT NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH FULL ON DELETE SET DEFAULT ON UPDATE SET NULL 
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH FULL 
    ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH PARTIAL 
    ON DELETE SET NULL ON UPDATE RESTRICT NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH PARTIAL 
    ON DELETE SET NULL ON UPDATE NO ACTION DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH PARTIAL ON DELETE CASCADE ON UPDATE SET DEFAULT 
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH PARTIAL NOT DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH SIMPLE 
    ON DELETE SET DEFAULT ON UPDATE CASCADE DEFERRABLE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH STICK 
    ON DELETE SET NULL ON UPDATE NO ACTION DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH STICK 
    ON DELETE NO ACTION ON UPDATE SET DEFAULT NOT DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 MATCH STICK 
    ON UPDATE SET DEFAULT DEFERRABLE INITIALLY IMMEDIATE
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;CREATE TABLE t1(a 
    REFERENCES t2 
    ON DELETE RESTRICT ON UPDATE NO ACTION DEFERRABLE INITIALLY DEFERRED
  )
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t2(x PRIMARY KEY, y) 
;CREATE TABLE t3(i, j, UNIQUE(i, j) ) 
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "t3"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;ATTACH 'test.db2' AS auxa;
;SELECT*FROM"auxa".sqlite_master ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master ORDER BY rowid
;ATTACH 'test.db3' AS auxb;
;SELECT*FROM"auxb".sqlite_master ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master ORDER BY rowid
;
;CREATE TABLE sqlite_abc(
;CREATE TABLE temp.sqlite_helloworld(
;CREATE TABLE auxa."sqlite__"(
;CREATE TABLE auxb."sqlite_"(
;CREATE TABLE "SQLITE_TBL"(
;CREATE TABLE sqlit_abc(a, b, c)
;CREATE TABLE temp.sqlitehelloworld(x)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='sqlitehelloworld' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='sqlitehelloworld' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxa."sqlite"(x, y)
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='sqlite' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='sqlite' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxb."sqlite-"(z)
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='sqlite-' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='sqlite-' AND type!='trigger' ORDER BY rowid
;CREATE TABLE "SQLITE-TBL"(z)
;CREATE TABLE george.t1(
;CREATE TABLE _.t1(
;CREATE TABLE main.abc(a, b, c)
;CREATE TABLE temp.helloworld(x)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='helloworld' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='helloworld' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxa."t 1"(x, y)
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t 1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t 1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxb.xyz(z)
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='xyz' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='xyz' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "sqlit_abc"
;DROP table "SQLITE-TBL"
;DROP table "abc"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "sqlitehelloworld"
;DROP table "helloworld"
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "sqlite"
;DROP table "t 1"
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "sqlite-"
;DROP table "xyz"
;PRAGMA foreign_keys = 0
;CREATE TABLE main.abc(a, b, c)
;pragma database_list 
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE main.t1(a, b, c)
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE temp.tmp(a, b, c)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='tmp' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='tmp' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE auxb.tbl(x, y)
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='tbl' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='tbl' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE auxb.t1(k, v)
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE auxa.next(c, d)
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='next' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='next' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "abc"
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "tmp"
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "next"
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "tbl"
;DROP table "t1"
;PRAGMA foreign_keys = 0
;CREATE TEMP TABLE t1(a, b)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;pragma database_list 
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TEMPORARY TABLE t2(a, b)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TEMP TABLE main.t1(
;CREATE TEMPORARY TABLE auxa.t2(
;CREATE TEMP TABLE auxb.t3(
;CREATE TEMPORARY TABLE main.xxx(
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TEMP TABLE temp.t1(a, b)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;pragma database_list 
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TEMPORARY TABLE temp.t2(a, b)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TEMP TABLE TEMP.t3(a, b)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t3' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='t3' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TEMPORARY TABLE TEMP.xxx(x)
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='xxx' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"temp".sqlite_master WHERE tbl_name='xxx' AND type!='trigger' ORDER BY rowid
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "xxx"
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a, b)
;pragma database_list 
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE t2(a, b)
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE t3(a, b)
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;CREATE TABLE xxx(x)
;SELECT DISTINCT tbl_name FROM main.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM sqlite_temp_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxa.sqlite_master ORDER BY tbl_name
;SELECT DISTINCT tbl_name FROM auxb.sqlite_master ORDER BY tbl_name
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "xxx"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x, y);
;CREATE INDEX i1 ON t1(x);
;CREATE VIEW  v1 AS SELECT * FROM t1;
;CREATE TABLE auxa.tbl1(x, y);
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid
;CREATE INDEX auxa.idx1 ON tbl1(x);
;SELECT*FROM"auxa".sqlite_master WHERE name='idx1' AND type='index' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE name='idx1' AND type='index' ORDER BY rowid
;CREATE VIEW auxa.view1 AS SELECT * FROM tbl1;
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='view1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='view1' AND type!='trigger' ORDER BY rowid
;
;CREATE TABLE t1(
;CREATE TABLE i1(
;CREATE TABLE v1(
;CREATE TABLE auxa.tbl1(
;CREATE TABLE auxa.idx1(
;CREATE TABLE auxa.view1(
;CREATE TABLE auxa.t1(a, b)
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxa.i1(a, b)
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='i1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='i1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxa.v1(a, b)
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='v1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='v1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE tbl1(a, b)
;CREATE TABLE idx1(a, b)
;CREATE TABLE view1(a, b)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP view "v1"
;DROP table "tbl1"
;DROP table "idx1"
;DROP table "view1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "tbl1"
;DROP view "view1"
;DROP table "t1"
;DROP table "i1"
;DROP table "v1"
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x, y);
;CREATE INDEX i1 ON t1(x);
;CREATE VIEW  v1 AS SELECT * FROM t1;
;CREATE TABLE auxa.tbl1(x, y);
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='tbl1' AND type!='trigger' ORDER BY rowid
;CREATE INDEX auxa.idx1 ON tbl1(x);
;SELECT*FROM"auxa".sqlite_master WHERE name='idx1' AND type='index' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE name='idx1' AND type='index' ORDER BY rowid
;CREATE VIEW auxa.view1 AS SELECT * FROM tbl1;
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='view1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='view1' AND type!='trigger' ORDER BY rowid
;
;CREATE TABLE IF NOT EXISTS t1(a, b)
;CREATE TABLE IF NOT EXISTS auxa.tbl1(a, b)
;CREATE TABLE IF NOT EXISTS v1(a, b)
;CREATE TABLE IF NOT EXISTS auxa.view1(a, b)
;CREATE TABLE IF NOT EXISTS i1(
;CREATE TABLE IF NOT EXISTS auxa.idx1(
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP view "v1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "tbl1"
;DROP view "view1"
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x, y);
;CREATE TABLE auxb.t2(x, y);
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='t2' AND type!='trigger' ORDER BY rowid
;CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN
    SELECT 1;
  END;
;CREATE TRIGGER auxb.tr2 AFTER INSERT ON t2 BEGIN
    SELECT 1;
  END;
;SELECT*FROM"auxb".sqlite_master WHERE type='trigger' AND name='tr2' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE type='trigger' AND name='tr2' ORDER BY rowid
;
;CREATE TABLE tr1(a, b)
;CREATE TABLE tr2(a, b)
;CREATE TABLE auxb.tr1(a, b)
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='tr1' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='tr1' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxb.tr2(a, b)
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='tr2' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxb".sqlite_master WHERE tbl_name='tr2' AND type!='trigger' ORDER BY rowid
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "tr1"
;DROP table "tr2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t2"
;DROP table "tr1"
;DROP table "tr2"
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a, b);
;CREATE TABLE t2(a, b);
;CREATE TABLE auxa.t3(a, b);
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t3' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t3' AND type!='trigger' ORDER BY rowid
;CREATE TABLE auxa.t4(a, b);
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t4' AND type!='trigger' ORDER BY rowid
;SELECT*FROM"auxa".sqlite_master WHERE tbl_name='t4' AND type!='trigger' ORDER BY rowid
;
;SELECT * FROM t1;
;SELECT * FROM t2;
;SELECT * FROM t3;
;SELECT * FROM t4;
;
;DROP TABLE t1 
;SELECT * FROM t1 

;DROP TABLE t3 
;SELECT * FROM t3 

;SELECT name FROM sqlite_master;
;SELECT name FROM auxa.sqlite_master;
;
;DROP TABLE t2 
;DROP TABLE t4 
;SELECT name FROM sqlite_master;
;SELECT name FROM auxa.sqlite_master;
;
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a, b, c);
;CREATE TABLE t2(d, e, f);
;CREATE TABLE t3(g BIGINT, h VARCHAR(10));
;CREATE TABLE t4(i BLOB, j ANYOLDATA);
;CREATE TABLE t5(k FLOAT, l INTEGER);
;CREATE TABLE t6(m DEFAULT 10, n DEFAULT 5, PRIMARY KEY(m, n));
;CREATE TABLE t7(x INTEGER PRIMARY KEY);
;CREATE TABLE t8(o COLLATE nocase DEFAULT 'abc');
;CREATE TABLE t9(p NOT NULL, q DOUBLE CHECK (q!=0), r STRING UNIQUE);
;
;DROP TABLE x1 
;CREATE TABLE x1 AS SELECT * FROM t1
;SELECT * FROM x1
;DROP TABLE x1 
;CREATE TABLE x1 AS SELECT c, b, a FROM t1
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT * FROM t1, t2
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT count(*) FROM t1
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT count(a) AS a, max(b) FROM t1
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT a FROM t1
;SELECT * FROM x1
;DROP TABLE x1 
;CREATE TABLE x1 AS SELECT * FROM t3
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT * FROM t4
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT * FROM t5
;SELECT * FROM x1
;CREATE TABLE x1 AS SELECT * FROM t6
;SELECT sql FROM sqlite_master ORDER BY rowid DESC LIMIT 1

;CREATE TABLE x2 AS SELECT * FROM t7
;CREATE TABLE x3 AS SELECT * FROM t8
;CREATE TABLE x4 AS SELECT * FROM t9
;INSERT INTO x1 DEFAULT VALUES;
;INSERT INTO x2 DEFAULT VALUES;
;INSERT INTO x3 DEFAULT VALUES;
;INSERT INTO x4 DEFAULT VALUES;
;
;SELECT * FROM x1 
;SELECT * FROM x2 
;SELECT * FROM x3 
;SELECT * FROM x4 
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;DROP table "t5"
;DROP table "t6"
;DROP table "t7"
;DROP table "t8"
;DROP table "t9"
;DROP table "x1"
;DROP table "x2"
;DROP table "x3"
;DROP table "x4"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x, y);
;INSERT INTO t1 VALUES('i',   'one');
;INSERT INTO t1 VALUES('ii',  'two');
;INSERT INTO t1 VALUES('iii', 'three');
;
;CREATE TABLE x1 AS SELECT * FROM t1
;SELECT * FROM t1
;SELECT * FROM x1 ORDER BY rowid;
;
;SELECT min(rowid), count(rowid)==max(rowid) FROM x1
  
;CREATE TABLE x2 AS SELECT * FROM t1 ORDER BY x DESC
;SELECT * FROM t1 ORDER BY x DESC
;SELECT * FROM x2 ORDER BY rowid;
;
;SELECT min(rowid), count(rowid)==max(rowid) FROM x2
  
;CREATE TABLE x3 AS SELECT * FROM t1 ORDER BY x ASC
;SELECT * FROM t1 ORDER BY x ASC
;SELECT * FROM x3 ORDER BY rowid;
;
;SELECT min(rowid), count(rowid)==max(rowid) FROM x3
  
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "x1"
;DROP table "x2"
;DROP table "x3"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x VARCHAR(10), y INTEGER, z DOUBLE);
;CREATE TABLE t2(a DATETIME, b STRING, c REAL);
;CREATE TABLE t3(o, t);
;
;INSERT INTO t1 VALUES(14, 'quite a lengthy string', X'555655');
;SELECT * FROM t1;
;
;INSERT INTO t2 VALUES('not a datetime', 13, '12:41:59');
;SELECT * FROM t2;
;
;DELETE FROM t1;
;DELETE FROM t2;
;
;INSERT INTO t1 VALUES(15,   '22.0', '14')
;SELECT quote(x), quote(y), quote(z) FROM t1 ORDER BY rowid DESC LIMIT 1;
;
;INSERT INTO t1 VALUES(22.0, 22.0, 22.0)
;
;INSERT INTO t2 VALUES(15,   '22.0', '14')
;SELECT quote(a), quote(b), quote(c) FROM t2 ORDER BY rowid DESC LIMIT 1;
;
;INSERT INTO t2 VALUES(22.0, 22.0, 22.0)
;
;INSERT INTO t3 VALUES('15', '22.0')
;SELECT quote(o), quote(t) FROM t3 ORDER BY rowid DESC LIMIT 1;
;
;INSERT INTO t3 VALUES(15, 22.0)
;
;DELETE FROM t1 
;INSERT INTO t1(x, y) VALUES('abc', 'xyz')
;SELECT quote(x), quote(y), quote(z) FROM t1

;INSERT INTO t1(x, z) VALUES('abc', 'xyz')
;INSERT INTO t1 DEFAULT VALUES
;CREATE TABLE t4(
    a DEFAULT NULL,
    b DEFAULT 'string constant',
    c DEFAULT X'424C4F42',
    d DEFAULT 1,
    e DEFAULT -1,
    f DEFAULT 3.14,
    g DEFAULT -3.14,
    h DEFAULT ( substr('abcd', 0, 2) || 'cd' ),
    i DEFAULT CURRENT_TIME,
    j DEFAULT CURRENT_DATE,
    k DEFAULT CURRENT_TIMESTAMP
  );
;
;CREATE TABLE t5(x DEFAULT ( (SELECT 1) ))
;CREATE TABLE t5(x DEFAULT ( "abc" ))
;CREATE TABLE t5(x DEFAULT ( 1 IN (SELECT 1) ))
;CREATE TABLE t5(x DEFAULT ( EXISTS (SELECT 1) ))
;CREATE TABLE t5(x DEFAULT ( x!=?1 ))
;DROP TABLE t5 
;CREATE TABLE t5(x DEFAULT ( 'abc' ))
;DROP TABLE t5 
;CREATE TABLE t5(x DEFAULT ( 1 IN (1, 2, 3) ))
;INSERT INTO t4 DEFAULT VALUES
;SELECT quote(a), quote(b), quote(c), quote(d), quote(e), quote(f), 
         quote(g), quote(h), quote(i), quote(j), quote(k)
  FROM t4 ORDER BY rowid DESC LIMIT 1;
;
;INSERT INTO t4(a, b, c) VALUES(1, 2, 3)
;
;INSERT INTO t4(k, j, i) VALUES(1, 2, 3)
;
;INSERT INTO t4(a,b,c,d,e,f,g,h,i,j,k) VALUES(1,2,3,4,5,6,7,8,9,10,11)
;
;CREATE TABLE t5(
    a DEFAULT NULL,  
    b DEFAULT 'text value',  
    c DEFAULT X'424C4F42',
    d DEFAULT -45678.6,
    e DEFAULT 394507
  );
;
;INSERT INTO t5 DEFAULT VALUES;
;SELECT quote(a), quote(b), quote(c), quote(d), quote(e) FROM t5;
;
;CREATE TABLE t6(a DEFAULT ( nextint() ), b DEFAULT ( nextint() ));
;
;INSERT INTO t6 DEFAULT VALUES;
;SELECT quote(a), quote(b) FROM t6;
;
;INSERT INTO t6(a) VALUES('X');
;
;INSERT INTO t6(a) SELECT a FROM t6;
;
;CREATE TABLE t7(
    a DEFAULT CURRENT_TIME, 
    b DEFAULT CURRENT_DATE, 
    c DEFAULT CURRENT_TIMESTAMP
  );
;
;INSERT INTO t7 DEFAULT VALUES;
;SELECT quote(a), quote(b), quote(c) FROM t7;
;
;INSERT INTO t7(b, c) VALUES('x', 'y')
;SELECT a, b, c FROM t7 ORDER BY rowid DESC LIMIT 1;
;
;INSERT INTO t7(c, a) VALUES('x', 'y')
;
;INSERT INTO t7(a, b) VALUES('x', 'y')
;
;CREATE TABLE t8(a COLLATE nocase, b COLLATE rtrim, c COLLATE binary, d);
;INSERT INTO t8 VALUES('abc',   'abc',   'abc',   'abc');
;INSERT INTO t8 VALUES('abc  ', 'abc  ', 'abc  ', 'abc  ');
;INSERT INTO t8 VALUES('ABC  ', 'ABC  ', 'ABC  ', 'ABC  ');
;INSERT INTO t8 VALUES('ABC',   'ABC',   'ABC',   'ABC');
;
;SELECT a FROM t8 ORDER BY a, rowid
;SELECT b FROM t8 ORDER BY b, rowid
;SELECT c FROM t8 ORDER BY c, rowid
;SELECT d FROM t8 ORDER BY d, rowid
;CREATE TABLE t9(c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106, c107, c108, c109, c110, c111, c112, c113, c114, c115, c116, c117, c118, c119, c120, c121, c122, c123, c124, c125, c126, c127, c128, c129, c130, c131, c132, c133, c134, c135, c136, c137, c138, c139, c140, c141, c142, c143, c144, c145, c146, c147, c148, c149, c150, c151, c152, c153, c154, c155, c156, c157, c158, c159, c160, c161, c162, c163, c164, c165, c166, c167, c168, c169, c170, c171, c172, c173, c174, c175, c176, c177, c178, c179, c180, c181, c182, c183, c184, c185, c186, c187, c188, c189, c190, c191, c192, c193, c194, c195, c196, c197, c198, c199, c200, c201, c202, c203, c204, c205, c206, c207, c208, c209, c210, c211, c212, c213, c214, c215, c216, c217, c218, c219, c220, c221, c222, c223, c224, c225, c226, c227, c228, c229, c230, c231, c232, c233, c234, c235, c236, c237, c238, c239, c240, c241, c242, c243, c244, c245, c246, c247, c248, c249, c250, c251, c252, c253, c254, c255, c256, c257, c258, c259, c260, c261, c262, c263, c264, c265, c266, c267, c268, c269, c270, c271, c272, c273, c274, c275, c276, c277, c278, c279, c280, c281, c282, c283, c284, c285, c286, c287, c288, c289, c290, c291, c292, c293, c294, c295, c296, c297, c298, c299, c300, c301, c302, c303, c304, c305, c306, c307, c308, c309, c310, c311, c312, c313, c314, c315, c316, c317, c318, c319, c320, c321, c322, c323, c324, c325, c326, c327, c328, c329, c330, c331, c332, c333, c334, c335, c336, c337, c338, c339, c340, c341, c342, c343, c344, c345, c346, c347, c348, c349, c350, c351, c352, c353, c354, c355, c356, c357, c358, c359, c360, c361, c362, c363, c364, c365, c366, c367, c368, c369, c370, c371, c372, c373, c374, c375, c376, c377, c378, c379, c380, c381, c382, c383, c384, c385, c386, c387, c388, c389, c390, c391, c392, c393, c394, c395, c396, c397, c398, c399, c400, c401, c402, c403, c404, c405, c406, c407, c408, c409, c410, c411, c412, c413, c414, c415, c416, c417, c418, c419, c420, c421, c422, c423, c424, c425, c426, c427, c428, c429, c430, c431, c432, c433, c434, c435, c436, c437, c438, c439, c440, c441, c442, c443, c444, c445, c446, c447, c448, c449, c450, c451, c452, c453, c454, c455, c456, c457, c458, c459, c460, c461, c462, c463, c464, c465, c466, c467, c468, c469, c470, c471, c472, c473, c474, c475, c476, c477, c478, c479, c480, c481, c482, c483, c484, c485, c486, c487, c488, c489, c490, c491, c492, c493, c494, c495, c496, c497, c498, c499, c500, c501, c502, c503, c504, c505, c506, c507, c508, c509, c510, c511, c512, c513, c514, c515, c516, c517, c518, c519, c520, c521, c522, c523, c524, c525, c526, c527, c528, c529, c530, c531, c532, c533, c534, c535, c536, c537, c538, c539, c540, c541, c542, c543, c544, c545, c546, c547, c548, c549, c550, c551, c552, c553, c554, c555, c556, c557, c558, c559, c560, c561, c562, c563, c564, c565, c566, c567, c568, c569, c570, c571, c572, c573, c574, c575, c576, c577, c578, c579, c580, c581, c582, c583, c584, c585, c586, c587, c588, c589, c590, c591, c592, c593, c594, c595, c596, c597, c598, c599, c600, c601, c602, c603, c604, c605, c606, c607, c608, c609, c610, c611, c612, c613, c614, c615, c616, c617, c618, c619, c620, c621, c622, c623, c624, c625, c626, c627, c628, c629, c630, c631, c632, c633, c634, c635, c636, c637, c638, c639, c640, c641, c642, c643, c644, c645, c646, c647, c648, c649, c650, c651, c652, c653, c654, c655, c656, c657, c658, c659, c660, c661, c662, c663, c664, c665, c666, c667, c668, c669, c670, c671, c672, c673, c674, c675, c676, c677, c678, c679, c680, c681, c682, c683, c684, c685, c686, c687, c688, c689, c690, c691, c692, c693, c694, c695, c696, c697, c698, c699, c700, c701, c702, c703, c704, c705, c706, c707, c708, c709, c710, c711, c712, c713, c714, c715, c716, c717, c718, c719, c720, c721, c722, c723, c724, c725, c726, c727, c728, c729, c730, c731, c732, c733, c734, c735, c736, c737, c738, c739, c740, c741, c742, c743, c744, c745, c746, c747, c748, c749, c750, c751, c752, c753, c754, c755, c756, c757, c758, c759, c760, c761, c762, c763, c764, c765, c766, c767, c768, c769, c770, c771, c772, c773, c774, c775, c776, c777, c778, c779, c780, c781, c782, c783, c784, c785, c786, c787, c788, c789, c790, c791, c792, c793, c794, c795, c796, c797, c798, c799, c800, c801, c802, c803, c804, c805, c806, c807, c808, c809, c810, c811, c812, c813, c814, c815, c816, c817, c818, c819, c820, c821, c822, c823, c824, c825, c826, c827, c828, c829, c830, c831, c832, c833, c834, c835, c836, c837, c838, c839, c840, c841, c842, c843, c844, c845, c846, c847, c848, c849, c850, c851, c852, c853, c854, c855, c856, c857, c858, c859, c860, c861, c862, c863, c864, c865, c866, c867, c868, c869, c870, c871, c872, c873, c874, c875, c876, c877, c878, c879, c880, c881, c882, c883, c884, c885, c886, c887, c888, c889, c890, c891, c892, c893, c894, c895, c896, c897, c898, c899, c900, c901, c902, c903, c904, c905, c906, c907, c908, c909, c910, c911, c912, c913, c914, c915, c916, c917, c918, c919, c920, c921, c922, c923, c924, c925, c926, c927, c928, c929, c930, c931, c932, c933, c934, c935, c936, c937, c938, c939, c940, c941, c942, c943, c944, c945, c946, c947, c948, c949, c950, c951, c952, c953, c954, c955, c956, c957, c958, c959, c960, c961, c962, c963, c964, c965, c966, c967, c968, c969, c970, c971, c972, c973, c974, c975, c976, c977, c978, c979, c980, c981, c982, c983, c984, c985, c986, c987, c988, c989, c990, c991, c992, c993, c994, c995, c996, c997, c998, c999, c1000, c1001, c1002, c1003, c1004, c1005, c1006, c1007, c1008, c1009, c1010, c1011, c1012, c1013, c1014, c1015, c1016, c1017, c1018, c1019, c1020, c1021, c1022, c1023, c1024, c1025, c1026, c1027, c1028, c1029, c1030, c1031, c1032, c1033, c1034, c1035, c1036, c1037, c1038, c1039, c1040, c1041, c1042, c1043, c1044, c1045, c1046, c1047, c1048, c1049, c1050, c1051, c1052, c1053, c1054, c1055, c1056, c1057, c1058, c1059, c1060, c1061, c1062, c1063, c1064, c1065, c1066, c1067, c1068, c1069, c1070, c1071, c1072, c1073, c1074, c1075, c1076, c1077, c1078, c1079, c1080, c1081, c1082, c1083, c1084, c1085, c1086, c1087, c1088, c1089, c1090, c1091, c1092, c1093, c1094, c1095, c1096, c1097, c1098, c1099, c1100, c1101, c1102, c1103, c1104, c1105, c1106, c1107, c1108, c1109, c1110, c1111, c1112, c1113, c1114, c1115, c1116, c1117, c1118, c1119, c1120, c1121, c1122, c1123, c1124, c1125, c1126, c1127, c1128, c1129, c1130, c1131, c1132, c1133, c1134, c1135, c1136, c1137, c1138, c1139, c1140, c1141, c1142, c1143, c1144, c1145, c1146, c1147, c1148, c1149, c1150, c1151, c1152, c1153, c1154, c1155, c1156, c1157, c1158, c1159, c1160, c1161, c1162, c1163, c1164, c1165, c1166, c1167, c1168, c1169, c1170, c1171, c1172, c1173, c1174, c1175, c1176, c1177, c1178, c1179, c1180, c1181, c1182, c1183, c1184, c1185, c1186, c1187, c1188, c1189, c1190, c1191, c1192, c1193, c1194, c1195, c1196, c1197, c1198, c1199, c1200, c1201, c1202, c1203, c1204, c1205, c1206, c1207, c1208, c1209, c1210, c1211, c1212, c1213, c1214, c1215, c1216, c1217, c1218, c1219, c1220, c1221, c1222, c1223, c1224, c1225, c1226, c1227, c1228, c1229, c1230, c1231, c1232, c1233, c1234, c1235, c1236, c1237, c1238, c1239, c1240, c1241, c1242, c1243, c1244, c1245, c1246, c1247, c1248, c1249, c1250, c1251, c1252, c1253, c1254, c1255, c1256, c1257, c1258, c1259, c1260, c1261, c1262, c1263, c1264, c1265, c1266, c1267, c1268, c1269, c1270, c1271, c1272, c1273, c1274, c1275, c1276, c1277, c1278, c1279, c1280, c1281, c1282, c1283, c1284, c1285, c1286, c1287, c1288, c1289, c1290, c1291, c1292, c1293, c1294, c1295, c1296, c1297, c1298, c1299, c1300, c1301, c1302, c1303, c1304, c1305, c1306, c1307, c1308, c1309, c1310, c1311, c1312, c1313, c1314, c1315, c1316, c1317, c1318, c1319, c1320, c1321, c1322, c1323, c1324, c1325, c1326, c1327, c1328, c1329, c1330, c1331, c1332, c1333, c1334, c1335, c1336, c1337, c1338, c1339, c1340, c1341, c1342, c1343, c1344, c1345, c1346, c1347, c1348, c1349, c1350, c1351, c1352, c1353, c1354, c1355, c1356, c1357, c1358, c1359, c1360, c1361, c1362, c1363, c1364, c1365, c1366, c1367, c1368, c1369, c1370, c1371, c1372, c1373, c1374, c1375, c1376, c1377, c1378, c1379, c1380, c1381, c1382, c1383, c1384, c1385, c1386, c1387, c1388, c1389, c1390, c1391, c1392, c1393, c1394, c1395, c1396, c1397, c1398, c1399, c1400, c1401, c1402, c1403, c1404, c1405, c1406, c1407, c1408, c1409, c1410, c1411, c1412, c1413, c1414, c1415, c1416, c1417, c1418, c1419, c1420, c1421, c1422, c1423, c1424, c1425, c1426, c1427, c1428, c1429, c1430, c1431, c1432, c1433, c1434, c1435, c1436, c1437, c1438, c1439, c1440, c1441, c1442, c1443, c1444, c1445, c1446, c1447, c1448, c1449, c1450, c1451, c1452, c1453, c1454, c1455, c1456, c1457, c1458, c1459, c1460, c1461, c1462, c1463, c1464, c1465, c1466, c1467, c1468, c1469, c1470, c1471, c1472, c1473, c1474, c1475, c1476, c1477, c1478, c1479, c1480, c1481, c1482, c1483, c1484, c1485, c1486, c1487, c1488, c1489, c1490, c1491, c1492, c1493, c1494, c1495, c1496, c1497, c1498, c1499, c1500, c1501, c1502, c1503, c1504, c1505, c1506, c1507, c1508, c1509, c1510, c1511, c1512, c1513, c1514, c1515, c1516, c1517, c1518, c1519, c1520, c1521, c1522, c1523, c1524, c1525, c1526, c1527, c1528, c1529, c1530, c1531, c1532, c1533, c1534, c1535, c1536, c1537, c1538, c1539, c1540, c1541, c1542, c1543, c1544, c1545, c1546, c1547, c1548, c1549, c1550, c1551, c1552, c1553, c1554, c1555, c1556, c1557, c1558, c1559, c1560, c1561, c1562, c1563, c1564, c1565, c1566, c1567, c1568, c1569, c1570, c1571, c1572, c1573, c1574, c1575, c1576, c1577, c1578, c1579, c1580, c1581, c1582, c1583, c1584, c1585, c1586, c1587, c1588, c1589, c1590, c1591, c1592, c1593, c1594, c1595, c1596, c1597, c1598, c1599, c1600, c1601, c1602, c1603, c1604, c1605, c1606, c1607, c1608, c1609, c1610, c1611, c1612, c1613, c1614, c1615, c1616, c1617, c1618, c1619, c1620, c1621, c1622, c1623, c1624, c1625, c1626, c1627, c1628, c1629, c1630, c1631, c1632, c1633, c1634, c1635, c1636, c1637, c1638, c1639, c1640, c1641, c1642, c1643, c1644, c1645, c1646, c1647, c1648, c1649, c1650, c1651, c1652, c1653, c1654, c1655, c1656, c1657, c1658, c1659, c1660, c1661, c1662, c1663, c1664, c1665, c1666, c1667, c1668, c1669, c1670, c1671, c1672, c1673, c1674, c1675, c1676, c1677, c1678, c1679, c1680, c1681, c1682, c1683, c1684, c1685, c1686, c1687, c1688, c1689, c1690, c1691, c1692, c1693, c1694, c1695, c1696, c1697, c1698, c1699, c1700, c1701, c1702, c1703, c1704, c1705, c1706, c1707, c1708, c1709, c1710, c1711, c1712, c1713, c1714, c1715, c1716, c1717, c1718, c1719, c1720, c1721, c1722, c1723, c1724, c1725, c1726, c1727, c1728, c1729, c1730, c1731, c1732, c1733, c1734, c1735, c1736, c1737, c1738, c1739, c1740, c1741, c1742, c1743, c1744, c1745, c1746, c1747, c1748, c1749, c1750, c1751, c1752, c1753, c1754, c1755, c1756, c1757, c1758, c1759, c1760, c1761, c1762, c1763, c1764, c1765, c1766, c1767, c1768, c1769, c1770, c1771, c1772, c1773, c1774, c1775, c1776, c1777, c1778, c1779, c1780, c1781, c1782, c1783, c1784, c1785, c1786, c1787, c1788, c1789, c1790, c1791, c1792, c1793, c1794, c1795, c1796, c1797, c1798, c1799, c1800, c1801, c1802, c1803, c1804, c1805, c1806, c1807, c1808, c1809, c1810, c1811, c1812, c1813, c1814, c1815, c1816, c1817, c1818, c1819, c1820, c1821, c1822, c1823, c1824, c1825, c1826, c1827, c1828, c1829, c1830, c1831, c1832, c1833, c1834, c1835, c1836, c1837, c1838, c1839, c1840, c1841, c1842, c1843, c1844, c1845, c1846, c1847, c1848, c1849, c1850, c1851, c1852, c1853, c1854, c1855, c1856, c1857, c1858, c1859, c1860, c1861, c1862, c1863, c1864, c1865, c1866, c1867, c1868, c1869, c1870, c1871, c1872, c1873, c1874, c1875, c1876, c1877, c1878, c1879, c1880, c1881, c1882, c1883, c1884, c1885, c1886, c1887, c1888, c1889, c1890, c1891, c1892, c1893, c1894, c1895, c1896, c1897, c1898, c1899, c1900, c1901, c1902, c1903, c1904, c1905, c1906, c1907, c1908, c1909, c1910, c1911, c1912, c1913, c1914, c1915, c1916, c1917, c1918, c1919, c1920, c1921, c1922, c1923, c1924, c1925, c1926, c1927, c1928, c1929, c1930, c1931, c1932, c1933, c1934, c1935, c1936, c1937, c1938, c1939, c1940, c1941, c1942, c1943, c1944, c1945, c1946, c1947, c1948, c1949, c1950, c1951, c1952, c1953, c1954, c1955, c1956, c1957, c1958, c1959, c1960, c1961, c1962, c1963, c1964, c1965, c1966, c1967, c1968, c1969, c1970, c1971, c1972, c1973, c1974, c1975, c1976, c1977, c1978, c1979, c1980, c1981, c1982, c1983, c1984, c1985, c1986, c1987, c1988, c1989, c1990, c1991, c1992, c1993, c1994, c1995, c1996, c1997, c1998, c1999);
;
;CREATE TABLE t10(c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106, c107, c108, c109, c110, c111, c112, c113, c114, c115, c116, c117, c118, c119, c120, c121, c122, c123, c124, c125, c126, c127, c128, c129, c130, c131, c132, c133, c134, c135, c136, c137, c138, c139, c140, c141, c142, c143, c144, c145, c146, c147, c148, c149, c150, c151, c152, c153, c154, c155, c156, c157, c158, c159, c160, c161, c162, c163, c164, c165, c166, c167, c168, c169, c170, c171, c172, c173, c174, c175, c176, c177, c178, c179, c180, c181, c182, c183, c184, c185, c186, c187, c188, c189, c190, c191, c192, c193, c194, c195, c196, c197, c198, c199, c200, c201, c202, c203, c204, c205, c206, c207, c208, c209, c210, c211, c212, c213, c214, c215, c216, c217, c218, c219, c220, c221, c222, c223, c224, c225, c226, c227, c228, c229, c230, c231, c232, c233, c234, c235, c236, c237, c238, c239, c240, c241, c242, c243, c244, c245, c246, c247, c248, c249, c250, c251, c252, c253, c254, c255, c256, c257, c258, c259, c260, c261, c262, c263, c264, c265, c266, c267, c268, c269, c270, c271, c272, c273, c274, c275, c276, c277, c278, c279, c280, c281, c282, c283, c284, c285, c286, c287, c288, c289, c290, c291, c292, c293, c294, c295, c296, c297, c298, c299, c300, c301, c302, c303, c304, c305, c306, c307, c308, c309, c310, c311, c312, c313, c314, c315, c316, c317, c318, c319, c320, c321, c322, c323, c324, c325, c326, c327, c328, c329, c330, c331, c332, c333, c334, c335, c336, c337, c338, c339, c340, c341, c342, c343, c344, c345, c346, c347, c348, c349, c350, c351, c352, c353, c354, c355, c356, c357, c358, c359, c360, c361, c362, c363, c364, c365, c366, c367, c368, c369, c370, c371, c372, c373, c374, c375, c376, c377, c378, c379, c380, c381, c382, c383, c384, c385, c386, c387, c388, c389, c390, c391, c392, c393, c394, c395, c396, c397, c398, c399, c400, c401, c402, c403, c404, c405, c406, c407, c408, c409, c410, c411, c412, c413, c414, c415, c416, c417, c418, c419, c420, c421, c422, c423, c424, c425, c426, c427, c428, c429, c430, c431, c432, c433, c434, c435, c436, c437, c438, c439, c440, c441, c442, c443, c444, c445, c446, c447, c448, c449, c450, c451, c452, c453, c454, c455, c456, c457, c458, c459, c460, c461, c462, c463, c464, c465, c466, c467, c468, c469, c470, c471, c472, c473, c474, c475, c476, c477, c478, c479, c480, c481, c482, c483, c484, c485, c486, c487, c488, c489, c490, c491, c492, c493, c494, c495, c496, c497, c498, c499, c500, c501, c502, c503, c504, c505, c506, c507, c508, c509, c510, c511, c512, c513, c514, c515, c516, c517, c518, c519, c520, c521, c522, c523, c524, c525, c526, c527, c528, c529, c530, c531, c532, c533, c534, c535, c536, c537, c538, c539, c540, c541, c542, c543, c544, c545, c546, c547, c548, c549, c550, c551, c552, c553, c554, c555, c556, c557, c558, c559, c560, c561, c562, c563, c564, c565, c566, c567, c568, c569, c570, c571, c572, c573, c574, c575, c576, c577, c578, c579, c580, c581, c582, c583, c584, c585, c586, c587, c588, c589, c590, c591, c592, c593, c594, c595, c596, c597, c598, c599, c600, c601, c602, c603, c604, c605, c606, c607, c608, c609, c610, c611, c612, c613, c614, c615, c616, c617, c618, c619, c620, c621, c622, c623, c624, c625, c626, c627, c628, c629, c630, c631, c632, c633, c634, c635, c636, c637, c638, c639, c640, c641, c642, c643, c644, c645, c646, c647, c648, c649, c650, c651, c652, c653, c654, c655, c656, c657, c658, c659, c660, c661, c662, c663, c664, c665, c666, c667, c668, c669, c670, c671, c672, c673, c674, c675, c676, c677, c678, c679, c680, c681, c682, c683, c684, c685, c686, c687, c688, c689, c690, c691, c692, c693, c694, c695, c696, c697, c698, c699, c700, c701, c702, c703, c704, c705, c706, c707, c708, c709, c710, c711, c712, c713, c714, c715, c716, c717, c718, c719, c720, c721, c722, c723, c724, c725, c726, c727, c728, c729, c730, c731, c732, c733, c734, c735, c736, c737, c738, c739, c740, c741, c742, c743, c744, c745, c746, c747, c748, c749, c750, c751, c752, c753, c754, c755, c756, c757, c758, c759, c760, c761, c762, c763, c764, c765, c766, c767, c768, c769, c770, c771, c772, c773, c774, c775, c776, c777, c778, c779, c780, c781, c782, c783, c784, c785, c786, c787, c788, c789, c790, c791, c792, c793, c794, c795, c796, c797, c798, c799, c800, c801, c802, c803, c804, c805, c806, c807, c808, c809, c810, c811, c812, c813, c814, c815, c816, c817, c818, c819, c820, c821, c822, c823, c824, c825, c826, c827, c828, c829, c830, c831, c832, c833, c834, c835, c836, c837, c838, c839, c840, c841, c842, c843, c844, c845, c846, c847, c848, c849, c850, c851, c852, c853, c854, c855, c856, c857, c858, c859, c860, c861, c862, c863, c864, c865, c866, c867, c868, c869, c870, c871, c872, c873, c874, c875, c876, c877, c878, c879, c880, c881, c882, c883, c884, c885, c886, c887, c888, c889, c890, c891, c892, c893, c894, c895, c896, c897, c898, c899, c900, c901, c902, c903, c904, c905, c906, c907, c908, c909, c910, c911, c912, c913, c914, c915, c916, c917, c918, c919, c920, c921, c922, c923, c924, c925, c926, c927, c928, c929, c930, c931, c932, c933, c934, c935, c936, c937, c938, c939, c940, c941, c942, c943, c944, c945, c946, c947, c948, c949, c950, c951, c952, c953, c954, c955, c956, c957, c958, c959, c960, c961, c962, c963, c964, c965, c966, c967, c968, c969, c970, c971, c972, c973, c974, c975, c976, c977, c978, c979, c980, c981, c982, c983, c984, c985, c986, c987, c988, c989, c990, c991, c992, c993, c994, c995, c996, c997, c998, c999, c1000, c1001, c1002, c1003, c1004, c1005, c1006, c1007, c1008, c1009, c1010, c1011, c1012, c1013, c1014, c1015, c1016, c1017, c1018, c1019, c1020, c1021, c1022, c1023, c1024, c1025, c1026, c1027, c1028, c1029, c1030, c1031, c1032, c1033, c1034, c1035, c1036, c1037, c1038, c1039, c1040, c1041, c1042, c1043, c1044, c1045, c1046, c1047, c1048, c1049, c1050, c1051, c1052, c1053, c1054, c1055, c1056, c1057, c1058, c1059, c1060, c1061, c1062, c1063, c1064, c1065, c1066, c1067, c1068, c1069, c1070, c1071, c1072, c1073, c1074, c1075, c1076, c1077, c1078, c1079, c1080, c1081, c1082, c1083, c1084, c1085, c1086, c1087, c1088, c1089, c1090, c1091, c1092, c1093, c1094, c1095, c1096, c1097, c1098, c1099, c1100, c1101, c1102, c1103, c1104, c1105, c1106, c1107, c1108, c1109, c1110, c1111, c1112, c1113, c1114, c1115, c1116, c1117, c1118, c1119, c1120, c1121, c1122, c1123, c1124, c1125, c1126, c1127, c1128, c1129, c1130, c1131, c1132, c1133, c1134, c1135, c1136, c1137, c1138, c1139, c1140, c1141, c1142, c1143, c1144, c1145, c1146, c1147, c1148, c1149, c1150, c1151, c1152, c1153, c1154, c1155, c1156, c1157, c1158, c1159, c1160, c1161, c1162, c1163, c1164, c1165, c1166, c1167, c1168, c1169, c1170, c1171, c1172, c1173, c1174, c1175, c1176, c1177, c1178, c1179, c1180, c1181, c1182, c1183, c1184, c1185, c1186, c1187, c1188, c1189, c1190, c1191, c1192, c1193, c1194, c1195, c1196, c1197, c1198, c1199, c1200, c1201, c1202, c1203, c1204, c1205, c1206, c1207, c1208, c1209, c1210, c1211, c1212, c1213, c1214, c1215, c1216, c1217, c1218, c1219, c1220, c1221, c1222, c1223, c1224, c1225, c1226, c1227, c1228, c1229, c1230, c1231, c1232, c1233, c1234, c1235, c1236, c1237, c1238, c1239, c1240, c1241, c1242, c1243, c1244, c1245, c1246, c1247, c1248, c1249, c1250, c1251, c1252, c1253, c1254, c1255, c1256, c1257, c1258, c1259, c1260, c1261, c1262, c1263, c1264, c1265, c1266, c1267, c1268, c1269, c1270, c1271, c1272, c1273, c1274, c1275, c1276, c1277, c1278, c1279, c1280, c1281, c1282, c1283, c1284, c1285, c1286, c1287, c1288, c1289, c1290, c1291, c1292, c1293, c1294, c1295, c1296, c1297, c1298, c1299, c1300, c1301, c1302, c1303, c1304, c1305, c1306, c1307, c1308, c1309, c1310, c1311, c1312, c1313, c1314, c1315, c1316, c1317, c1318, c1319, c1320, c1321, c1322, c1323, c1324, c1325, c1326, c1327, c1328, c1329, c1330, c1331, c1332, c1333, c1334, c1335, c1336, c1337, c1338, c1339, c1340, c1341, c1342, c1343, c1344, c1345, c1346, c1347, c1348, c1349, c1350, c1351, c1352, c1353, c1354, c1355, c1356, c1357, c1358, c1359, c1360, c1361, c1362, c1363, c1364, c1365, c1366, c1367, c1368, c1369, c1370, c1371, c1372, c1373, c1374, c1375, c1376, c1377, c1378, c1379, c1380, c1381, c1382, c1383, c1384, c1385, c1386, c1387, c1388, c1389, c1390, c1391, c1392, c1393, c1394, c1395, c1396, c1397, c1398, c1399, c1400, c1401, c1402, c1403, c1404, c1405, c1406, c1407, c1408, c1409, c1410, c1411, c1412, c1413, c1414, c1415, c1416, c1417, c1418, c1419, c1420, c1421, c1422, c1423, c1424, c1425, c1426, c1427, c1428, c1429, c1430, c1431, c1432, c1433, c1434, c1435, c1436, c1437, c1438, c1439, c1440, c1441, c1442, c1443, c1444, c1445, c1446, c1447, c1448, c1449, c1450, c1451, c1452, c1453, c1454, c1455, c1456, c1457, c1458, c1459, c1460, c1461, c1462, c1463, c1464, c1465, c1466, c1467, c1468, c1469, c1470, c1471, c1472, c1473, c1474, c1475, c1476, c1477, c1478, c1479, c1480, c1481, c1482, c1483, c1484, c1485, c1486, c1487, c1488, c1489, c1490, c1491, c1492, c1493, c1494, c1495, c1496, c1497, c1498, c1499, c1500, c1501, c1502, c1503, c1504, c1505, c1506, c1507, c1508, c1509, c1510, c1511, c1512, c1513, c1514, c1515, c1516, c1517, c1518, c1519, c1520, c1521, c1522, c1523, c1524, c1525, c1526, c1527, c1528, c1529, c1530, c1531, c1532, c1533, c1534, c1535, c1536, c1537, c1538, c1539, c1540, c1541, c1542, c1543, c1544, c1545, c1546, c1547, c1548, c1549, c1550, c1551, c1552, c1553, c1554, c1555, c1556, c1557, c1558, c1559, c1560, c1561, c1562, c1563, c1564, c1565, c1566, c1567, c1568, c1569, c1570, c1571, c1572, c1573, c1574, c1575, c1576, c1577, c1578, c1579, c1580, c1581, c1582, c1583, c1584, c1585, c1586, c1587, c1588, c1589, c1590, c1591, c1592, c1593, c1594, c1595, c1596, c1597, c1598, c1599, c1600, c1601, c1602, c1603, c1604, c1605, c1606, c1607, c1608, c1609, c1610, c1611, c1612, c1613, c1614, c1615, c1616, c1617, c1618, c1619, c1620, c1621, c1622, c1623, c1624, c1625, c1626, c1627, c1628, c1629, c1630, c1631, c1632, c1633, c1634, c1635, c1636, c1637, c1638, c1639, c1640, c1641, c1642, c1643, c1644, c1645, c1646, c1647, c1648, c1649, c1650, c1651, c1652, c1653, c1654, c1655, c1656, c1657, c1658, c1659, c1660, c1661, c1662, c1663, c1664, c1665, c1666, c1667, c1668, c1669, c1670, c1671, c1672, c1673, c1674, c1675, c1676, c1677, c1678, c1679, c1680, c1681, c1682, c1683, c1684, c1685, c1686, c1687, c1688, c1689, c1690, c1691, c1692, c1693, c1694, c1695, c1696, c1697, c1698, c1699, c1700, c1701, c1702, c1703, c1704, c1705, c1706, c1707, c1708, c1709, c1710, c1711, c1712, c1713, c1714, c1715, c1716, c1717, c1718, c1719, c1720, c1721, c1722, c1723, c1724, c1725, c1726, c1727, c1728, c1729, c1730, c1731, c1732, c1733, c1734, c1735, c1736, c1737, c1738, c1739, c1740, c1741, c1742, c1743, c1744, c1745, c1746, c1747, c1748, c1749, c1750, c1751, c1752, c1753, c1754, c1755, c1756, c1757, c1758, c1759, c1760, c1761, c1762, c1763, c1764, c1765, c1766, c1767, c1768, c1769, c1770, c1771, c1772, c1773, c1774, c1775, c1776, c1777, c1778, c1779, c1780, c1781, c1782, c1783, c1784, c1785, c1786, c1787, c1788, c1789, c1790, c1791, c1792, c1793, c1794, c1795, c1796, c1797, c1798, c1799, c1800, c1801, c1802, c1803, c1804, c1805, c1806, c1807, c1808, c1809, c1810, c1811, c1812, c1813, c1814, c1815, c1816, c1817, c1818, c1819, c1820, c1821, c1822, c1823, c1824, c1825, c1826, c1827, c1828, c1829, c1830, c1831, c1832, c1833, c1834, c1835, c1836, c1837, c1838, c1839, c1840, c1841, c1842, c1843, c1844, c1845, c1846, c1847, c1848, c1849, c1850, c1851, c1852, c1853, c1854, c1855, c1856, c1857, c1858, c1859, c1860, c1861, c1862, c1863, c1864, c1865, c1866, c1867, c1868, c1869, c1870, c1871, c1872, c1873, c1874, c1875, c1876, c1877, c1878, c1879, c1880, c1881, c1882, c1883, c1884, c1885, c1886, c1887, c1888, c1889, c1890, c1891, c1892, c1893, c1894, c1895, c1896, c1897, c1898, c1899, c1900, c1901, c1902, c1903, c1904, c1905, c1906, c1907, c1908, c1909, c1910, c1911, c1912, c1913, c1914, c1915, c1916, c1917, c1918, c1919, c1920, c1921, c1922, c1923, c1924, c1925, c1926, c1927, c1928, c1929, c1930, c1931, c1932, c1933, c1934, c1935, c1936, c1937, c1938, c1939, c1940, c1941, c1942, c1943, c1944, c1945, c1946, c1947, c1948, c1949, c1950, c1951, c1952, c1953, c1954, c1955, c1956, c1957, c1958, c1959, c1960, c1961, c1962, c1963, c1964, c1965, c1966, c1967, c1968, c1969, c1970, c1971, c1972, c1973, c1974, c1975, c1976, c1977, c1978, c1979, c1980, c1981, c1982, c1983, c1984, c1985, c1986, c1987, c1988, c1989, c1990, c1991, c1992, c1993, c1994, c1995, c1996, c1997, c1998, c1999, c2000)
;CREATE TABLE t10(c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106, c107, c108, c109, c110, c111, c112, c113, c114, c115, c116, c117, c118, c119, c120, c121, c122, c123, c124, c125, c126, c127, c128, c129, c130, c131, c132, c133, c134, c135, c136, c137, c138, c139, c140, c141, c142, c143, c144, c145, c146, c147, c148, c149, c150, c151, c152, c153, c154, c155, c156, c157, c158, c159, c160, c161, c162, c163, c164, c165, c166, c167, c168, c169, c170, c171, c172, c173, c174, c175, c176, c177, c178, c179, c180, c181, c182, c183, c184, c185, c186, c187, c188, c189, c190, c191, c192, c193, c194, c195, c196, c197, c198, c199, c200, c201, c202, c203, c204, c205, c206, c207, c208, c209, c210, c211, c212, c213, c214, c215, c216, c217, c218, c219, c220, c221, c222, c223, c224, c225, c226, c227, c228, c229, c230, c231, c232, c233, c234, c235, c236, c237, c238, c239, c240, c241, c242, c243, c244, c245, c246, c247, c248, c249, c250, c251, c252, c253, c254, c255, c256, c257, c258, c259, c260, c261, c262, c263, c264, c265, c266, c267, c268, c269, c270, c271, c272, c273, c274, c275, c276, c277, c278, c279, c280, c281, c282, c283, c284, c285, c286, c287, c288, c289, c290, c291, c292, c293, c294, c295, c296, c297, c298, c299, c300, c301, c302, c303, c304, c305, c306, c307, c308, c309, c310, c311, c312, c313, c314, c315, c316, c317, c318, c319, c320, c321, c322, c323, c324, c325, c326, c327, c328, c329, c330, c331, c332, c333, c334, c335, c336, c337, c338, c339, c340, c341, c342, c343, c344, c345, c346, c347, c348, c349, c350, c351, c352, c353, c354, c355, c356, c357, c358, c359, c360, c361, c362, c363, c364, c365, c366, c367, c368, c369, c370, c371, c372, c373, c374, c375, c376, c377, c378, c379, c380, c381, c382, c383, c384, c385, c386, c387, c388, c389, c390, c391, c392, c393, c394, c395, c396, c397, c398, c399, c400, c401, c402, c403, c404, c405, c406, c407, c408, c409, c410, c411, c412, c413, c414, c415, c416, c417, c418, c419, c420, c421, c422, c423, c424, c425, c426, c427, c428, c429, c430, c431, c432, c433, c434, c435, c436, c437, c438, c439, c440, c441, c442, c443, c444, c445, c446, c447, c448, c449, c450, c451, c452, c453, c454, c455, c456, c457, c458, c459, c460, c461, c462, c463, c464, c465, c466, c467, c468, c469, c470, c471, c472, c473, c474, c475, c476, c477, c478, c479, c480, c481, c482, c483, c484, c485, c486, c487, c488, c489, c490, c491, c492, c493, c494, c495, c496, c497, c498, c499);
;
;CREATE TABLE t11(c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106, c107, c108, c109, c110, c111, c112, c113, c114, c115, c116, c117, c118, c119, c120, c121, c122, c123, c124, c125, c126, c127, c128, c129, c130, c131, c132, c133, c134, c135, c136, c137, c138, c139, c140, c141, c142, c143, c144, c145, c146, c147, c148, c149, c150, c151, c152, c153, c154, c155, c156, c157, c158, c159, c160, c161, c162, c163, c164, c165, c166, c167, c168, c169, c170, c171, c172, c173, c174, c175, c176, c177, c178, c179, c180, c181, c182, c183, c184, c185, c186, c187, c188, c189, c190, c191, c192, c193, c194, c195, c196, c197, c198, c199, c200, c201, c202, c203, c204, c205, c206, c207, c208, c209, c210, c211, c212, c213, c214, c215, c216, c217, c218, c219, c220, c221, c222, c223, c224, c225, c226, c227, c228, c229, c230, c231, c232, c233, c234, c235, c236, c237, c238, c239, c240, c241, c242, c243, c244, c245, c246, c247, c248, c249, c250, c251, c252, c253, c254, c255, c256, c257, c258, c259, c260, c261, c262, c263, c264, c265, c266, c267, c268, c269, c270, c271, c272, c273, c274, c275, c276, c277, c278, c279, c280, c281, c282, c283, c284, c285, c286, c287, c288, c289, c290, c291, c292, c293, c294, c295, c296, c297, c298, c299, c300, c301, c302, c303, c304, c305, c306, c307, c308, c309, c310, c311, c312, c313, c314, c315, c316, c317, c318, c319, c320, c321, c322, c323, c324, c325, c326, c327, c328, c329, c330, c331, c332, c333, c334, c335, c336, c337, c338, c339, c340, c341, c342, c343, c344, c345, c346, c347, c348, c349, c350, c351, c352, c353, c354, c355, c356, c357, c358, c359, c360, c361, c362, c363, c364, c365, c366, c367, c368, c369, c370, c371, c372, c373, c374, c375, c376, c377, c378, c379, c380, c381, c382, c383, c384, c385, c386, c387, c388, c389, c390, c391, c392, c393, c394, c395, c396, c397, c398, c399, c400, c401, c402, c403, c404, c405, c406, c407, c408, c409, c410, c411, c412, c413, c414, c415, c416, c417, c418, c419, c420, c421, c422, c423, c424, c425, c426, c427, c428, c429, c430, c431, c432, c433, c434, c435, c436, c437, c438, c439, c440, c441, c442, c443, c444, c445, c446, c447, c448, c449, c450, c451, c452, c453, c454, c455, c456, c457, c458, c459, c460, c461, c462, c463, c464, c465, c466, c467, c468, c469, c470, c471, c472, c473, c474, c475, c476, c477, c478, c479, c480, c481, c482, c483, c484, c485, c486, c487, c488, c489, c490, c491, c492, c493, c494, c495, c496, c497, c498, c499, c500)
;CREATE TABLE t11(c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106, c107, c108, c109, c110, c111, c112, c113, c114, c115, c116, c117, c118, c119, c120, c121, c122, c123, c124, c125, c126, c127, c128, c129, c130, c131, c132, c133, c134, c135, c136, c137, c138, c139, c140, c141, c142, c143, c144, c145, c146, c147, c148, c149, c150, c151, c152, c153, c154, c155, c156, c157, c158, c159, c160, c161, c162, c163, c164, c165, c166, c167, c168, c169, c170, c171, c172, c173, c174, c175, c176, c177, c178, c179, c180, c181, c182, c183, c184, c185, c186, c187, c188, c189, c190, c191, c192, c193, c194, c195, c196, c197, c198, c199, c200, c201, c202, c203, c204, c205, c206, c207, c208, c209, c210, c211, c212, c213, c214, c215, c216, c217, c218, c219, c220, c221, c222, c223, c224, c225, c226, c227, c228, c229, c230, c231, c232, c233, c234, c235, c236, c237, c238, c239, c240, c241, c242, c243, c244, c245, c246, c247, c248, c249, c250, c251, c252, c253, c254, c255, c256, c257, c258, c259, c260, c261, c262, c263, c264, c265, c266, c267, c268, c269, c270, c271, c272, c273, c274, c275, c276, c277, c278, c279, c280, c281, c282, c283, c284, c285, c286, c287, c288, c289, c290, c291, c292, c293, c294, c295, c296, c297, c298, c299, c300, c301, c302, c303, c304, c305, c306, c307, c308, c309, c310, c311, c312, c313, c314, c315, c316, c317, c318, c319, c320, c321, c322, c323, c324, c325, c326, c327, c328, c329, c330, c331, c332, c333, c334, c335, c336, c337, c338, c339, c340, c341, c342, c343, c344, c345, c346, c347, c348, c349, c350, c351, c352, c353, c354, c355, c356, c357, c358, c359, c360, c361, c362, c363, c364, c365, c366, c367, c368, c369, c370, c371, c372, c373, c374, c375, c376, c377, c378, c379, c380, c381, c382, c383, c384, c385, c386, c387, c388, c389, c390, c391, c392, c393, c394, c395, c396, c397, c398, c399, c400, c401, c402, c403, c404, c405, c406, c407, c408, c409, c410, c411, c412, c413, c414, c415, c416, c417, c418, c419, c420, c421, c422, c423, c424, c425, c426, c427, c428, c429, c430, c431, c432, c433, c434, c435, c436, c437, c438, c439, c440, c441, c442, c443, c444, c445, c446, c447, c448, c449, c450, c451, c452, c453, c454, c455, c456, c457, c458, c459, c460, c461, c462, c463, c464, c465, c466, c467, c468, c469, c470, c471, c472, c473, c474, c475, c476, c477, c478, c479, c480, c481, c482, c483, c484, c485, c486, c487, c488, c489, c490, c491, c492, c493, c494, c495, c496, c497, c498, c499, c500, c501, c502, c503, c504, c505, c506, c507, c508, c509, c510, c511, c512, c513, c514, c515, c516, c517, c518, c519, c520, c521, c522, c523, c524, c525, c526, c527, c528, c529, c530, c531, c532, c533, c534, c535, c536, c537, c538, c539, c540, c541, c542, c543, c544, c545, c546, c547, c548, c549, c550, c551, c552, c553, c554, c555, c556, c557, c558, c559, c560, c561, c562, c563, c564, c565, c566, c567, c568, c569, c570, c571, c572, c573, c574, c575, c576, c577, c578, c579, c580, c581, c582, c583, c584, c585, c586, c587, c588, c589, c590, c591, c592, c593, c594, c595, c596, c597, c598, c599, c600, c601, c602, c603, c604, c605, c606, c607, c608, c609, c610, c611, c612, c613, c614, c615, c616, c617, c618, c619, c620, c621, c622, c623, c624, c625, c626, c627, c628, c629, c630, c631, c632, c633, c634, c635, c636, c637, c638, c639, c640, c641, c642, c643, c644, c645, c646, c647, c648, c649, c650, c651, c652, c653, c654, c655, c656, c657, c658, c659, c660, c661, c662, c663, c664, c665, c666, c667, c668, c669, c670, c671, c672, c673, c674, c675, c676, c677, c678, c679, c680, c681, c682, c683, c684, c685, c686, c687, c688, c689, c690, c691, c692, c693, c694, c695, c696, c697, c698, c699, c700, c701, c702, c703, c704, c705, c706, c707, c708, c709, c710, c711, c712, c713, c714, c715, c716, c717, c718, c719, c720, c721, c722, c723, c724, c725, c726, c727, c728, c729, c730, c731, c732, c733, c734, c735, c736, c737, c738, c739, c740, c741, c742, c743, c744, c745, c746, c747, c748, c749, c750, c751, c752, c753, c754, c755, c756, c757, c758, c759, c760, c761, c762, c763, c764, c765, c766, c767, c768, c769, c770, c771, c772, c773, c774, c775, c776, c777, c778, c779, c780, c781, c782, c783, c784, c785, c786, c787, c788, c789, c790, c791, c792, c793, c794, c795, c796, c797, c798, c799, c800, c801, c802, c803, c804, c805, c806, c807, c808, c809, c810, c811, c812, c813, c814, c815, c816, c817, c818, c819, c820, c821, c822, c823, c824, c825, c826, c827, c828, c829, c830, c831, c832, c833, c834, c835, c836, c837, c838, c839, c840, c841, c842, c843, c844, c845, c846, c847, c848, c849, c850, c851, c852, c853, c854, c855, c856, c857, c858, c859, c860, c861, c862, c863, c864, c865, c866, c867, c868, c869, c870, c871, c872, c873, c874, c875, c876, c877, c878, c879, c880, c881, c882, c883, c884, c885, c886, c887, c888, c889, c890, c891, c892, c893, c894, c895, c896, c897, c898, c899, c900, c901, c902, c903, c904, c905, c906, c907, c908, c909, c910, c911, c912, c913, c914, c915, c916, c917, c918, c919, c920, c921, c922, c923, c924, c925, c926, c927, c928, c929, c930, c931, c932, c933, c934, c935, c936, c937, c938, c939, c940, c941, c942, c943, c944, c945, c946, c947, c948, c949, c950, c951, c952, c953, c954, c955, c956, c957, c958, c959, c960, c961, c962, c963, c964, c965, c966, c967, c968, c969, c970, c971, c972, c973, c974, c975, c976, c977, c978, c979, c980, c981, c982, c983, c984, c985, c986, c987, c988, c989, c990, c991, c992, c993, c994, c995, c996, c997, c998, c999, c1000, c1001, c1002, c1003, c1004, c1005, c1006, c1007, c1008, c1009, c1010, c1011, c1012, c1013, c1014, c1015, c1016, c1017, c1018, c1019, c1020, c1021, c1022, c1023, c1024, c1025, c1026, c1027, c1028, c1029, c1030, c1031, c1032, c1033, c1034, c1035, c1036, c1037, c1038, c1039, c1040, c1041, c1042, c1043, c1044, c1045, c1046, c1047, c1048, c1049, c1050, c1051, c1052, c1053, c1054, c1055, c1056, c1057, c1058, c1059, c1060, c1061, c1062, c1063, c1064, c1065, c1066, c1067, c1068, c1069, c1070, c1071, c1072, c1073, c1074, c1075, c1076, c1077, c1078, c1079, c1080, c1081, c1082, c1083, c1084, c1085, c1086, c1087, c1088, c1089, c1090, c1091, c1092, c1093, c1094, c1095, c1096, c1097, c1098, c1099, c1100, c1101, c1102, c1103, c1104, c1105, c1106, c1107, c1108, c1109, c1110, c1111, c1112, c1113, c1114, c1115, c1116, c1117, c1118, c1119, c1120, c1121, c1122, c1123, c1124, c1125, c1126, c1127, c1128, c1129, c1130, c1131, c1132, c1133, c1134, c1135, c1136, c1137, c1138, c1139, c1140, c1141, c1142, c1143, c1144, c1145, c1146, c1147, c1148, c1149, c1150, c1151, c1152, c1153, c1154, c1155, c1156, c1157, c1158, c1159, c1160, c1161, c1162, c1163, c1164, c1165, c1166, c1167, c1168, c1169, c1170, c1171, c1172, c1173, c1174, c1175, c1176, c1177, c1178, c1179, c1180, c1181, c1182, c1183, c1184, c1185, c1186, c1187, c1188, c1189, c1190, c1191, c1192, c1193, c1194, c1195, c1196, c1197, c1198, c1199, c1200, c1201, c1202, c1203, c1204, c1205, c1206, c1207, c1208, c1209, c1210, c1211, c1212, c1213, c1214, c1215, c1216, c1217, c1218, c1219, c1220, c1221, c1222, c1223, c1224, c1225, c1226, c1227, c1228, c1229, c1230, c1231, c1232, c1233, c1234, c1235, c1236, c1237, c1238, c1239, c1240, c1241, c1242, c1243, c1244, c1245, c1246, c1247, c1248, c1249, c1250, c1251, c1252, c1253, c1254, c1255, c1256, c1257, c1258, c1259, c1260, c1261, c1262, c1263, c1264, c1265, c1266, c1267, c1268, c1269, c1270, c1271, c1272, c1273, c1274, c1275, c1276, c1277, c1278, c1279, c1280, c1281, c1282, c1283, c1284, c1285, c1286, c1287, c1288, c1289, c1290, c1291, c1292, c1293, c1294, c1295, c1296, c1297, c1298, c1299, c1300, c1301, c1302, c1303, c1304, c1305, c1306, c1307, c1308, c1309, c1310, c1311, c1312, c1313, c1314, c1315, c1316, c1317, c1318, c1319, c1320, c1321, c1322, c1323, c1324, c1325, c1326, c1327, c1328, c1329, c1330, c1331, c1332, c1333, c1334, c1335, c1336, c1337, c1338, c1339, c1340, c1341, c1342, c1343, c1344, c1345, c1346, c1347, c1348, c1349, c1350, c1351, c1352, c1353, c1354, c1355, c1356, c1357, c1358, c1359, c1360, c1361, c1362, c1363, c1364, c1365, c1366, c1367, c1368, c1369, c1370, c1371, c1372, c1373, c1374, c1375, c1376, c1377, c1378, c1379, c1380, c1381, c1382, c1383, c1384, c1385, c1386, c1387, c1388, c1389, c1390, c1391, c1392, c1393, c1394, c1395, c1396, c1397, c1398, c1399, c1400, c1401, c1402, c1403, c1404, c1405, c1406, c1407, c1408, c1409, c1410, c1411, c1412, c1413, c1414, c1415, c1416, c1417, c1418, c1419, c1420, c1421, c1422, c1423, c1424, c1425, c1426, c1427, c1428, c1429, c1430, c1431, c1432, c1433, c1434, c1435, c1436, c1437, c1438, c1439, c1440, c1441, c1442, c1443, c1444, c1445, c1446, c1447, c1448, c1449, c1450, c1451, c1452, c1453, c1454, c1455, c1456, c1457, c1458, c1459, c1460, c1461, c1462, c1463, c1464, c1465, c1466, c1467, c1468, c1469, c1470, c1471, c1472, c1473, c1474, c1475, c1476, c1477, c1478, c1479, c1480, c1481, c1482, c1483, c1484, c1485, c1486, c1487, c1488, c1489, c1490, c1491, c1492, c1493, c1494, c1495, c1496, c1497, c1498, c1499, c1500, c1501, c1502, c1503, c1504, c1505, c1506, c1507, c1508, c1509, c1510, c1511, c1512, c1513, c1514, c1515, c1516, c1517, c1518, c1519, c1520, c1521, c1522, c1523, c1524, c1525, c1526, c1527, c1528, c1529, c1530, c1531, c1532, c1533, c1534, c1535, c1536, c1537, c1538, c1539, c1540, c1541, c1542, c1543, c1544, c1545, c1546, c1547, c1548, c1549, c1550, c1551, c1552, c1553, c1554, c1555, c1556, c1557, c1558, c1559, c1560, c1561, c1562, c1563, c1564, c1565, c1566, c1567, c1568, c1569, c1570, c1571, c1572, c1573, c1574, c1575, c1576, c1577, c1578, c1579, c1580, c1581, c1582, c1583, c1584, c1585, c1586, c1587, c1588, c1589, c1590, c1591, c1592, c1593, c1594, c1595, c1596, c1597, c1598, c1599, c1600, c1601, c1602, c1603, c1604, c1605, c1606, c1607, c1608, c1609, c1610, c1611, c1612, c1613, c1614, c1615, c1616, c1617, c1618, c1619, c1620, c1621, c1622, c1623, c1624, c1625, c1626, c1627, c1628, c1629, c1630, c1631, c1632, c1633, c1634, c1635, c1636, c1637, c1638, c1639, c1640, c1641, c1642, c1643, c1644, c1645, c1646, c1647, c1648, c1649, c1650, c1651, c1652, c1653, c1654, c1655, c1656, c1657, c1658, c1659, c1660, c1661, c1662, c1663, c1664, c1665, c1666, c1667, c1668, c1669, c1670, c1671, c1672, c1673, c1674, c1675, c1676, c1677, c1678, c1679, c1680, c1681, c1682, c1683, c1684, c1685, c1686, c1687, c1688, c1689, c1690, c1691, c1692, c1693, c1694, c1695, c1696, c1697, c1698, c1699, c1700, c1701, c1702, c1703, c1704, c1705, c1706, c1707, c1708, c1709, c1710, c1711, c1712, c1713, c1714, c1715, c1716, c1717, c1718, c1719, c1720, c1721, c1722, c1723, c1724, c1725, c1726, c1727, c1728, c1729, c1730, c1731, c1732, c1733, c1734, c1735, c1736, c1737, c1738, c1739, c1740, c1741, c1742, c1743, c1744, c1745, c1746, c1747, c1748, c1749, c1750, c1751, c1752, c1753, c1754, c1755, c1756, c1757, c1758, c1759, c1760, c1761, c1762, c1763, c1764, c1765, c1766, c1767, c1768, c1769, c1770, c1771, c1772, c1773, c1774, c1775, c1776, c1777, c1778, c1779, c1780, c1781, c1782, c1783, c1784, c1785, c1786, c1787, c1788, c1789, c1790, c1791, c1792, c1793, c1794, c1795, c1796, c1797, c1798, c1799, c1800, c1801, c1802, c1803, c1804, c1805, c1806, c1807, c1808, c1809, c1810, c1811, c1812, c1813, c1814, c1815, c1816, c1817, c1818, c1819, c1820, c1821, c1822, c1823, c1824, c1825, c1826, c1827, c1828, c1829, c1830, c1831, c1832, c1833, c1834, c1835, c1836, c1837, c1838, c1839, c1840, c1841, c1842, c1843, c1844, c1845, c1846, c1847, c1848, c1849, c1850, c1851, c1852, c1853, c1854, c1855, c1856, c1857, c1858, c1859, c1860, c1861, c1862, c1863, c1864, c1865, c1866, c1867, c1868, c1869, c1870, c1871, c1872, c1873, c1874, c1875, c1876, c1877, c1878, c1879, c1880, c1881, c1882, c1883, c1884, c1885, c1886, c1887, c1888, c1889, c1890, c1891, c1892, c1893, c1894, c1895, c1896, c1897, c1898, c1899, c1900, c1901, c1902, c1903, c1904, c1905, c1906, c1907, c1908, c1909, c1910, c1911, c1912, c1913, c1914, c1915, c1916, c1917, c1918, c1919, c1920, c1921, c1922, c1923, c1924, c1925, c1926, c1927, c1928, c1929, c1930, c1931, c1932, c1933, c1934, c1935, c1936, c1937, c1938, c1939, c1940, c1941, c1942, c1943, c1944, c1945, c1946, c1947, c1948, c1949, c1950, c1951, c1952, c1953, c1954, c1955, c1956, c1957, c1958, c1959, c1960, c1961, c1962, c1963, c1964, c1965, c1966, c1967, c1968, c1969, c1970, c1971, c1972, c1973, c1974, c1975, c1976, c1977, c1978, c1979, c1980, c1981, c1982, c1983, c1984, c1985, c1986, c1987, c1988, c1989, c1990, c1991, c1992, c1993, c1994, c1995, c1996, c1997, c1998, c1999, c2000)
;CREATE TABLE t12(a, b, c);
;INSERT INTO t12 VALUES(randomblob(30000),randomblob(30000),randomblob(30000));
;
;INSERT INTO t12 VALUES(randomblob(30001),randomblob(30000),randomblob(30000));
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;DROP table "t5"
;DROP table "t6"
;DROP table "t7"
;DROP table "t8"
;DROP table "t9"
;DROP table "t10"
;DROP table "t12"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a, b, c)
;CREATE TABLE t2(a PRIMARY KEY, b, c)
;CREATE TABLE t3(a, b, c, PRIMARY KEY(a))
;CREATE TABLE t4(a, b, c, PRIMARY KEY(c,b,a))
;CREATE TABLE t5(a PRIMARY KEY, b PRIMARY KEY,
;CREATE TABLE t5(a, b PRIMARY KEY, c, PRIMARY KEY(a))
;CREATE TABLE t5(a INTEGER PRIMARY KEY, b PRIMARY KEY,
;CREATE TABLE t5(a INTEGER PRIMARY KEY, b, c, PRIMARY KEY(b, c))
;CREATE TABLE t5(a PRIMARY KEY, b, c, PRIMARY KEY(a))
;CREATE TABLE t5(a INTEGER PRIMARY KEY, b, c, PRIMARY KEY(a))
;CREATE TABLE t6(a, b);
;--ok

;CREATE TABLE t7(a, b) WITHOUT ROWID;
;DROP TABLE t5 
;CREATE TABLE t5(a, b INTEGER PRIMARY KEY, c)
;pragma table_info(t5)
;DROP TABLE t5 
;CREATE TABLE t5(a PRIMARY KEY, b, c)
;CREATE TABLE t5(a, b, c, PRIMARY KEY(a))
;CREATE TABLE t5(a, b, c, PRIMARY KEY(c,b,a))
;CREATE TABLE t5(a, b INTEGER PRIMARY KEY, c)
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;DROP table "t6"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x PRIMARY KEY, y);
;INSERT INTO t1 VALUES(0,          'zero');
;INSERT INTO t1 VALUES(45.5,       'one');
;INSERT INTO t1 VALUES('brambles', 'two');
;INSERT INTO t1 VALUES(X'ABCDEF',  'three');
;CREATE TABLE t2(x, y, PRIMARY KEY(x, y));
;INSERT INTO t2 VALUES(0,          'zero');
;INSERT INTO t2 VALUES(45.5,       'one');
;INSERT INTO t2 VALUES('brambles', 'two');
;INSERT INTO t2 VALUES(X'ABCDEF',  'three');
;
;INSERT INTO t1 VALUES(0, 0)
;INSERT INTO t1 VALUES(45.5, 'abc')
;INSERT INTO t1 VALUES(0.0, 'abc')
;INSERT INTO t1 VALUES('brambles', 'abc')
;INSERT INTO t1 VALUES(X'ABCDEF', 'abc')
;INSERT INTO t2 VALUES(0, 'zero')
;INSERT INTO t2 VALUES(45.5, 'one')
;INSERT INTO t2 VALUES(0.0, 'zero')
;INSERT INTO t2 VALUES('brambles', 'two')
;INSERT INTO t2 VALUES(X'ABCDEF', 'three')
;INSERT INTO t1 VALUES(-1, 0)
;INSERT INTO t1 VALUES(45.2, 'abc')
;INSERT INTO t1 VALUES(0.01, 'abc')
;INSERT INTO t1 VALUES('bramble', 'abc')
;INSERT INTO t1 VALUES(X'ABCDEE', 'abc')
;INSERT INTO t2 VALUES(0, 0)
;INSERT INTO t2 VALUES(45.5, 'abc')
;INSERT INTO t2 VALUES(0.0, 'abc')
;INSERT INTO t2 VALUES('brambles', 'abc')
;INSERT INTO t2 VALUES(X'ABCDEF', 'abc')
;UPDATE t1 SET x=0           WHERE y='two'
;UPDATE t1 SET x='brambles'  WHERE y='three'
;UPDATE t1 SET x=45.5        WHERE y='zero'
;UPDATE t1 SET x=X'ABCDEF'   WHERE y='one'
;UPDATE t1 SET x=0.0         WHERE y='three'
;UPDATE t2 SET x=0, y='zero' WHERE y='two'
;UPDATE t2 SET x='brambles', y='two' WHERE y='three'
;UPDATE t2 SET x=45.5, y='one' WHERE y='zero'
;UPDATE t2 SET x=X'ABCDEF', y='three' WHERE y='one'
;UPDATE t2 SET x=0.0, y='zero'        WHERE y='three'
;INSERT INTO t1 VALUES(NULL, 0)
;INSERT INTO t2 VALUES(NULL, 'zero')
;INSERT INTO t2 VALUES(NULL, 'one')
;INSERT INTO t2 VALUES(NULL, 'two')
;INSERT INTO t2 VALUES(NULL, 'three')
;INSERT INTO t2 VALUES(0, NULL)
;INSERT INTO t2 VALUES(45.5, NULL)
;INSERT INTO t2 VALUES(0.0, NULL)
;INSERT INTO t2 VALUES('brambles', NULL)
;INSERT INTO t2 VALUES(X'ABCDEF', NULL)
;INSERT INTO t2 VALUES(NULL, NULL)
;SELECT count(*) FROM t1 WHERE x IS NULL
;SELECT count(*) FROM t2 WHERE x IS NULL
;SELECT count(*) FROM t2 WHERE y IS NULL
;SELECT count(*) FROM t2 WHERE x IS NULL AND y IS NULL
;CREATE TABLE t3(s, u INTEGER PRIMARY KEY, v);
;INSERT INTO t3 VALUES(1, NULL, 2);
;INSERT INTO t3 VALUES('x', NULL, 'y');
;SELECT u FROM t3;
;
;INSERT INTO t3 VALUES(2, 5, 3);
;UPDATE t3 SET u = NULL WHERE s = 2;
;CREATE TABLE t4(s, u INT PRIMARY KEY, v) WITHOUT ROWID;
;INSERT INTO t4 VALUES(1, NULL, 2);
;CREATE TABLE t5(s, u INT PRIMARY KEY NOT NULL, v);
;INSERT INTO t5 VALUES(1, NULL, 2);
;CREATE TABLE t6(s INT, u INT PRIMARY KEY, v INT) STRICT;
;INSERT INTO t6 VALUES(1, NULL, 2);
;CREATE TABLE t7(s INT, u INT PRIMARY KEY NOT NULL, v INT) STRICT;
;INSERT INTO t7 VALUES(1, NULL, 2);
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;DROP table "t5"
;DROP table "t6"
;DROP table "t7"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a UNIQUE, b UNIQUE)
;CREATE TABLE t2(a UNIQUE, b, c, UNIQUE(c, b))
;CREATE TABLE t3(a, b, c, UNIQUE(a), UNIQUE(b), UNIQUE(c))
;CREATE TABLE t4(a, b, c, UNIQUE(a, b, c))
;INSERT INTO t1 VALUES(1, 2);
;INSERT INTO t1 VALUES(4.3, 5.5);
;INSERT INTO t1 VALUES('reveal', 'variableness');
;INSERT INTO t1 VALUES(X'123456', X'654321');
;INSERT INTO t4 VALUES('xyx', 1, 1);
;INSERT INTO t4 VALUES('xyx', 2, 1);
;INSERT INTO t4 VALUES('uvw', 1, 1);
;
;INSERT INTO t1 VALUES(1, 'one')
;INSERT INTO t1 VALUES(4.3, 'two')
;INSERT INTO t1 VALUES('reveal', 'three')
;INSERT INTO t1 VALUES(X'123456', 'four')
;UPDATE t1 SET a = 1 WHERE rowid=2
;UPDATE t1 SET a = 4.3 WHERE rowid=3
;UPDATE t1 SET a = 'reveal' WHERE rowid=4
;UPDATE t1 SET a = X'123456' WHERE rowid=1
;INSERT INTO t4 VALUES('xyx', 1, 1)
;INSERT INTO t4 VALUES('xyx', 2, 1)
;INSERT INTO t4 VALUES('uvw', 1, 1)
;UPDATE t4 SET a='xyx' WHERE rowid=3
;UPDATE t4 SET b=1 WHERE rowid=2
;UPDATE t4 SET a=0, b=0, c=0
;INSERT INTO t1 VALUES(NULL, NULL)
;UPDATE t1 SET a = NULL
;UPDATE t1 SET b = NULL
;INSERT INTO t4 VALUES(NULL, NULL, NULL)
;UPDATE t4 SET a = NULL
;UPDATE t4 SET b = NULL
;UPDATE t4 SET c = NULL
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a TEXT PRIMARY KEY, b)
;SELECT count(*) FROM sqlite_master WHERE type='index'

;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a INTEGER PRIMARY KEY, b)
;SELECT count(*) FROM sqlite_master WHERE type='index'

;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a TEXT UNIQUE, b)
;SELECT count(*) FROM sqlite_master WHERE type='index'

;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a PRIMARY KEY, b TEXT UNIQUE)
;SELECT count(*) FROM sqlite_master WHERE type='index'

;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a PRIMARY KEY, b, c, UNIQUE(c, b))
;SELECT count(*) FROM sqlite_master WHERE type='index'

;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a, b PRIMARY KEY);
;CREATE TABLE t2(a, b, c, UNIQUE(b, c));
;
;EXPLAIN QUERY PLAN SELECT * FROM t1 WHERE b = 5
;EXPLAIN QUERY PLAN SELECT * FROM t2 ORDER BY b, c
;EXPLAIN QUERY PLAN SELECT * FROM t2 WHERE b=10 AND c>10
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE x1(a TEXT, b INTEGER CHECK( b>0 ));
;CREATE TABLE t1(a TEXT, b INTEGER, CHECK( b>0 ));
;INSERT INTO x1 VALUES('x', 'xx');
;INSERT INTO x1 VALUES('y', 'yy');
;INSERT INTO t1 SELECT * FROM x1;
;CREATE TABLE x2(a CHECK( a||b ), b);
;CREATE TABLE t2(a, b, CHECK( a||b ));
;INSERT INTO x2 VALUES(1, 'xx');
;INSERT INTO x2 VALUES(1, 'yy');
;INSERT INTO t2 SELECT * FROM x2;
;
;INSERT INTO x1 VALUES('one', 0)
;INSERT INTO t1 VALUES('one', -4.0)
;INSERT INTO x2 VALUES('abc', 1)
;INSERT INTO t2 VALUES('abc', 1)
;INSERT INTO x2 VALUES(0, 'abc')
;INSERT INTO t2 VALUES(0, 'abc')
;UPDATE t1 SET b=-1 WHERE rowid=1
;UPDATE x1 SET b=-1 WHERE rowid=1
;UPDATE x2 SET a='' WHERE rowid=1
;UPDATE t2 SET a='' WHERE rowid=1
;INSERT INTO x1 VALUES('one', NULL)
;INSERT INTO t1 VALUES('one', NULL)
;INSERT INTO x1 VALUES('one', 2)
;INSERT INTO t1 VALUES('one', 2)
;INSERT INTO x2 VALUES(1, 'abc')
;INSERT INTO t2 VALUES(1, 'abc')
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "x1"
;DROP table "t1"
;DROP table "x2"
;DROP table "t2"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(a NOT NULL, b)
;CREATE TABLE t2(a PRIMARY KEY NOT NULL, b)
;CREATE TABLE t3(a NOT NULL, b NOT NULL, c NOT NULL UNIQUE)
;CREATE TABLE t4(a, b, NOT
;CREATE TABLE t4(a PRIMARY KEY, b, NOT
;CREATE TABLE t4(a, b, c UNIQUE, NOT
;INSERT INTO t1 VALUES('x', 'y');
;INSERT INTO t1 VALUES('z', NULL);
;INSERT INTO t2 VALUES('x', 'y');
;INSERT INTO t2 VALUES('z', NULL);
;INSERT INTO t3 VALUES('x', 'y', 'z');
;INSERT INTO t3 VALUES(1, 2, 3);
;
;INSERT INTO t1 VALUES(NULL, 'a')
;INSERT INTO t2 VALUES(NULL, 'b')
;INSERT INTO t3 VALUES('c', 'd', NULL)
;INSERT INTO t3 VALUES('e', NULL, 'f')
;INSERT INTO t3 VALUES(NULL, 'g', 'h')
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1_ab(a PRIMARY KEY ON CONFLICT ABORT, b);
;CREATE TABLE t1_ro(a PRIMARY KEY ON CONFLICT ROLLBACK, b);
;CREATE TABLE t1_ig(a PRIMARY KEY ON CONFLICT IGNORE, b);
;CREATE TABLE t1_fa(a PRIMARY KEY ON CONFLICT FAIL, b);
;CREATE TABLE t1_re(a PRIMARY KEY ON CONFLICT REPLACE, b);
;CREATE TABLE t1_xx(a PRIMARY KEY, b);
;INSERT INTO t1_ab VALUES(1, 'one');
;INSERT INTO t1_ab VALUES(2, 'two');
;INSERT INTO t1_ro SELECT * FROM t1_ab;
;INSERT INTO t1_ig SELECT * FROM t1_ab;
;INSERT INTO t1_fa SELECT * FROM t1_ab;
;INSERT INTO t1_re SELECT * FROM t1_ab;
;INSERT INTO t1_xx SELECT * FROM t1_ab;
;CREATE TABLE t2_ab(a, b NOT NULL ON CONFLICT ABORT);
;CREATE TABLE t2_ro(a, b NOT NULL ON CONFLICT ROLLBACK);
;CREATE TABLE t2_ig(a, b NOT NULL ON CONFLICT IGNORE);
;CREATE TABLE t2_fa(a, b NOT NULL ON CONFLICT FAIL);
;CREATE TABLE t2_re(a, b NOT NULL ON CONFLICT REPLACE);
;CREATE TABLE t2_xx(a, b NOT NULL);
;INSERT INTO t2_ab VALUES(1, 'one');
;INSERT INTO t2_ab VALUES(2, 'two');
;INSERT INTO t2_ro SELECT * FROM t2_ab;
;INSERT INTO t2_ig SELECT * FROM t2_ab;
;INSERT INTO t2_fa SELECT * FROM t2_ab;
;INSERT INTO t2_re SELECT * FROM t2_ab;
;INSERT INTO t2_xx SELECT * FROM t2_ab;
;CREATE TABLE t3_ab(a, b, UNIQUE(a, b) ON CONFLICT ABORT);
;CREATE TABLE t3_ro(a, b, UNIQUE(a, b) ON CONFLICT ROLLBACK);
;CREATE TABLE t3_ig(a, b, UNIQUE(a, b) ON CONFLICT IGNORE);
;CREATE TABLE t3_fa(a, b, UNIQUE(a, b) ON CONFLICT FAIL);
;CREATE TABLE t3_re(a, b, UNIQUE(a, b) ON CONFLICT REPLACE);
;CREATE TABLE t3_xx(a, b, UNIQUE(a, b));
;INSERT INTO t3_ab VALUES(1, 'one');
;INSERT INTO t3_ab VALUES(2, 'two');
;INSERT INTO t3_ro SELECT * FROM t3_ab;
;INSERT INTO t3_ig SELECT * FROM t3_ab;
;INSERT INTO t3_fa SELECT * FROM t3_ab;
;INSERT INTO t3_re SELECT * FROM t3_ab;
;INSERT INTO t3_xx SELECT * FROM t3_ab;
;
;COMMIT
;BEGIN;
;INSERT INTO t1_ab VALUES(3, 'three')
;INSERT INTO t1_ab SELECT ((a%2)*a+3), 'string' FROM t1_ab;
;SELECT * FROM t1_ab
;COMMIT
;BEGIN;
;INSERT INTO t1_ro VALUES(3, 'three')
;INSERT INTO t1_ro SELECT ((a%2)*a+3), 'string' FROM t1_ro;
;SELECT * FROM t1_ro
;COMMIT
;INSERT INTO t1_fa VALUES(3, 'three')
;INSERT INTO t1_fa SELECT ((a%2)*a+3), 'string' FROM t1_fa;
;SELECT * FROM t1_fa
;COMMIT
;BEGIN;
;INSERT INTO t1_ig VALUES(3, 'three')
;INSERT INTO t1_ig SELECT ((a%2)*a+3), 'string' FROM t1_ig;
;
;SELECT * FROM t1_ig
;COMMIT
;BEGIN;
;INSERT INTO t1_re VALUES(3, 'three')
;INSERT INTO t1_re SELECT ((a%2)*a+3), 'string' FROM t1_re;
;
;SELECT * FROM t1_re
;COMMIT
;BEGIN;
;INSERT INTO t1_xx VALUES(3, 'three')
;INSERT INTO t1_xx SELECT ((a%2)*a+3), 'string' FROM t1_xx;
;SELECT * FROM t1_xx
;COMMIT
;BEGIN;
;INSERT INTO t2_ab VALUES(3, 'three')
;INSERT INTO t2_ab SELECT a+3, CASE a WHEN 2 THEN NULL ELSE 'xx' END FROM t2_ab
  
;SELECT * FROM t2_ab
;COMMIT
;BEGIN;
;INSERT INTO t2_ro VALUES(3, 'three')
;INSERT INTO t2_ro SELECT a+3, CASE a WHEN 2 THEN NULL ELSE 'xx' END FROM t2_ro
  
;SELECT * FROM t2_ro
;COMMIT
;INSERT INTO t2_fa VALUES(3, 'three')
;INSERT INTO t2_fa SELECT a+3, CASE a WHEN 2 THEN NULL ELSE 'xx' END FROM t2_fa
  
;SELECT * FROM t2_fa
;COMMIT
;BEGIN;
;INSERT INTO t2_ig VALUES(3, 'three')
;INSERT INTO t2_ig SELECT a+3, CASE a WHEN 2 THEN NULL ELSE 'xx' END FROM t2_ig
  
;SELECT * FROM t2_ig
;COMMIT
;BEGIN;
;INSERT INTO t2_re VALUES(3, 'three')
;INSERT INTO t2_re SELECT a+3, CASE a WHEN 2 THEN NULL ELSE 'xx' END FROM t2_re
  
;SELECT * FROM t2_re
;COMMIT
;BEGIN;
;INSERT INTO t2_xx VALUES(3, 'three')
;INSERT INTO t2_xx SELECT a+3, CASE a WHEN 2 THEN NULL ELSE 'xx' END FROM t2_xx
  
;SELECT * FROM t2_xx
;COMMIT
;BEGIN;
;INSERT INTO t3_ab VALUES(3, 'three')
;INSERT INTO t3_ab SELECT ((a%2)*a+3), 'three' FROM t3_ab
  
;SELECT * FROM t3_ab ORDER BY rowid
;COMMIT
;BEGIN;
;INSERT INTO t3_ro VALUES(3, 'three')
;INSERT INTO t3_ro SELECT ((a%2)*a+3), 'three' FROM t3_ro
  
;SELECT * FROM t3_ro ORDER BY rowid
;COMMIT
;INSERT INTO t3_fa VALUES(3, 'three')
;INSERT INTO t3_fa SELECT ((a%2)*a+3), 'three' FROM t3_fa
  
;SELECT * FROM t3_fa ORDER BY rowid
;COMMIT
;BEGIN;
;INSERT INTO t3_ig VALUES(3, 'three')
;INSERT INTO t3_ig SELECT ((a%2)*a+3), 'three' FROM t3_ig
  
;SELECT * FROM t3_ig ORDER BY rowid
;COMMIT
;BEGIN;
;INSERT INTO t3_re VALUES(3, 'three')
;INSERT INTO t3_re SELECT ((a%2)*a+3), 'three' FROM t3_re
  
;SELECT * FROM t3_re ORDER BY rowid
;COMMIT
;BEGIN;
;INSERT INTO t3_xx VALUES(3, 'three')
;INSERT INTO t3_xx SELECT ((a%2)*a+3), 'three' FROM t3_xx
  
;SELECT * FROM t3_xx ORDER BY rowid
;COMMIT
;CREATE TABLE t4(a, b CHECK (b!=10));
;INSERT INTO t4 VALUES(1, 2);
;INSERT INTO t4 VALUES(3, 4);
;
;BEGIN;
;INSERT INTO t4 VALUES(5, 6) 
;INSERT INTO t4 SELECT a+4, b+4 FROM t4

;SELECT * FROM t4 
;CREATE TABLE t5(a NOT NULL ON CONFLICT IGNORE, b NOT NULL ON CONFLICT ABORT);
;
;INSERT INTO t5 VALUES(NULL, 'not null') 
;SELECT * FROM t5 
;INSERT INTO t5 VALUES('not null', NULL) 
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1_ab"
;DROP table "t1_ro"
;DROP table "t1_ig"
;DROP table "t1_fa"
;DROP table "t1_re"
;DROP table "t1_xx"
;DROP table "t2_ab"
;DROP table "t2_ro"
;DROP table "t2_ig"
;DROP table "t2_fa"
;DROP table "t2_re"
;DROP table "t2_xx"
;DROP table "t3_ab"
;DROP table "t3_ro"
;DROP table "t3_ig"
;DROP table "t3_fa"
;DROP table "t3_re"
;DROP table "t3_xx"
;DROP table "t4"
;DROP table "t5"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t1(x, y);
;INSERT INTO t1 VALUES('one', 'first');
;INSERT INTO t1 VALUES('two', 'second');
;INSERT INTO t1 VALUES('three', 'third');
;
;SELECT rowid FROM t1
;SELECT oid FROM t1
;SELECT _rowid_ FROM t1
;SELECT ROWID FROM t1
;SELECT OID FROM t1
;SELECT _ROWID_ FROM t1
;SELECT RoWiD FROM t1
;SELECT OiD FROM t1
;SELECT _RoWiD_ FROM t1
;CREATE TABLE t2(oid, b);
;CREATE TABLE t3(a, _rowid_);
;CREATE TABLE t4(a, b, rowid);
;INSERT INTO t2 VALUES('one', 'two');
;INSERT INTO t2 VALUES('three', 'four');
;INSERT INTO t3 VALUES('five', 'six');
;INSERT INTO t3 VALUES('seven', 'eight');
;INSERT INTO t4 VALUES('nine', 'ten', 'eleven');
;INSERT INTO t4 VALUES('twelve', 'thirteen', 'fourteen');
;
;SELECT oid, rowid, _rowid_ FROM t2
;SELECT oid, rowid, _rowid_ FROM t3
;SELECT oid, rowid, _rowid_ FROM t4
;DROP TABLE t5 
;CREATE TABLE t5(pk integer primary key)
;DELETE FROM t5;
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk integer, primary key(pk))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk integer, v integer, primary key(pk))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk integer, v integer, primary key(pk, v))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk int, v integer, primary key(pk, v))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk int, v integer, primary key(pk))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk int primary key, v integer)
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk inTEger primary key)
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk inteGEr, primary key(pk))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t5(pk INTEGER, v integer, primary key(pk))
;INSERT INTO t5 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t5;
;
;DROP TABLE t5 
;CREATE TABLE t6(pk INT primary key);
;CREATE TABLE t7(pk BIGINT primary key);
;CREATE TABLE t8(pk SHORT INTEGER primary key);
;CREATE TABLE t9(pk UNSIGNED INTEGER primary key);
;
;DELETE FROM t6;
;INSERT INTO t6 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t6;
;
;DELETE FROM t7;
;INSERT INTO t7 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t7;
;
;DELETE FROM t8;
;INSERT INTO t8 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t8;
;
;DELETE FROM t9;
;INSERT INTO t9 (pk) VALUES(0);
;SELECT (rowid==pk) FROM t9;
;
;INSERT INTO t6 VALUES('2.0');
;INSERT INTO t7 VALUES('2.0');
;INSERT INTO t8 VALUES('2.0');
;INSERT INTO t9 VALUES('2.0');
;SELECT typeof(pk), pk FROM t6;
;SELECT typeof(pk), pk FROM t7;
;SELECT typeof(pk), pk FROM t8;
;SELECT typeof(pk), pk FROM t9;
;
;INSERT INTO t6 VALUES(2) 

;INSERT INTO t7 VALUES(2) 

;INSERT INTO t8 VALUES(2) 

;INSERT INTO t9 VALUES(2) 

;DROP TABLE t 
;CREATE TABLE t(x INTEGER PRIMARY KEY ASC, y, z)
;DELETE FROM t;
;INSERT INTO t (x) VALUES(0);
;SELECT (rowid==x) FROM t;
;
;DROP TABLE t 
;CREATE TABLE t(x INTEGER, y, z, PRIMARY KEY(x ASC))
;INSERT INTO t (x) VALUES(0);
;SELECT (rowid==x) FROM t;
;
;DROP TABLE t 
;CREATE TABLE t(x INTEGER, y, z, PRIMARY KEY(x DESC))
;INSERT INTO t (x) VALUES(0);
;SELECT (rowid==x) FROM t;
;
;DROP TABLE t 
;CREATE TABLE t(x INTEGER PRIMARY KEY DESC, y, z)
;INSERT INTO t (x) VALUES(0);
;SELECT (rowid==x) FROM t;
;
;DROP TABLE t 
;CREATE TABLE t10(a, b);
;INSERT INTO t10 VALUES('ten', 10);
;CREATE TABLE t11(a, b INTEGER PRIMARY KEY);
;INSERT INTO t11 VALUES('ten', 10);
;
;UPDATE t10 SET rowid = 5
;SELECT rowid, _rowid_, oid FROM t10;
;
;UPDATE t10 SET _rowid_ = 6
;
;UPDATE t10 SET oid = 7
;
;UPDATE t11 SET rowid = 5
;SELECT rowid, _rowid_, oid, b FROM t11;
;
;UPDATE t11 SET _rowid_ = 6
;
;UPDATE t11 SET oid = 7
;
;UPDATE t11 SET b = 8
;
;DELETE FROM t10 
;INSERT INTO t10(oid) VALUES(15)
;SELECT rowid, _rowid_, oid FROM t10;
;
;INSERT INTO t10(rowid) VALUES(16)
;
;INSERT INTO t10(_rowid_) VALUES(17)
;
;INSERT INTO t10(a, b, oid) VALUES(1,2,3)
;
;DELETE FROM t11 
;INSERT INTO t11(oid) VALUES(15)
;SELECT rowid, _rowid_, oid, b FROM t11;
;
;INSERT INTO t11(rowid) VALUES(16)
;
;INSERT INTO t11(_rowid_) VALUES(17)
;
;INSERT INTO t11(a, b) VALUES(1,2)
;
;PRAGMA foreign_keys
;PRAGMA foreign_keys = OFF
;PRAGMA database_list
;SELECT name, type FROM main.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;DROP table "t1"
;DROP table "t2"
;DROP table "t3"
;DROP table "t4"
;DROP table "t6"
;DROP table "t7"
;DROP table "t8"
;DROP table "t9"
;DROP table "t10"
;DROP table "t11"
;SELECT name, type FROM sqlite_temp_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxa.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;SELECT name, type FROM auxb.sqlite_master
      WHERE type IN('table', 'view') AND name NOT LIKE 'sqliteX_%' ESCAPE 'X'
    
;PRAGMA foreign_keys = 0
;CREATE TABLE t12(x INTEGER PRIMARY KEY, y);
;INSERT INTO t12 VALUES(5, 'five');
;
;UPDATE t12 SET x = 4
;SELECT typeof(x), x FROM t12 
;UPDATE t12 SET x = 10.0
;UPDATE t12 SET x = '12.0'
;UPDATE t12 SET x = '-15.0'
;UPDATE t12 SET x = 4.1
;UPDATE t12 SET x = 'hello'
;UPDATE t12 SET x = NULL
;UPDATE t12 SET x = X'ABCD'
;UPDATE t12 SET x = X'3900'
;UPDATE t12 SET x = X'39'
;DELETE FROM t12 
;INSERT INTO t12(x) VALUES(4.1)
;INSERT INTO t12(x) VALUES('hello')
;INSERT INTO t12(x) VALUES(X'ABCD')
;INSERT INTO t12(x) VALUES(X'3900')
;INSERT INTO t12(x) VALUES(X'39')
;INSERT INTO t12(x) VALUES(4)
;SELECT typeof(x), x FROM t12 

;INSERT INTO t12(x) VALUES(10.0)
;INSERT INTO t12(x) VALUES('12.0')
;INSERT INTO t12(x) VALUES('4e3')
;INSERT INTO t12(x) VALUES('-14.0')
;INSERT INTO t12 DEFAULT VALUES
;SELECT typeof(x), x FROM t12 WHERE y IS (SELECT max(y) FROM t12)

;INSERT INTO t12(y)   VALUES(5)
;INSERT INTO t12(x,y) VALUES(NULL, 10)
;INSERT INTO t12(x,y) SELECT NULL, 15 FROM t12
;INSERT INTO t12(y) SELECT 20 FROM t12 LIMIT 3
;