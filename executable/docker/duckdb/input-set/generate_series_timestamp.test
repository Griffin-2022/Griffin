# name: test/sql/function/list/generate_series_timestamp.test
# description: Test generate_series/range function
# group: [list]

;
PRAGMA enable_verification

# standard generate_series (inclusive bound)
;
SELECT generate_series(timestamp '2020-01-01', timestamp '2020-07-01', interval '3' month);
;
[2020-01-01 00:00:00, 2020-04-01 00:00:00, 2020-07-01 00:00:00]

# exclusive bound
;
SELECT range(timestamp '2020-01-01', timestamp '2020-07-01', interval '3' month);
;
[2020-01-01 00:00:00, 2020-04-01 00:00:00]

# negative interval
;
SELECT generate_series(timestamp '2020-06-01', timestamp '2020-01-01', -interval '3' month);
;
[2020-06-01 00:00:00, 2020-03-01 00:00:00]

# start = end
;
SELECT generate_series(timestamp '2020-01-01', timestamp '2020-01-01', interval '1' day);
;
[2020-01-01 00:00:00]

;
SELECT range(timestamp '2020-01-01', timestamp '2020-01-01', interval '1' day);
;
[]

# positive interval but start > end
;
SELECT generate_series(timestamp '2020-06-01', timestamp '2020-01-01', interval '3' month);
;
[]

# negative interval but start < end
;
SELECT generate_series(timestamp '2020-01-01', timestamp '2020-06-01', -interval '3' month);
;
[]

# null values
;
SELECT generate_series(NULL, timestamp '2020-06-01', -interval '3' month);
;
NULL

;
SELECT generate_series(timestamp '2020-01-01', NULL, -interval '3' month);
;
NULL

;
SELECT generate_series(timestamp '2020-01-01', timestamp '2020-06-01', NULL);
;
NULL


# > vector size
;
SELECT count(*) FROM (
	SELECT unnest(generate_series(timestamp '2000-01-01', timestamp '2020-06-01', interval '1' day))
);
;
7458

# mixed sign interval not supported
;
SELECT generate_series(timestamp '2020-01-01', timestamp '2020-06-01', interval '3' month - interval '3' day);
