# name: test/sql/types/enum/test_enum_constraints.test
# description: ENUM tests on table constraints
# group: [enum]

;
PRAGMA enable_verification

;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);

# We can't drop mood because person depends on it
;
drop type mood

# But if we drop person
;
drop table person

# We can drop mood
;
drop type mood

# We can recreate all of them again
;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);

#Cascading drops (i.e. DROP TYPE mood CASCADE)
;
DROP TYPE mood CASCADE

#DROP TYPE after we alter the table so the dependency is gone (ALTER)
;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);

;
ALTER TABLE person ALTER current_mood SET DATA TYPE VARCHAR

;
DROP TYPE mood

;
DROP TABLE person

#DROP TYPE after we alter the table so the dependency is gone (DROP COLUMN)
;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);

;
ALTER TABLE person DROP COLUMN current_mood

;
DROP TYPE mood

;
DROP TABLE person

#Dependencies introduced by alter statements, i.e. ADD COLUMN with ENUM type
;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text
);

;
ALTER TABLE person ADD COLUMN current_mood mood

;
DROP TYPE mood

#Dropping the table and type in the same transaction
;
BEGIN TRANSACTION;

;
DROP TABLE person

;
DROP TYPE mood

;
COMMIT;

# Try with two dependencies to the same type ( Delete One column, try do delete type, change type of the other column,
# delete type, recreate type, add column with type, try to delete type)
;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    past_mood mood,
    current_mood mood
);

;
ALTER TABLE person DROP COLUMN current_mood

;
DROP TYPE mood

;
ALTER TABLE person ALTER past_mood SET DATA TYPE VARCHAR

;
DROP TYPE mood

;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
ALTER TABLE person ADD COLUMN current_mood mood

;
DROP TYPE mood

# Clean-up
;
DROP TABLE person

;
DROP TYPE mood

# Transactions with rollbacks
;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);

;
BEGIN TRANSACTION;


;
ALTER TABLE person ALTER current_mood SET DATA TYPE VARCHAR;

;
ROLLBACK;

#Fails, mood should still be dependent on by the table
;
DROP TYPE mood;


#CLEANUP
;
DROP TABLE person;

;
DROP TYPE mood;

;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);


;
BEGIN TRANSACTION;


;
ALTER TABLE person DROP COLUMN current_mood

;
ROLLBACK;

#Fails, mood should still be dependent on by the table
;
DROP TYPE mood;

#CLEANUP
;
DROP TABLE person;

;
DROP TYPE mood;

;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text );

;
BEGIN TRANSACTION;

;
ALTER TABLE person ADD COLUMN current_mood mood

;
ROLLBACK;

;
DROP TYPE mood;

;
DROP TABLE person

# Test Column Rename

;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood
);

;
ALTER TABLE person RENAME COLUMN current_mood TO past_mood

# Check if constraint still there
;
DROP TYPE mood

;
DROP TABLE person

;
DROP TYPE mood


# Test Table Multiple Columns Same Type

;
CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');

;
CREATE TABLE person (
    name text,
    current_mood mood,
    past_mood mood
);

# Check if constraint still there
;
DROP TYPE mood

;
ALTER TABLE person DROP COLUMN current_mood

;
DROP TYPE mood

;
DROP TABLE person

;
DROP TYPE mood
