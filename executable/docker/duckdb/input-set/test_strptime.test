# name: test/sql/function/timestamp/test_strptime.test
# description: Test strptime function
# group: [timestamp]

;
PRAGMA enable_verification

;
SELECT strptime('21 June, 2018', '%d %B, %Y')
;
2018-06-21 00:00:00

;
SELECT strptime('21/10/2018', '%d/%m/%Y')
;
2018-10-21 00:00:00

;
SELECT strptime('2018-20-10', '%Y-%d-%m')
;
2018-10-20 00:00:00

;
SELECT strptime('20182010', '%Y%d%m')
;
2018-10-20 00:00:00

;
SELECT strptime('Mon 30, June 2003, 12:03:10 AM', '%a %d, %B %Y, %I:%M:%S %p')
;
2003-06-30 00:03:10

;
SELECT strptime('Mon 30, June 2003, 12:03:10 PM', '%a %d, %B %Y, %I:%M:%S %p')
;
2003-06-30 12:03:10

;
SELECT strptime('Mon 30, December 2003, 7:3:5 PM', '%a %d, %B %Y, %I:%M:%S %p')
;
2003-12-30 19:03:05

;
SELECT strptime('Tuesday 30, December 2003, 7:3:5 PM', '%A %d, %B %Y, %I:%M:%S %p')
;
2003-12-30 19:03:05

;
SELECT strptime('Mon 30, December 30, 7:3:5 PM', '%a %d, %B %y, %I:%M:%S %p')
;
2030-12-30 19:03:05

# for strptime there is no difference between %- and %
;
SELECT strptime('Mon 30, June 2003, 12:03:10 AM', '%a %-d, %B %Y, %-I:%-M:%-S %p')
;
2003-06-30 00:03:10

# lowercase also works
;
SELECT strptime('mon', '%a')
;
1900-01-01 00:00:00

;
SELECT strptime('tuesday', '%A')
;
1900-01-01 00:00:00

;
SELECT strptime('jun', '%b')
;
1900-06-01 00:00:00

# First Sunday of Monday weeks is Jan 7
;
SELECT strptime('1', '%W')
;
1900-01-07 00:00:00

# First Sunday of Sunday weeks is Jan 7
;
SELECT strptime('1', '%U')
;
1900-01-07 00:00:00

;
SELECT strptime('30', '%U'), strftime('1900-07-29'::DATE, '%U')
;
1900-07-29 00:00:00	30

;
SELECT strptime('30', '%W'), strftime('1900-07-29'::DATE, '%W')
;
1900-07-29 00:00:00	30

# Ignored
;
SELECT strptime('6', '%w')
;
1900-01-01 00:00:00

# Thursday after 1st Sunday
;
SELECT strptime('1-4', '%U-%w'), strftime('1900-01-11'::DATE, '%U-%w')
;
1900-01-11 00:00:00	01-4


# Thursday after 1st Monday
;
SELECT strptime('1-4', '%W-%w'), strftime('1900-01-04'::DATE, '%W-%w')
;
1900-01-04 00:00:00	01-4

# day of year
;
SELECT strptime('30', '%j'), strftime('1900-01-30'::DATE, '%-j')
;
1900-01-30 00:00:00	30

# day of year AND month
;
SELECT strptime('1992-01-30 30', '%Y-%m-%d %j')
;
1992-01-30 00:00:00

# Year-Sunday Week-Weekday
;
SELECT strptime('2021-19-4', '%Y-%U-%w'), strftime('2021-05-13'::DATE, '%Y-%U-%w')
;
2021-05-13 00:00:00	2021-19-4

# Year-Monday Week-Weekday
;
SELECT strptime('2021-19-4', '%Y-%W-%w'), strftime('2021-05-13'::DATE, '%Y-%U-%w')
;
2021-05-13 00:00:00	2021-19-4

# Year, Sunday Week 0, Friday
;
SELECT strptime('2021-0-5', '%Y-%U-%w'), strftime('2021-01-01'::DATE, '%Y-%U-%w')
;
2021-01-01 00:00:00	2021-00-5

# Year, Monday Week 0, Friday
;
SELECT strptime('2021-0-5', '%Y-%W-%w'), strftime('2021-01-01'::DATE, '%Y-%W-%w')
;
2021-01-01 00:00:00	2021-00-5

# Year-Sunday Week-Weekday Mismatch should defer to the day
;
SELECT strptime('2021-05-12 19-4', '%Y-%m-%d %U-%w')
;
2021-05-12 00:00:00

# Year-Monday Week-Weekday Mismatch should defer to the day
;
SELECT strptime('2021-05-12 19-4', '%Y-%m-%d %W-%w')
;
2021-05-12 00:00:00

# Round trip Sunday weeks
;
SELECT * FROM (
    SELECT dt, strftime(dt, '%Y-%U-%w') AS ft, strptime(strftime(dt, '%Y-%U-%w'), '%Y-%U-%w') AS rt
    FROM (SELECT '2021-01-01'::DATE + (INTERVAL (d) DAY) AS dt FROM range(365) tbl(d)) days
) diffs
WHERE rt <> dt
;

# Round trip Monday weeks
;
SELECT * FROM (
    SELECT dt, strftime(dt, '%Y-%W-%w') AS ft, strptime(strftime(dt, '%Y-%W-%w'), '%Y-%W-%w') AS rt
    FROM (SELECT '2021-01-01'::DATE + (INTERVAL (d) DAY) AS dt FROM range(365) tbl(d)) days
) diffs
WHERE rt <> dt
;

# empty specifier and string
;
SELECT strptime('', '')
;
1900-01-01 00:00:00

;
SELECT strptime(NULL, '')
;
NULL

;
SELECT strptime('', NULL)
;
NULL

# UTC offset
;
select strptime('2020-12-31 21:25:58.745232', '%Y-%m-%d %H:%M:%S.%f');
;
2020-12-31 21:25:58.745232

;
select strptime('2020-12-31 21:25:58.745232', '%Y-%m-%d %H:%M:%S.%f');
;
2020-12-31 21:25:58.745232

;
select strptime('2020-12-31 21:25:58.745232+00', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 21:25:58.745232

;
select strptime('2020-12-31 21:25:58.745232+0000', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 21:25:58.745232

;
select strptime('2020-12-31 21:25:58.745232+02', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 19:25:58.745232

;
select strptime('2020-12-31 21:25:58.745232-02', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 23:25:58.745232

;
select strptime('2020-12-31 21:25:58.745232+0215', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 19:10:58.745232

;
select strptime('2020-12-31 21:25:58.745232-0215', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 23:40:58.745232

# on the boundaries
;
select strptime('2020-12-31 03:25:58.745232+04', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-30 23:25:58.745232

;
select strptime('2020-12-30 23:25:58.745232-04', '%Y-%m-%d %H:%M:%S.%f%z');
;
2020-12-31 03:25:58.745232

# incorrect usage
;
select strptime('2020-12-31 21:25:58.745232+0', '%Y-%m-%d %H:%M:%S.%f%z');

;
select strptime('2020-12-31 21:25:58.745232+0X', '%Y-%m-%d %H:%M:%S.%f%z');

;
select strptime('2020-12-31 21:25:58.745232+X0', '%Y-%m-%d %H:%M:%S.%f%z');

;
select strptime('2020-12-31 21:25:58.745232+000', '%Y-%m-%d %H:%M:%S.%f%z');

;
select strptime('2020-12-31 21:25:58.745232X00', '%Y-%m-%d %H:%M:%S.%f%z');

# different errors
# month out of range
;
SELECT strptime('2018-20-10', '%Y-%m-%d')

# day out of range
;
SELECT strptime('2018-10-100', '%Y-%m-%d')

# year without century out of range
;
SELECT strptime('969-10-10', '%y-%m-%d')

# literal part does not match
;
SELECT strptime('2000/10/10', '%Y-%m-%d')

# incorrect date
;
SELECT strptime('2001-02-30', '%Y-%m-%d')

# incorrect date
;
SELECT strptime('2000-10-hello', '%Y-%m-%d')

# incorrect hour
;
SELECT strptime('2000-10-01 24:00:00', '%Y-%m-%d %H:%M:%S')

# incorrect hour with 12 hour clock
;
SELECT strptime('2000-10-01 00:00:00 AM', '%Y-%m-%d %I:%M:%S %p')

;
SELECT strptime('2000-10-01 13:00:00 AM', '%Y-%m-%d %I:%M:%S %p')

# incorrect minute
;
SELECT strptime('2000-10-01 23:60:00', '%Y-%m-%d %H:%M:%S')

# incorrect seconds
;
SELECT strptime('2000-10-01 23:59:60', '%Y-%m-%d %H:%M:%S')

# incorrect microseconds
;
SELECT strptime('2000-10-01 23:59:59.10000000', '%Y-%m-%d %H:%M:%S.%f')

# huge number
;
SELECT strptime('2000-10-01 23:59:59.1000000000000000000000000000', '%Y-%m-%d %H:%M:%S.%f')

# empty string
;
SELECT strptime('', '%Y-%m-%d %H:%M:%S.%f')

# empty string with am/pm
;
SELECT strptime('', '%p')

;
SELECT strptime('a', '%p')

# incorrect am/pm
;
SELECT strptime('mp', '%p')

;
SELECT strptime('pp', '%p')

;
SELECT strptime('zm', '%p')

# incorrect abbreviated weekday name
;
SELECT strptime('moa', '%a')

# incorrect weekday name
;
SELECT strptime('moaday', '%A')

;
SELECT strptime('mondayy', '%A')

# incorrect abbreviated month name
;
SELECT strptime('juk', '%b')

# incorrect weekday name
;
SELECT strptime('juke', '%B')

;
SELECT strptime('junee', '%B')

# day of year out of range
;
SELECT strptime('500', '%j')

;
SELECT strptime('500', '%-j')

;
SELECT strptime('0', '%j')

;
SELECT strptime('0', '%-j')

# week numbers out of range
;
SELECT strptime('60', '%U')

;
SELECT strptime('60', '%W')

# weekday out of range
;
SELECT strptime('9', '%w')

# Multiple offset types
;
SELECT strptime('20 19', '%U %W')

;
SELECT strptime('20 19', '%U %j')

;
SELECT strptime('20 19', '%W %j')

# AM/PM out of range
;
SELECT strptime('Mon 30, December 30, 20:3:5 PM', '%a %d, %B %y, %H:%M:%S %p')

# unrecognized specifier
;
SELECT strptime('21/10/2018', '%-q/%m/%Y')

# microseconds out of range
;
SELECT strptime('9999999', '%f')

# millisecond out of range
;
SELECT strptime('9999', '%g')

;
SELECT strptime('2000/10/10', random()::varchar)
