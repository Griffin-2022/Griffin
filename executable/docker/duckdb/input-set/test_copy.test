# name: test/sql/copy/csv/test_copy.test
# description: Test copy statement
# group: [csv]

# generate CSV file with ',' as delimiter and complex strings
# load CSV file into a table
;
CREATE TABLE test (a INTEGER, b INTEGER, c VARCHAR(10));

;
COPY test FROM 'test/sql/copy/csv/data/test/test.csv';
;
5000

;
SELECT COUNT(a), SUM(a) FROM test;
;
5000	12497500

;
SELECT * FROM test ORDER BY 1 LIMIT 3;
;
0	0	 test
1	1	 test
2	2	 test

# create CSV file from table
;
COPY test TO '__TEST_DIR__/test2.csv';
;
5000

# load the same CSV file back again
;
CREATE TABLE test2 (a INTEGER, b INTEGER, c VARCHAR(10));

;
COPY test2 FROM '__TEST_DIR__/test2.csv';
;
5000

;
SELECT * FROM test2 ORDER BY 1 LIMIT 3;
;
0	0	 test
1	1	 test
2	2	 test

# test too few rows
;
CREATE TABLE test_too_few_rows (a INTEGER, b INTEGER, c VARCHAR, d INTEGER);

;
COPY test_too_few_rows FROM '__TEST_DIR__/test2.csv';

# create CSV file from query
;
COPY (SELECT a,b FROM test WHERE a < 4000) TO '__TEST_DIR__/test3.csv';
;
4000

# load the same CSV file back again
;
CREATE TABLE test3 (a INTEGER, b INTEGER);

;
COPY test3 FROM '__TEST_DIR__/test3.csv';
;
4000

;
SELECT * FROM test3 ORDER BY 1 LIMIT 3;
;
0	0
1	1
2	2

# export selected columns from a table to a CSV file
;
COPY test (a,c) TO '__TEST_DIR__/test4.csv' (DELIMITER ',', HEADER false);
;
5000

# import selected columns from CSV file
;
CREATE TABLE test4 (a INTEGER, b INTEGER, c VARCHAR(10));

;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (DELIM ',', HEADER 0);
;
5000

;
SELECT * FROM test4 ORDER BY 1 LIMIT 3;
;
0	NULL	 test
1	NULL	 test
2	NULL	 test

# unsupported type for HEADER
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (SEP ',', HEADER 0.2);

# empty delimiter
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (SEP);

# number as delimiter
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (SEP 1);

# multiple format options
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (FORMAT 'csv', FORMAT 'json');

# number as escape string
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (ESCAPE 1);

# no escape string
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (ESCAPE);

# number as quote string
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (QUOTE 1);

# no quote string
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (QUOTE);

# no format string
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (FORMAT);

# encoding must not be empty and must have the correct parameter type and value
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (ENCODING);

;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (ENCODING 42);

;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (ENCODING 'utf-42');

# don't allow for non-existant copy options
;
COPY test4 (a,c) FROM '__TEST_DIR__/test4.csv' (MAGIC '42');

# use a different delimiter
# create new table
;
DROP TABLE test;

;
CREATE TABLE test (a INTEGER, b INTEGER, c VARCHAR(10));

;
COPY test FROM 'test/sql/copy/csv/data/test/test_pipe.csv' (SEPARATOR '|');
;
10

# throw exception if a line contains too many values
;
COPY test FROM 'test/sql/copy/csv/data/test/too_many_values.csv';

# test default null string
;
COPY test FROM 'test/sql/copy/csv/data/test/test_null_csv.csv' DELIMITER '|';
;
1

# test invalid UTF-8
;
COPY test FROM 'test/sql/copy/csv/data/test/invalid_utf.csv' DELIMITER '|';

# empty file
;
CREATE TABLE empty_table (a INTEGER, b INTEGER, c VARCHAR(10));

;
COPY empty_table FROM 'test/sql/copy/csv/data/test/empty.csv' (HEADER 0);
;
0

# unterminated quotes
;
CREATE TABLE unterminated (a VARCHAR);

;
COPY unterminated FROM 'test/sql/copy/csv/data/test/unterminated.csv' (HEADER 0, AUTO_DETECT FALSE);

# 1024 rows (vector size)
# load CSV file into a table
;
CREATE TABLE vsize (a INTEGER, b INTEGER, c VARCHAR(10));

;
COPY vsize FROM 'test/sql/copy/csv/data/test/vsize.csv';
;
1024

