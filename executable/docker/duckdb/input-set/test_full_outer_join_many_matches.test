# name: test/sql/join/full_outer/test_full_outer_join_many_matches.test
# description: Test FULL OUTER JOIN with many matches
# group: [full_outer]

;
PRAGMA enable_verification

;
PRAGMA verify_parallelism

;
CREATE TABLE integers AS SELECT a i, 1 j FROM generate_series(0, 1999, 1) t1(a);

;
CREATE TABLE integers2 AS SELECT a k, 2 l FROM generate_series(2000, 3999, 1) t1(a);

# equality join
;
SELECT COUNT(*) FROM integers FULL OUTER JOIN integers2 ON integers.i=integers2.k
;
4000

;
SELECT i, j, k, l FROM integers FULL OUTER JOIN integers2 ON integers.i=integers2.k ORDER BY 1, 2, 3, 4
;
16000 values hashing to 8b9eab043624ff470b00a981c1d588d9

# range join
;
SELECT COUNT(*) FROM integers FULL OUTER JOIN integers2 ON integers.j>integers2.l
;
4000

;
SELECT i, j, k, l FROM integers FULL OUTER JOIN integers2 ON integers.j>integers2.l ORDER BY 1, 2, 3, 4
;
16000 values hashing to 8b9eab043624ff470b00a981c1d588d9

# inequality join
;
SELECT COUNT(*) FROM integers FULL OUTER JOIN integers2 ON integers.j+1<>integers2.l;
;
4000

;
SELECT i, j, k, l FROM integers FULL OUTER JOIN integers2 ON integers.j+1<>integers2.l ORDER BY 1, 2, 3, 4
;
16000 values hashing to 8b9eab043624ff470b00a981c1d588d9

# complex join condition
;
SELECT COUNT(*) FROM integers FULL OUTER JOIN integers2 ON integers.j+integers2.l<>3;
;
4000

;
SELECT i, j, k, l FROM integers FULL OUTER JOIN integers2 ON integers.j+integers2.l<>3 ORDER BY 1, 2, 3, 4
;
16000 values hashing to 8b9eab043624ff470b00a981c1d588d9
