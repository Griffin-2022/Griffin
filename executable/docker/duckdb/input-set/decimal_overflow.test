# name: test/sql/types/decimal/decimal_overflow.test
# description: Test overflow in various decimal computations
# group: [decimal]

;
PRAGMA enable_verification

# decimals can also overflow at the bigint boundary, because we don't perform automatic upcasting to hugeint
;
select (99000000000000000.0::DECIMAL(18,1)+99000000000000000.0::DECIMAL(18,1));

;
select (99000000000000000.0::DECIMAL(18,1)+99000000000000000.0::DECIMAL(18,1))::VARCHAR::DECIMAL(18,1);

;
select (50000000000000000.0::DECIMAL(18,1)+50000000000000000.0::DECIMAL(18,1));

;
select (-99000000000000000.0::DECIMAL(18,1)-99000000000000000.0::DECIMAL(18,1));

;
select (-50000000000000000.0::DECIMAL(18,1)-50000000000000000.0::DECIMAL(18,1));

# decimals can overflow at the hugeint boundary, because we run out of bits
;
select (9900000000000000000000000000000000000.0::DECIMAL(38,1)+9900000000000000000000000000000000000.0::DECIMAL(38,1));

;
select (5000000000000000000000000000000000000.0::DECIMAL(38,1)+5000000000000000000000000000000000000.0::DECIMAL(38,1));

;
select '10000000000000000000000000000000000000.0'::DECIMAL(38,1);

;
select (-5000000000000000000000000000000000000.0::DECIMAL(38,1)-5000000000000000000000000000000000000.0::DECIMAL(38,1));

# decimals can overflow in multiplications
# bigint
;
select 90000000000000000.0::DECIMAL(18,1) * 10::DECIMAL(2,0);

;
select 90000000000000000.0::DECIMAL(18,1) * 1000::DECIMAL(4,0);

# hugeint
;
select 5000000000000000000000000000000000000.0::DECIMAL(38,1) * 2::DECIMAL(1,0);

# but also like this... the type of this multiplication becomes DECIMAL(38,2), which does not fit 9900000000000000000000000000000000000
;
select 9900000000000000000000000000000000000.0::DECIMAL(38,1) * 1.0;