# name: test/sql/copy/parquet/parquet_1588.test
# description: Test boolean filters
# group: [parquet]

require parquet

;
pragma enable_verification

# pandas equivalent:
# df = pandas.read_parquet('data/parquet-testing/bug1588.parquet')
# df[(df.has_image_link == 1) & ((df.has_image_alt_text == 1) | df.is_image_alt_text_empty == 1)]

;
create table some_bools (val boolean);

;
insert into some_bools values (TRUE)

;
select count(*) from some_bools where val = 1;
;
1

;
select count(*) from some_bools where val = '1'::bool;
;
1


;
SELECT has_image_link FROM parquet_scan('data/parquet-testing/bug1588.parquet') where has_image_link = 1
;
1
1
1

;
SELECT COUNT(*) FROM parquet_scan('data/parquet-testing/bug1588.parquet') WHERE has_image_link = 1
;
3

;
SELECT COUNT(*) FROM parquet_scan('data/parquet-testing/bug1588.parquet') WHERE has_image_link = '1'::bool
;
3


# original query for the lolz
;
SELECT COUNT(*) FROM parquet_scan('data/parquet-testing/bug1588.parquet') WHERE (has_image_link = 1 AND (has_image_alt_text = 0 OR is_image_alt_text_empty = 1))
;
2

