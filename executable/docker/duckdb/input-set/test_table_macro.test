# name: test/sql/catalog/function/test_table_macro.test
# description: Test SELECTMacro
# group: [function]

;
PRAGMA enable_verification


;
CREATE TABLE test_tbl (id INT, name string);

;
CREATE TABLE test2_tbl (id INT, name string);

;
CREATE TABLE greek_tbl (id INT, name string);

;
INSERT INTO test_tbl VALUES (1,'tom'), (2,'dick'),(3,'harry'), (4,'mary'), (5,'mungo'), (6,'midge');  

;
INSERT INTO test_tbl VALUES (20,'andrew'), (21,'boris'),(22,'Caleb'), (23,'david'), (24,'evan');

;
INSERT INTO  greek_tbl VALUES (1, 'alpha'), (2, 'beta'), (3, 'gamma'), (4, 'delta'), (5, 'epsilon'),(6, 'zeta'), (7, 'eta') , (8, 'theta'), (9, 'iota') , (10, 'kappa'); 

;
CREATE  MACRO xt(a,_name) as TABLE SELECT * FROM test_tbl WHERE(id>=a or name=_name);

;
CREATE  MACRO xt2(a,_name) as TABLE SELECT * FROM test_tbl WHERE(id>=a or name like _name);

;
CREATE  MACRO sgreek(a,b,c) as TABLE SELECT a,b FROM greek_tbl WHERE(id >= c);

;
( SELECT* FROM xt(1, 'tom') UNION SELECT* FROM  xt2(1, '%%%') ) INTERSECT SELECT* FROM xt(100,'midge');
;
6	midge

;
(SELECT* FROM xt(1, 'tom') EXCEPT SELECT* FROM xt(20,'tom' )) INTERSECT SELECT* FROM xt(100,'harry');
;
3	harry

;
SELECT	* FROM  xt(200,'andrew');
;
20	andrew

;
SELECT * FROM xt2(100,'m%');
;
4	mary
5	mungo
6	midge


# check similar to
;
CREATE  MACRO xtm(cmp_str) as TABLE SELECT id, name FROM test_tbl  WHERE( name similar to cmp_str);

;
SELECT * FROM xtm('m.*');

# check regexp_matches
;
CREATE  MACRO  xt_reg(cmp) as TABLE SELECT * FROM test_tbl WHERE regexp_matches(name ,cmp );

;
SELECT * FROM xt_reg('^m');

# use regular macro for comparision
;
CREATE MACRO   cmp(a,m) as regexp_matches(a,m) or a similar to m;

;
CREATE  MACRO gm(m) as TABLE SELECT * FROM  greek_tbl WHERE cmp(name,m);

;
SELECT * FROM  gm('^m');

# create a scalar macro with same name as table macro
;
CREATE MACRO xt(a,b) as a+b;

# drop table macro
;
DROP MACRO TABLE xt;

# use column identifer as a macro parameter
;
CREATE MACRO xt(id, imax) as TABLE SELECT id,name FROM test_tbl WHERE id<=imax;

;
SELECT * FROM xt(id,1);
;
1	tom

# try to create table macro with pre-existing table name "range"
;
CREATE  MACRO range(a,b) as TABLE select a,b from test_tbl;

# use table macro as a scalar macro
;
SELECT * FROM test_tbl where id>=(SELECT max(id) FROM xt(id,30));
;
24	evan

# use table macro as a scalar macro
;
SELECT * FROM greek_tbl where id<=(SELECT min(id) FROM xt(id,30));
;
1	alpha


# check that table macros are present in  duckdb_functions() -
# nb they have the function_type 'table_macro'
;
SELECT * FROM duckdb_functions() WHERE function_type = 'table_macro' AND
 ( function_name = 'sgreek' or  function_name = 'xt') order by function_name;
;
main	sgreek	table_macro	NULL	NULL	[a, b, c]	[NULL, NULL, NULL]	NULL	NULL
main	xt	table_macro	NULL	NULL	[id, imax]	[NULL, NULL]	NULL	NULL




