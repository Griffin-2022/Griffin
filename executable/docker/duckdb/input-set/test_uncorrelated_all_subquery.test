# name: test/sql/subquery/any_all/test_uncorrelated_all_subquery.test
# description: Test uncorrelated ALL subqueries
# group: [any_all]

;
PRAGMA enable_verification

;
CREATE TABLE integers(i INTEGER)

;
INSERT INTO integers VALUES (1), (2), (3), (NULL)

# uncorrelated ALL
;
SELECT i FROM integers WHERE i >= ALL(SELECT i FROM integers)
;

;
SELECT i, i >= ALL(SELECT i FROM integers) FROM integers ORDER BY i
;
NULL	NULL
1	0
2	0
3	NULL

;
SELECT i FROM integers WHERE i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL)
;
3

;
SELECT i, i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL) FROM integers ORDER BY i
;
NULL	NULL
1	0
2	0
3	1

;
SELECT i FROM integers WHERE i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL)
;
3

;
SELECT i FROM integers WHERE i > ALL(SELECT MIN(i) FROM integers)
;
2
3

;
SELECT i FROM integers WHERE i < ALL(SELECT MAX(i) FROM integers) ORDER BY 1
;
1
2

;
SELECT i FROM integers WHERE i <= ALL(SELECT i FROM integers)
;

;
SELECT i FROM integers WHERE i <= ALL(SELECT i FROM integers WHERE i IS NOT NULL)
;
1

;
SELECT i FROM integers WHERE i = ALL(SELECT i FROM integers WHERE i=1)
;
1

;
SELECT i FROM integers WHERE i <> ALL(SELECT i FROM integers WHERE i=1)
;
2
3

;
SELECT i FROM integers WHERE i = ALL(SELECT i FROM integers WHERE i IS NOT NULL)
;

;
SELECT i FROM integers WHERE i <> ALL(SELECT i FROM integers WHERE i IS NOT NULL)
;

# zero results always results in TRUE for ALL, even if "i" is NULL
;
SELECT i FROM integers WHERE i <> ALL(SELECT i FROM integers WHERE i>10) ORDER BY i;
;
NULL
1
2
3

;
SELECT i, i <> ALL(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	1
1	1
2	1
3	1

# zero results always results in FALSE for ANY
;
SELECT i, i > ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	0
1	0
2	0
3	0

;
SELECT i, i = ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	0
1	0
2	0
3	0

;
SELECT i, i >= ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	0
1	0
2	0
3	0

;
SELECT i, i <= ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	0
1	0
2	0
3	0

;
SELECT i, i < ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	0
1	0
2	0
3	0

;
SELECT i, i <> ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
;
NULL	0
1	0
2	0
3	0

# nested uncorrelated subqueries
;
SELECT (SELECT (SELECT (SELECT 42)))
;
42

;
SELECT (SELECT EXISTS(SELECT * FROM integers WHERE i>2)) FROM integers;
;
1
1
1
1

;
SELECT (SELECT MAX(i) FROM integers) AS k, SUM(i) FROM integers GROUP BY k;
;
3	6.000000

# subqueries in GROUP BY clause
;
SELECT i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL) AS k, SUM(i) FROM integers GROUP BY k ORDER BY k;
;
NULL	NULL
0	3.000000
1	3.000000

;
SELECT SUM(i) FROM integers GROUP BY (i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL)) ORDER BY 1;
;
NULL
3.000000
3.000000

;
SELECT i >= ALL(SELECT MIN(i) FROM integers WHERE i IS NOT NULL) AS k, SUM(i) FROM integers GROUP BY k ORDER BY k;
;
NULL	NULL
1	6.000000

# subquery in CASE statement
;
SELECT i, SUM(CASE WHEN (i >= ALL(SELECT i FROM integers WHERE i=2)) THEN 1 ELSE 0 END) FROM integers GROUP BY i ORDER BY i;
;
NULL	0.000000
1	0.000000
2	1.000000
3	1.000000

# subquery in HAVING
;
SELECT i % 2 AS k, SUM(i) FROM integers GROUP BY k HAVING SUM(i) > (SELECT MAX(i) FROM integers)
;
1	4.000000

;
SELECT i FROM integers WHERE NOT(i IN (SELECT i FROM integers WHERE i>1));
;
1

# multiple subqueries in select without FROM
;
SELECT (SELECT SUM(i) FROM integers), (SELECT 42)
;
6.000000	42

