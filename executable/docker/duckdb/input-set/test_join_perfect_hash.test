# name: test/sql/join/inner/test_join_perfect_hash.test
# description: Test joins that would generate a perfect hashtable
# group: [inner]

;
PRAGMA enable_verification

foreach type <numeric> DECIMAL(4,0) DECIMAL(8,0) DECIMAL(16,0) DECIMAL(32,0)

;
CREATE TABLE test1 (a ${type}, b ${type});

;
INSERT INTO test1 VALUES (11, 1), (12, 2), (13, 3)

;
CREATE TABLE test2 (b ${type}, c ${type});

;
INSERT INTO test2 VALUES (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30)


# simple inner join
;
SELECT a, test1.b,c FROM test1, test2 WHERE test1.b = test2.b order by a, test1.b,c;
;
11	1	10
11	1	10
11	1	10
11	1	10
11	1	10
12	2	20
12	2	20
12	2	20
12	2	20
12	2	20
13	3	30
13	3	30
13	3	30
13	3	30
13	3	30

;
DROP TABLE test1;

;
DROP TABLE test2;

endloop


;
CREATE TABLE test3 (a INTEGER, b INTEGER);

;
INSERT INTO test3 VALUES (-11, -1), (-12, -2), (13, 3)

;
CREATE TABLE test4 (b INTEGER, c INTEGER);

;
INSERT INTO test4 VALUES (-1, -10), (-2, -20), (3, 30), (-1, -10), (-2, -20), (3, 30), (-1, -10), (-2, -20), (3, 30), (-1, -10), (-2, -20), (3, 30), (-1, -10), (-2, -20), (3, 30)

# negative  keys inner join
;
SELECT a, test3.b,c FROM test3, test4 WHERE test3.b = test4.b order by a, test3.b,c ;
;
-12	-2	-20
-12	-2	-20
-12	-2	-20
-12	-2	-20
-12	-2	-20
-11	-1	-10
-11	-1	-10
-11	-1	-10
-11	-1	-10
-11	-1	-10
13	3	30
13	3	30
13	3	30
13	3	30
13	3	30

;
CREATE TABLE test5 (a INTEGER, b INTEGER);

;
INSERT INTO test5 VALUES (11, 1), (12, 2), (13, 3), (14, null), (null, 4)

;
CREATE TABLE test6 (b INTEGER, c INTEGER);

;
INSERT INTO test6 VALUES (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (4, 40), (null, 30), (1, null)

# inner join with nulls in the build and probe side
;
SELECT a, test5.b,c FROM test5, test6 WHERE test5.b = test6.b order by a, test5.b,c;
;
NULL	4	40
11	1	NULL
11	1	10
11	1	10
11	1	10
11	1	10
11	1	10
12	2	20
12	2	20
12	2	20
12	2	20
12	2	20
13	3	30
13	3	30
13	3	30
13	3	30
13	3	30


;
CREATE TABLE test7 (a INTEGER, b INTEGER);

;
INSERT INTO test7 VALUES (11, 1), (12, 2), (13, 3), (15, 5)

;
CREATE TABLE test8 (b INTEGER, c INTEGER);

;
INSERT INTO test8 VALUES (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (1, 10), (2, 20), (3, 30), (4, 40)

# inner join with non-matching keys in the build and in the probe side
;
SELECT a, test7.b,c FROM test7, test8 WHERE test7.b = test8.b order by a, test7.b,c ;
;
11	1	10
11	1	10
11	1	10
11	1	10
11	1	10
12	2	20
12	2	20
12	2	20
12	2	20
12	2	20
13	3	30
13	3	30
13	3	30
13	3	30
13	3	30

# create the table integers with the values 0..1026
;
CREATE TABLE test9 AS SELECT range r FROM range(0, 1026, 1);

;
CREATE TABLE test10 AS SELECT range r FROM range(0, 1025, 1);

# START LOOP 0..9
loop i 0 9

;
INSERT INTO test10 SELECT * FROM test9;

endloop

# inner join with bigger than vector size tuples
;
select test9.r, test10.r from test9,test10 where test9.r=test10.r order by test9.r, test10.r;
;
20518 values hashing to 43cfa09ff243deb128dd2bbcbb30527c

;
CREATE TABLE test11 (a INTEGER, b INTEGER);

;
INSERT INTO test11 VALUES (1, 1), (50000, 2), (13, 3), (NULL, NULL), (NULL, 20000), (20000, NULL)

;
CREATE TABLE test12 (b INTEGER, c INTEGER);

;
INSERT INTO test12 VALUES (1, 10), (2, 20), (50000, 30), (NULL, NULL), (20000, NULL), (NULL, 20000)

# simple inner join
;
SELECT a, test11.b,c FROM test11, test12 WHERE test11.b = test12.b order by a, test11.b,c;
;
NULL	20000	NULL
1	1	10
50000	2	20
