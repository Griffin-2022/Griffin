# name: test/sql/copy/csv/test_read_csv.test
# description: Test read CSV function
# group: [csv]

;
PRAGMA enable_verification

# read csv with explicit separator
;
CREATE TABLE abac_tbl (a VARCHAR, b VARCHAR, c VARCHAR);

;
INSERT INTO abac_tbl SELECT * FROM read_csv('test/sql/copy/csv/data/abac/abac.csv', COLUMNS=STRUCT_PACK(a := 'VARCHAR', b := 'VARCHAR', c := 'VARCHAR'), sep='ABAC', auto_detect='false')
;
1

;
SELECT * FROM abac_tbl
;
AB	ABAB	NULL

# dateformat
;
CREATE TABLE dates (d DATE);

# base date format does not work here
;
INSERT INTO dates SELECT * FROM read_csv('test/sql/copy/csv/data/test/dateformat.csv', columns=STRUCT_PACK(d := 'DATE'), header=0)

# have to specify it ourselves
;
INSERT INTO dates SELECT * FROM read_csv('test/sql/copy/csv/data/test/dateformat.csv', columns=STRUCT_PACK(d := 'DATE'), header=0, dateformat='%d/%m/%Y')

;
SELECT * FROM dates
;
2019-06-05

# dateformat should also work with auto format
;
INSERT INTO dates SELECT * FROM read_csv_auto('test/sql/copy/csv/data/test/dateformat.csv', dateformat='%m/%d/%Y')

;
SELECT * FROM dates ORDER BY 1
;
2019-05-06
2019-06-05

# we can also do this for timestamps
# as long as we make the date format fail
;
CREATE TABLE timestamps AS SELECT * FROM read_csv_auto('test/sql/copy/csv/data/test/dateformat.csv', dateformat='%Y-%m-%d', timestampformat='%m/%d/%Y')

;
SELECT * FROM timestamps
;
2019-05-06 00:00:00

# create a view using the read_csv function
;
CREATE VIEW lineitem AS SELECT * FROM read_csv('test/sql/copy/csv/data/real/lineitem_sample.csv', sep='|', columns=STRUCT_PACK(l_orderkey := 'INT', l_partkey := 'INT', l_suppkey := 'INT', l_linenumber := 'INT', l_quantity := 'INTEGER', l_extendedprice := 'DOUBLE', l_discount := 'DOUBLE', l_tax := 'DOUBLE', l_returnflag := 'VARCHAR', l_linestatus := 'VARCHAR', l_shipdate := 'DATE', l_commitdate := 'DATE', l_receiptdate := 'DATE', l_shipinstruct := 'VARCHAR', l_shipmode := 'VARCHAR', l_comment := 'VARCHAR'));

# each of these will read the CSV again through the view
;
SELECT COUNT(*) FROM lineitem
;
10

;
SELECT l_partkey, RTRIM(l_comment) FROM lineitem WHERE l_orderkey=1 ORDER BY l_linenumber;
;
15519	egular courts above the
6731	ly final dependencies: slyly bold
6370	riously. regular, express dep
214	lites. fluffily even de
2403	 pending foxes. slyly re
1564	arefully slyly ex

# test incorrect usage of read_csv function
# wrong argument type
;
SELECT * FROM read_csv('test/sql/copy/csv/data/real/lineitem_sample.csv', sep='|', columns=STRUCT_PACK(l_orderkey := 5))

