# name: test/sql/catalog/function/test_sequence_macro.test
# description: Test Sequence Macro
# group: [function]

;
CREATE TABLE integers (i INT)

;
INSERT INTO integers VALUES (42), (42)

;
CREATE SEQUENCE seq

# recursive CTE with sequences
;
CREATE MACRO in_next_n(x, s, n) AS x IN (
    WITH RECURSIVE cte AS (
            SELECT nextval(s) AS nxt, 1 AS iter
        UNION ALL
            SELECT nextval(s), iter + 1
            FROM cte
            WHERE iter < n
    )
    SELECT nxt
    FROM cte
)

;
SELECT in_next_n(3, 'seq', 5);
;
1

;
SELECT in_next_n(3, 'seq', 5);
;
0

;
SELECT in_next_n(12, 'seq', 5);
;
1

# overlapping param/column names can be disambiguated
;
CREATE MACRO in_next_n2(x, s, n) AS x IN (
    WITH RECURSIVE cte AS (
            SELECT nextval(s) AS nxt, n AS n
        UNION ALL
            SELECT nextval(s), cte.n - 1
            FROM cte
            WHERE cte.n > 1
    )
    SELECT nxt
    FROM cte
)

;
SELECT in_next_n2(17, 'seq', 5);
;
1

;
DROP SEQUENCE seq

;
CREATE SEQUENCE seq1

;
CREATE SEQUENCE seq2 INCREMENT BY 2 START WITH 2

;
CREATE MACRO test(s1, s2, x) AS nextval(s1) + nextval(s2) + x

;
SELECT test('seq1', 'seq2', i) FROM integers
;
45
48

;
DROP SEQUENCE seq1

;
DROP SEQUENCE seq2

# argument with side-effects not allowed
;
CREATE MACRO add(a, b) AS a + b

;
CREATE SEQUENCE seqq

# TODO: uncomment when macro parameters are pushed as a projection
#query T
#SELECT add(i + nextval('seqq'), 5) FROM integers
#----
#48
#48
