# name: test/sql/function/string/test_prefix.test
# description: Prefix test
# group: [string]

;
PRAGMA enable_verification

# "Early out prefix"
;
SELECT prefix('abcd', 'a')
;
1

;
SELECT prefix('abcd', 'ab')
;
1

;
SELECT prefix('abcd', 'abc')
;
1

;
SELECT prefix('abcd', 'abcd')
;
1

;
SELECT prefix('abcd', 'b')
;
0

# "Inlined string"
;
SELECT prefix('abcdefgh', 'a')
;
1

;
SELECT prefix('abcdefgh', 'ab')
;
1

;
SELECT prefix('abcdefgh', 'abc')
;
1

;
SELECT prefix('abcdefgh', 'abcd')
;
1

;
SELECT prefix('abcdefgh', 'abcde')
;
1

;
SELECT prefix('abcdefgh', 'b')
;
0

# Longer (non-inlined) strings
;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'a')
;
1

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'ab')
;
1

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abc')
;
1

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcd')
;
1

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcde')
;
1

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'b')
;
0

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcdefghijklmnopqrstuvwx')
;
1

;
SELECT prefix('abcdefghijklmnopqrstuvwxyz', 'abcfefghijklmnopqrstuvwx')
;
0

# "Empty string and prefix"
;
SELECT prefix('', 'aaa')
;
0

;
SELECT prefix('aaa', '')
;
1

# "Issue #572 alloc exception on empty table"
;
CREATE TABLE t0(c0 VARCHAR)

;
SELECT * FROM t0 WHERE PREFIX(t0.c0, '')
;

# "Prefix test with UTF8"
;
SELECT prefix('Ã¡tomo', 'Ã¡')
;
1

;
SELECT prefix('Ã¡tomo', 'Ã¡')
;
1

;
SELECT prefix('Ã¡tomo', 'a')
;
0

;
SELECT prefix('olÃ¡ mundo', 'olÃ¡')
;
1

;
SELECT prefix('olÃ¡ mundo', 'olÃ¡')
;
1

;
SELECT prefix('olÃ¡ mundo', 'ola')
;
0

;
SELECT prefix('Ã±eft', 'Ã±')
;
1

;
SELECT prefix('Ã±eft', 'Ã±')
;
1

;
SELECT prefix('Ã±eft', 'Ã±eft')
;
1

;
SELECT prefix('Ã±eft', 'neft')
;
0

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã±')
;
1

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã±')
;
1

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two n')
;
0

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three')
;
1

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡')
;
1

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡ four ðŸ¦†')
;
1

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡ four ðŸ¦† end')
;
1

;
SELECT prefix('two Ã± three â‚¡ four ðŸ¦† end', 'two Ã± three â‚¡ four ðŸ¦† end')
;
1

# test empty prefix removal
;
INSERT INTO t0 VALUES ('a'), ('b'), ('d')

;
SELECT COUNT(*) FROM t0 WHERE prefix(t0.c0, '');
;
3

;
SELECT c0, prefix(t0.c0, '') FROM t0 WHERE c0 <> 'b' ORDER BY t0.c0;
;
a	1
d	1


# now with a NULL value
;
INSERT INTO t0 VALUES (NULL)

;
SELECT COUNT(*) FROM t0 WHERE prefix(t0.c0, '');
;
3

;
SELECT c0, prefix(t0.c0, '') FROM t0 WHERE c0 IS NULL OR c0 <> 'b' ORDER BY t0.c0;
;
NULL	NULL
a	1
d	1
