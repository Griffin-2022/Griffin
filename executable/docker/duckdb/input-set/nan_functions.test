# name: test/sql/types/float/nan_functions.test
# description: Test functions on NaN values
# group: [float]

;
PRAGMA enable_verification

foreach type FLOAT DOUBLE

# nextafter
;
SELECT nextafter(3, '-inf'::${type})
;
3.0

;
SELECT nextafter(3, 'inf'::${type})
;
3.0

;
SELECT nextafter('inf'::${type}, 'inf'::${type})
;
inf

;
SELECT nextafter('-inf'::${type}, '-inf'::${type})
;
-inf


;
SELECT nextafter('nan'::${type}, '-inf'::${type})
;
nan

;
SELECT nextafter(0, 'nan'::${type})
;
nan

# sign
;
SELECT sign('-inf'::${type})
;
-1

;
SELECT sign('inf'::${type})
;
1

;
SELECT sign('nan'::${type})
;
0

# nop unary functions
foreach unary_func ceil floor round

;
SELECT ${unary_func}('-inf'::${type})
;
-inf

;
SELECT ${unary_func}('inf'::${type})
;
inf

;
SELECT ${unary_func}('nan'::${type})
;
nan

endloop

;
create table floats(f ${type});

;
insert into floats values ('inf'), ('-inf'), ('nan');

# several numeric functions
;
select f, abs(f), exp(f), pow(f, 2), sqrt(case when f < 0 then NULL else f end), cbrt(f), ln(case when f < 0 then NULL else f end), degrees(f), radians(f), gamma(f), lgamma(f), atan(f), atan2(f, 0)
from floats;
;
inf	inf	inf	inf	inf	inf	inf	inf	inf	inf	inf	1.570796	1.570796
-inf	inf	0.000000	inf	NULL	-inf	NULL	-inf	-inf	nan	inf	-1.570796	-1.570796
nan	nan	nan	nan	nan	nan	nan	nan	nan	nan	nan	nan	nan

# numeric functions that are undefined on infinity
foreach unary_func sin sin cos tan asin acos cot

;
select ${unary_func}('inf'::${type})

;
select ${unary_func}('-inf'::${type})

;
select ${unary_func}('nan'::${type})
;
nan

endloop

;
drop table floats

endloop

;
SELECT nextafter('inf'::float, '-inf'::float)
;
340282346638528859811704183484516925440.000000

;
SELECT nextafter('-inf'::float, 'inf'::float)
;
-340282346638528859811704183484516925440.000000

;
SELECT nextafter('inf'::double, '-inf'::double)
;
179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000

;
SELECT nextafter('-inf'::double, 'inf'::double)
;
-179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000
