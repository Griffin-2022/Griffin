# name: test/sql/order/test_nulls_first.test
# description: Test NULLS FIRST/NULLS LAST
# group: [order]

;
PRAGMA enable_verification

;
CREATE TABLE integers(i INTEGER)

;
INSERT INTO integers VALUES (1), (NULL)

# default is NULLS FIRST
;
SELECT * FROM integers ORDER BY i
;
NULL
1

;
SELECT * FROM integers ORDER BY i NULLS FIRST
;
NULL
1

;
SELECT * FROM integers ORDER BY i NULLS LAST
;
1
NULL

;
SELECT 10 AS j, i FROM integers ORDER BY j, i NULLS LAST
;
10	1
10	NULL

# multiple columns with a mix
;
CREATE TABLE test(i INTEGER, j INTEGER)

;
INSERT INTO test VALUES (1, 1), (NULL, 1), (1, NULL)

;
SELECT * FROM test ORDER BY i NULLS FIRST, j NULLS LAST
;
NULL	1
1	1
1	NULL

;
SELECT * FROM test ORDER BY i NULLS FIRST, j NULLS FIRST
;
NULL	1
1	NULL
1	1

;
SELECT * FROM test ORDER BY i NULLS LAST, j NULLS FIRST
;
1	NULL
1	1
NULL	1

# now in window functions
;
SELECT i, j, row_number() OVER (PARTITION BY i ORDER BY j NULLS FIRST) FROM test ORDER BY i NULLS FIRST, j NULLS FIRST;
;
NULL	1	1
1	NULL	1
1	1	2

;
SELECT i, j, row_number() OVER (PARTITION BY i ORDER BY j NULLS LAST) FROM test ORDER BY i NULLS FIRST, j NULLS FIRST;
;
NULL	1	1
1	NULL	2
1	1	1

# TOP N
;
SELECT * FROM test ORDER BY i NULLS FIRST, j NULLS LAST LIMIT 2
;
NULL	1
1	1

;
SELECT * FROM test ORDER BY i NULLS LAST, j NULLS LAST LIMIT 2
;
1	1
1	NULL

# Test NULLS FIRST/NULLS LAST PRAGMA
# default is NULLS FIRST
;
SELECT * FROM integers ORDER BY i
;
NULL
1

# changed default now
;
PRAGMA default_null_order='NULLS LAST'

;
SELECT * FROM integers ORDER BY i
;
1
NULL

;
PRAGMA default_null_order='NULLS FIRST'

;
PRAGMA default_null_order())

;
PRAGMA default_null_order='UNKNOWN'

;
PRAGMA default_null_order=UNKNOWN)

;
PRAGMA default_null_order=3)

