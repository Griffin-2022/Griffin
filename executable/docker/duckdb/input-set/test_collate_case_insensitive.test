# name: test/sql/collate/test_collate_case_insensitive.test
# description: Test case insensitive collation
# group: [collate]

;
CREATE TABLE collate_test(s VARCHAR COLLATE NOCASE)

;
INSERT INTO collate_test VALUES ('hello'), ('WoRlD'), ('world'), ('Mühleisen')

# collate in equality
;
SELECT * FROM collate_test WHERE s='HeLlo'
;
hello

;
SELECT * FROM collate_test WHERE s='MÜhleisen'
;
Mühleisen

;
SELECT * FROM collate_test WHERE s='world'
;
WoRlD
world

# collate in join
;
CREATE TABLE collate_join_table(s VARCHAR, i INTEGER)

;
INSERT INTO collate_join_table VALUES ('HeLlO', 1), ('mÜHLEISEN', 3)

;
SELECT collate_test.s, collate_join_table.s, i FROM collate_test JOIN collate_join_table ON (collate_test.s=collate_join_table.s) ORDER BY i
;
hello	HeLlO	1
Mühleisen	mÜHLEISEN	3

;
DROP TABLE collate_test

# ORDER BY with collation
;
CREATE TABLE collate_test(s VARCHAR COLLATE NOCASE)

;
INSERT INTO collate_test VALUES ('Hallo'), ('ham'), ('HELLO'), ('hElp')

;
SELECT * FROM collate_test ORDER BY s
;
Hallo
ham
HELLO
hElp

;
DROP TABLE collate_test

# DISTINCT with collation
;
CREATE TABLE collate_test(s VARCHAR COLLATE NOCASE)

;
INSERT INTO collate_test VALUES ('Hallo'), ('hallo')

;
SELECT DISTINCT s FROM collate_test
;
Hallo


# LIKE with collation: not yet supported
# REQUIRE_NO_FAIL(con.Query("DROP TABLE collate_test"));
# REQUIRE_NO_FAIL(con.Query("CREATE TABLE collate_test(s VARCHAR COLLATE NOCASE)"));
# REQUIRE_NO_FAIL(con.Query("INSERT INTO collate_test VALUES ('Hallo'), ('hallo')"));

# result = con.Query("SELECT * FROM collate_test WHERE s LIKE 'h%'");
# REQUIRE(CHECK_COLUMN(result, 0, {"Hallo", "hallo"}));
# result = con.Query("SELECT * FROM collate_test WHERE s LIKE 'HA%'");
# REQUIRE(CHECK_COLUMN(result, 0, {"Hallo", "hallo"}));