# name: test/sql/overflow/test_overflow.test
# description: Test handling of overflows in basic types
# group: [overflow]

;
PRAGMA enable_verification

;
CREATE TABLE test (a INTEGER, b INTEGER);

# insert too large value for domain should cause error
;
INSERT INTO test VALUES (-1099511627776, 3)

;
INSERT INTO test VALUES (11, 22), (12, 21), (14, 22)

# Casting NULL should still work though
;
SELECT ALL CAST ( - SUM ( DISTINCT - CAST ( NULL AS INTEGER ) ) AS INTEGER ) FROM test
;
NULL

# proper upcasting of integer columns in AVG
;
SELECT b, AVG(a) FROM test GROUP BY b ORDER BY b;
;
21	12.000000
22	12.500000

# cast overflows
;
SELECT cast(200 AS TINYINT)

;
SELECT cast(-129 AS TINYINT)

# addition overflow
;
SELECT cast(100 AS TINYINT) + cast(100 AS TINYINT)

# also with tables
;
CREATE TABLE test2 (a INTEGER, b TINYINT);

;
INSERT INTO test2 VALUES (200, 60), (12, 60), (14, 60)

;
SELECT cast(a AS TINYINT) FROM test2

;
SELECT SUM(b) FROM test2
;
180

# subtraction
;
SELECT 100::TINYINT - -50::TINYINT

;
SELECT 100::TINYINT * 2::TINYINT

# tables
;
SELECT 100::TINYINT + b::TINYINT FROM test2

;
SELECT 100::TINYINT - -b::TINYINT FROM test2

;
SELECT 100::TINYINT * b::TINYINT FROM test2

# more complex expressions
;
SELECT a + b FROM (SELECT cast(100 AS TINYINT) AS a, cast(100 AS TINYINT) AS b) tbl1
