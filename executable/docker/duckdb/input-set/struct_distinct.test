# name: test/sql/types/struct/struct_distinct.test
# description: Test STRUCT distinctions
# group: [struct]

;
PRAGMA enable_verification

# Constant single integer column distinct
;
SELECT {'x': 1} IS NOT DISTINCT FROM {'x': 2}
;
false

;
SELECT {'x': 1} IS NOT DISTINCT FROM {'x': 1}
;
true

;
SELECT NULL IS NOT DISTINCT FROM {'x': 1}
;
false

;
SELECT {'x': 1} IS DISTINCT FROM {'x': 2}
;
true

;
SELECT {'x': 1} IS DISTINCT FROM {'x': 1}
;
false

;
SELECT {'x': 1} IS DISTINCT FROM NULL
;
true

;
CREATE VIEW struct_int AS SELECT * FROM (VALUES
	({'x': 1}, {'x': 1}),
	({'x': 1}, {'x': 2}),
	({'x': 2}, {'x': 1}),
	(NULL, {'x': 1}),
	({'x': 2}, NULL),
	(NULL, NULL)
	) tbl(l, r);

;
SELECT l IS NOT DISTINCT FROM r FROM struct_int
;
true
false
false
false
false
true

;
SELECT l IS DISTINCT FROM r FROM struct_int
;
false
true
true
true
true
false

# Constant single string column distinct
;
SELECT {'x': 'duck'} IS NOT DISTINCT FROM {'x': 'goose'}
;
false

;
SELECT {'x': 'duck'} IS NOT DISTINCT FROM {'x': 'duck'}
;
true


;
SELECT {'x': 'duck'} IS NOT DISTINCT FROM NULL
;
false

;
SELECT NULL IS NOT DISTINCT FROM {'x': 'duck'}
;
false

;
SELECT {'x': 'duck'} IS DISTINCT FROM {'x': 'goose'}
;
true

;
SELECT {'x': 'duck'} IS DISTINCT FROM {'x': 'duck'}
;
false

;
SELECT {'x': 'duck'} IS DISTINCT FROM NULL
;
true

;
SELECT NULL IS DISTINCT FROM {'x': 'duck'}
;
true

;
CREATE VIEW struct_str AS SELECT * FROM (VALUES
	({'x': 'duck'}, {'x': 'duck'}),
	({'x': 'duck'}, {'x': 'goose'}),
	({'x': 'goose'}, {'x': 'duck'}),
	(NULL, {'x': 'duck'}),
	({'x': 'goose'}, NULL),
	(NULL, NULL)
	) tbl(l, r);

;
SELECT l IS NOT DISTINCT FROM r FROM struct_str
;
true
false
false
false
false
true

;
SELECT l IS DISTINCT FROM r FROM struct_str
;
false
true
true
true
true
false

# Constant string, integer column distinct
;
SELECT {'x': 'duck', 'y': 1} IS NOT DISTINCT FROM {'x': 'goose', 'y': 2}
;
false

;
SELECT {'x': 'duck', 'y': 1} IS NOT DISTINCT FROM {'x': 'duck', 'y': 1}
;
true

;
SELECT NULL IS NOT DISTINCT FROM {'x': 'duck', 'y': 1}
;
false

;
SELECT {'x': 'duck', 'y': 1} IS NOT DISTINCT FROM NULL
;
false

;
SELECT {'x': 'duck', 'y': 1} IS DISTINCT FROM {'x': 'goose', 'y': 2}
;
true

;
SELECT {'x': 'duck', 'y': 1} IS DISTINCT FROM {'x': 'duck', 'y': 1}
;
false

;
SELECT NULL IS DISTINCT FROM {'x': 'duck', 'y': 1}
;
true

;
SELECT {'x': 'duck', 'y': 1} IS DISTINCT FROM NULL
;
true

;
CREATE VIEW struct_str_int AS SELECT * FROM (VALUES
	({'x': 'duck', 'y': 1}, {'x': 'duck', 'y': 1}),
	({'x': 'duck', 'y': 1}, {'x': 'goose', 'y': 2}),
	({'x': 'goose', 'y': 2}, {'x': 'duck', 'y': 1}),
	(NULL, {'x': 'duck', 'y': 1}),
	({'x': 'goose', 'y': 2}, NULL),
	(NULL, NULL)
	) tbl(l, r);

;
SELECT l IS NOT DISTINCT FROM r FROM struct_str_int
;
true
false
false
false
false
true

;
SELECT l IS DISTINCT FROM r FROM struct_str_int
;
false
true
true
true
true
false

# Nested structs

;
SELECT {'x': 1, 'y': {'a': 'duck', 'b': 1.5}} IS NOT DISTINCT FROM {'x': 2, 'y': {'a': 'goose', 'b': 2.5}}
;
false

;
SELECT {'x': 1, 'y': {'a': 'duck', 'b': 1.5}} IS NOT DISTINCT FROM {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}
;
true

;
SELECT NULL IS NOT DISTINCT FROM {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}
;
false

;
SELECT {'x': 1, 'y': {'a': 'duck', 'b': 1.5}} IS NOT DISTINCT FROM NULL
;
false

;
SELECT {'x': 1, 'y': {'a': 'duck', 'b': 1.5}} IS DISTINCT FROM {'x': 2, 'y': {'a': 'goose', 'b': 2.5}}
;
true

;
SELECT {'x': 1, 'y': {'a': 'duck', 'b': 1.5}} IS DISTINCT FROM {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}
;
false

;
SELECT NULL IS DISTINCT FROM {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}
;
true

;
SELECT {'x': 1, 'y': {'a': 'duck', 'b': 1.5}} IS DISTINCT FROM NULL
;
true

;
CREATE VIEW struct_nested AS SELECT * FROM (VALUES
	({'x': 1, 'y': {'a': 'duck', 'b': 1.5}}, {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}),
	({'x': 1, 'y': {'a': 'duck', 'b': 1.5}}, {'x': 2, 'y': {'a': 'goose', 'b': 2.5}}),
	({'x': 2, 'y': {'a': 'goose', 'b': 2.5}}, {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}),
	(NULL, {'x': 1, 'y': {'a': 'duck', 'b': 1.5}}),
	({'x': 2, 'y': {'a': 'goose', 'b': 2.5}}, NULL),
	(NULL, NULL)
	) tbl(l, r);

;
SELECT l IS NOT DISTINCT FROM r FROM struct_nested
;
true
false
false
false
false
true

;
SELECT l IS DISTINCT FROM r FROM struct_nested
;
false
true
true
true
true
false

# List nested inside struct
;
SELECT {'x': 1, 'y': ['duck', 'somateria']} IS NOT DISTINCT FROM {'x': 2, 'y': ['goose']}
;
false

;
SELECT {'x': 1, 'y': ['duck', 'somateria']} IS NOT DISTINCT FROM {'x': 1, 'y': ['duck', 'somateria']}
;
true

;
SELECT NULL IS NOT DISTINCT FROM {'x': 1, 'y': ['duck', 'somateria']}
;
false

;
SELECT {'x': 1, 'y': ['duck', 'somateria']} IS NOT DISTINCT FROM NULL
;
false

;
SELECT {'x': 1, 'y': ['duck', 'somateria']} IS DISTINCT FROM {'x': 2, 'y': ['goose']}
;
true

;
SELECT {'x': 1, 'y': ['duck', 'somateria']} IS DISTINCT FROM {'x': 1, 'y': ['duck', 'somateria']}
;
false

;
SELECT NULL IS DISTINCT FROM {'x': 1, 'y': ['duck', 'somateria']}
;
true

;
SELECT {'x': 1, 'y': ['duck', 'somateria']} IS DISTINCT FROM NULL
;
true

;
CREATE VIEW list_in_struct AS SELECT * FROM (VALUES
	({'x': 1, 'y': ['duck', 'somateria']}, {'x': 1, 'y': ['duck', 'somateria']}),
	({'x': 1, 'y': ['duck', 'somateria']}, {'x': 2, 'y': ['goose']}),
	({'x': 2, 'y': ['goose']}, {'x': 1, 'y': ['duck', 'somateria']}),
	(NULL, {'x': 1, 'y': ['duck', 'somateria']}),
	({'x': 2, 'y': ['goose']}, NULL),
	(NULL, NULL)
	) tbl(l, r);

;
SELECT l IS NOT DISTINCT FROM r FROM list_in_struct
;
true
false
false
false
false
true

;
SELECT l IS DISTINCT FROM r FROM list_in_struct
;
false
true
true
true
true
false

# Filter by constant
;
select CASE WHEN a < 4 THEN {'x': a, 'y': a+1, 'z': a+2} ELSE NULL END IS NOT DISTINCT FROM {'x': 1, 'y': 2, 'z': 3}
from range(5) tbl(a);
;
false
true
false
false
false

;
select CASE WHEN a < 4 THEN {'x': a, 'y': a+1, 'z': a+2} ELSE NULL END IS DISTINCT FROM {'x': 1, 'y': 2, 'z': 3}
from range(5) tbl(a);
;
true
false
true
true
true
